{"ast":null,"code":"var _jsxFileName = \"/home/asus2/Frontend-React.JS-QuickStart/src/containers/Patient/Doctor/DoctorSchedule.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport './DoctorSchedule.scss';\nimport moment from 'moment';\nimport localization from 'moment/locate/vi';\nimport { LANGUAGES } from '../../../utils';\nimport { getScheduleDoctorByDate } from '../../../services/userService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DoctorSchedule extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setArrDays = language => {\n      let allDays = [];\n\n      for (let i = 0; i < 7; i++) {\n        let object = {};\n\n        if (language === LANGUAGES.VI) {\n          object.label = moment(new Date()).add(i, 'days').format('dddd - DD/MM');\n        } else {\n          object.label = moment(new Date()).add(i, 'days').locale('en').format(\"ddd - DD/MM\");\n        }\n\n        object.value = moment(new Date()).add(i, 'days').startOf('day').valueOf();\n      }\n\n      this.setState({\n        allDays: allDays\n      });\n    };\n\n    this.handleOnChangeSelect = async event => {\n      if (this, this.props.doctorIdFromParent && this.props.doctorIdFromParent !== -1) {\n        let docotorId = this.props.docotorIdFromParent;\n        let date = event.target.value;\n        let res = await getScheduleDoctorByDate(docotorId, date);\n        console.log('check res schedule from react: ', res);\n      }\n    };\n\n    this.state = {\n      allDays: []\n    };\n  }\n\n  async componentDidMount() {\n    let {\n      language\n    } = this.props;\n    console.log('moment vie: ', monent(new Date()).format('dddd - DD/MM'));\n    this.setArrDays(language);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.language !== prevProps.language) {\n      this.setArrDays(this.props.language);\n    }\n  }\n\n  render() {\n    let {\n      allDays\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"doctor-schedule-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all-schedule\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: event => this.handleOnChangeSelect(event),\n          children: allDays && allDays.length > 0 && allDays.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item.value,\n              children: item.label\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all-available-time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorSchedule);","map":{"version":3,"sources":["/home/asus2/Frontend-React.JS-QuickStart/src/containers/Patient/Doctor/DoctorSchedule.js"],"names":["React","Component","connect","moment","localization","LANGUAGES","getScheduleDoctorByDate","DoctorSchedule","constructor","props","setArrDays","language","allDays","i","object","VI","label","Date","add","format","locale","value","startOf","valueOf","setState","handleOnChangeSelect","event","doctorIdFromParent","docotorId","docotorIdFromParent","date","target","res","console","log","state","componentDidMount","monent","componentDidUpdate","prevProps","prevState","snapshot","render","length","map","item","index","mapStateToProps","app","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport { connect } from \"react-redux\";\nimport './DoctorSchedule.scss';\nimport moment from 'moment';\nimport localization from 'moment/locate/vi';\nimport {LANGUAGES} from '../../../utils';\nimport {getScheduleDoctorByDate} from '../../../services/userService';\nclass DoctorSchedule extends Component {\n    constructor(props){\n        super(props);\n            this.state = {\n                allDays: [],\n            }\n    }\n    async componentDidMount() {\n        let {language} = this.props;  \n        console.log('moment vie: ', monent(new Date()).format('dddd - DD/MM'));\n        this.setArrDays(language);       \n    }\n    setArrDays = (language) => {\n        let allDays = []\n        for (let i = 0; i<7; i++) {\n            let object = {};\n            if (language === LANGUAGES.VI){\n                object.label = moment(new Date()).add(i, 'days').format('dddd - DD/MM');\n            }else{\n                object.label = moment(new Date()).add(i, 'days').locale('en').format(\"ddd - DD/MM\");\n            }\n            object.value = moment(new Date()).add(i, 'days').startOf('day').valueOf();\n        }\n        this.setState({\n            allDays: allDays,\n        })\n    }\n    componentDidUpdate(prevProps, prevState, snapshot){\n        if(this.props.language !== prevProps.language) {\n            this.setArrDays(this.props.language);\n        }\n    }\n    handleOnChangeSelect = async (event) => {\n        if (this,this.props.doctorIdFromParent && this.props.doctorIdFromParent !== -1){\n            let docotorId = this.props.docotorIdFromParent;\n            let date = event.target.value;\n            let res = await getScheduleDoctorByDate(docotorId, date);\n            console.log('check res schedule from react: ', res)\n        }\n    }\n    render() {\n        let {allDays} = this.state;\n        return(\n            <div className=\"doctor-schedule-container\">\n                <div className=\"all-schedule\">\n                    <select onChange={(event) => this.handleOnChangeSelect(event)}>\n                        {allDays && allDays.length > 0 &&\n                            allDays.map((item, index) =>{\n                                return(\n                                    <option\n                                        value={item.value}\n                                        key={index}\n                                    >\n                                        {item.label}\n                                    </option>\n                                )\n                            })}\n                    </select>\n                </div>\n                <div className=\"all-available-time\">\n\n                </div>\n            </div>\n        );\n    }\n    \n}\nconst mapStateToProps = state => {\n    return{\n        language: state.app.language,\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return{};\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorSchedule);"]},"metadata":{},"sourceType":"module"}