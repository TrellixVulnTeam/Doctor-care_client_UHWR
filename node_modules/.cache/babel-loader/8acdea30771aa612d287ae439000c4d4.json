{"ast":null,"code":"var _jsxFileName = \"/home/asus2/Frontend-React.JS-QuickStart/src/containers/Patient/Doctor/Modal/BookingModal.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\nimport './BookingModal.scss';\nimport { Modal } from 'reactstrap';\nimport ProfileDoctor from '../ProfileDoctor';\nimport _ from 'lodash';\nimport DatePicker from '../../../../components/Input/DatePicker';\nimport * as actions from '../../../../store/actions';\nimport { LANGUAGES } from '../../../../utils';\nimport Select from 'react-select';\nimport { postPatientBookAppointment } from '../../../../services/userService';\nimport { toast } from \"react-toastify\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BookingModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.buildDataGender = data => {\n      let result = [];\n      let language = this.props.language;\n\n      if (data && data.length > 0) {\n        data.map(item => {\n          let object = {};\n          object.label = language === LANGUAGES.VI ? item.valueVI : item.valueEN;\n          object.value = item.keyMap;\n          result.push(object);\n        });\n      }\n\n      return result;\n    };\n\n    this.buildTimeBooking = dataTime => {\n      let {\n        language\n      } = this.props;\n\n      if (dataTime && !_.isEmpty(dataTime)) {\n        let time = language === LANGUAGES.VI ? dataTime.timeTypeData.valueVi : dataTime.timeTypeData.valueEn;\n        let date = language === LANGUAGES.VI ? moment.unix(+dataTime.date / 1000).format('dddd- DD/MM/YYYY') : moment.unix(+dataTime / 1000).locale('en').format('ddd - MM/DD/YYYY');\n        return `${time} - ${date}`;\n      }\n\n      return '';\n    };\n\n    this.buildDoctorName = dataTime => {\n      let {\n        language\n      } = this.props;\n\n      if (dataTime && !_.isEmpty(dataTime)) {\n        let name = language === LANGUAGES.VI ? `${dataTime.doctorData.lastName} ${DataTime.doctorData.firstName}` : `${dataTime.doctorData.firstName} ${dataTime.doctorData.lastName}`;\n        return name;\n      }\n\n      return '';\n    };\n\n    this.handleOnchangeInput = (event, id) => {\n      let valueInput = event.target.value;\n      let stateCopy = { ...this.state\n      };\n      stateCopy[id] = valueInput;\n      this.setState({ ...stateCopy\n      });\n    };\n\n    this.handleOnchangeDatePicker = date => {\n      this.setState({\n        birthday: date[0]\n      });\n    };\n\n    this.handleChangeSelect = selectedOption => {\n      this.setState({\n        selectedGender: selectedOption\n      });\n    };\n\n    this.handleConfirmBooking = async () => {\n      let date = new Date(this.state.birthday).getTime();\n      let timeString = this.buildTimeBooking(this.props.dataTime);\n      let doctorName = this.buildDoctorName(this.props.dataTime);\n      let res = await postPatientBookAppointment({\n        fullName: this.state.fullName,\n        phoneNumber: this.state.phoneNumber,\n        email: this.state.email,\n        address: this.state.address,\n        reason: this.state.reason,\n        date: date,\n        selectedGender: this.state.selectedGender.value,\n        doctorId: this.state.doctorId,\n        timeType: this.state.timeType,\n        language: this.props.language,\n        timeString: timeString,\n        doctorName: doctorName\n      });\n\n      if (res && res.errCode === 0) {\n        toast.success('Booking a new appointment succeed!');\n        this.props.closeBookingClose();\n      } else {\n        toast.error('Booking a new appointment error!');\n        console.log(res);\n      }\n    };\n\n    this.state = {\n      fullName: '',\n      phoneNumber: '',\n      email: '',\n      reason: '',\n      birthday: '',\n      selectedGender: '',\n      doctorId: '',\n      genders: '',\n      timeType: ''\n    };\n  }\n\n  async componentDidMount() {\n    this.props.getGenders();\n  }\n\n  async componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.language !== prevProps.language) {\n      this.setState({\n        genders: this.buildDataGender(this.props.genders)\n      });\n    }\n\n    if (this.props.genders !== prevProps.genders) {\n      this.setState({\n        genders: this.buildDataGender(this.props.genders)\n      });\n    }\n\n    if (this.props.dataTime !== prevProps.dataTime) {\n      if (this.props.dataTime && !_.isEmpty(this.props.dataTime)) {\n        let doctorId = this.props.dataTime.doctorId;\n        let timeType = this.props.dataTime.timeType;\n        this.setState({\n          doctorId: doctorId,\n          timeType: timeType\n        });\n      }\n    }\n  }\n\n  render() {\n    //toggle={}\n    let {\n      isOpenModal,\n      closeBookingClose,\n      dataTime\n    } = this.props;\n    let doctorId = '';\n\n    if (dataTime && !_.isEmpty(dataTime)) {\n      doctorId = dataTime.doctorId;\n    }\n\n    console.log('check datatime:', this.state);\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpenModal,\n      className: 'booking-modal-container',\n      size: \"lg\",\n      centered: true //backdrop={true}\n      ,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"booking-modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"booking-modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"left\",\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"patient.booking-modal.title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"right\",\n            onClick: closeBookingClose,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-times\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"booking-modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"doctor-infor\",\n            children: /*#__PURE__*/_jsxDEV(ProfileDoctor, {\n              doctorId: doctorId,\n              isShowDescriptionDoctor: false,\n              dataTime: dataTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-6 form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                  id: \"patient.booking-modal.fullName\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 40\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                value: this.state.fullName,\n                onChange: event => this.handleOnchangeInput(event, 'fullName')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-6 form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                  id: \"patient.booking-modal.phoneNumber\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 40\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                value: this.state.phoneNumber,\n                onChange: event => this.handleOnchangeInput(event, 'phoneNumber')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-6 form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                  id: \"patient.booking-modal.email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 40\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                value: this.state.email,\n                onChange: event => this.handleOnchangeInput(event, 'email')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-6 form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                  id: \"patient.booking-modal.address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 40\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                value: this.state.address,\n                onChange: event => this.handleOnchangeInput(event, 'address')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                  id: \"patient.booking-modal.reason\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 40\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                value: this.state.reason,\n                onChange: event => this.handleOnchangeInput(event, 'reason')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-6 form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                  id: \"patient.booking-modal.birthday\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 40\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                onChange: this.handleOnchangeDatePicker,\n                className: \"form-control\",\n                value: this.state.birthday\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-6 form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                  id: \"patient.booking-modal.gender\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 40\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: this.state.selectedGender,\n                onChange: this.handleChangeSelect,\n                options: this.state.genders\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"booking-modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-booking-confirm\",\n            onClick: () => this.handleConfirmBooking(),\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"patient.booking-modal.btnConfirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-booking-cancel\",\n            onClick: closeBookingClose,\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"patient.booking-modal.btnCancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getGenders: () => dispatch(actions.fetchGenderStart())\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language,\n    genders: state.admin.genders\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookingModal);","map":{"version":3,"sources":["/home/asus2/Frontend-React.JS-QuickStart/src/containers/Patient/Doctor/Modal/BookingModal.js"],"names":["React","Component","connect","FormattedMessage","Modal","ProfileDoctor","_","DatePicker","actions","LANGUAGES","Select","postPatientBookAppointment","toast","moment","BookingModal","constructor","props","buildDataGender","data","result","language","length","map","item","object","label","VI","valueVI","valueEN","value","keyMap","push","buildTimeBooking","dataTime","isEmpty","time","timeTypeData","valueVi","valueEn","date","unix","format","locale","buildDoctorName","name","doctorData","lastName","DataTime","firstName","handleOnchangeInput","event","id","valueInput","target","stateCopy","state","setState","handleOnchangeDatePicker","birthday","handleChangeSelect","selectedOption","selectedGender","handleConfirmBooking","Date","getTime","timeString","doctorName","res","fullName","phoneNumber","email","address","reason","doctorId","timeType","errCode","success","closeBookingClose","error","console","log","genders","componentDidMount","getGenders","componentDidUpdate","prevProps","prevState","snapshot","render","isOpenModal","mapDispatchToProps","dispatch","fetchGenderStart","mapStateToProps","app","admin"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\nimport './BookingModal.scss';\nimport {Modal} from 'reactstrap';\nimport ProfileDoctor from '../ProfileDoctor';\nimport _ from 'lodash';\nimport DatePicker from '../../../../components/Input/DatePicker';\nimport * as actions from '../../../../store/actions';\nimport {LANGUAGES} from '../../../../utils';\nimport Select from 'react-select';\nimport {postPatientBookAppointment} from '../../../../services/userService';\nimport {toast} from \"react-toastify\";\nimport moment from \"moment\";\n\nclass BookingModal extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            fullName: '',\n            phoneNumber: '',\n            email:'',\n            reason:'',\n            birthday:'',\n            selectedGender:'',\n            doctorId:'',\n            genders:'',\n            timeType:'',\n        }\n    }\n    async componentDidMount(){\n        this.props.getGenders();\n    }\n\n    buildDataGender = (data) => {\n        let result = [];\n        let language = this.props.language;\n        if(data && data.length > 0){\n            data.map(item => {\n                let object = {};\n                object.label = language === LANGUAGES.VI ? item.valueVI : item.valueEN;\n                object.value = item.keyMap;\n                result.push(object)\n            })\n        }\n        return result;\n    }\n\n    buildTimeBooking = (dataTime) => {\n        let {language} = this.props;\n        if (dataTime && !_.isEmpty(dataTime)){\n            let time = language === LANGUAGES.VI ?\n                dataTime.timeTypeData.valueVi : dataTime.timeTypeData.valueEn;\n            let date = language === LANGUAGES.VI ?\n                moment.unix(+dataTime.date /1000).format('dddd- DD/MM/YYYY')\n                :\n                moment.unix(+dataTime/1000).locale('en').format('ddd - MM/DD/YYYY');\n            return `${time} - ${date}`    \n\n        }\n        return ''\n    }\n\n    buildDoctorName = (dataTime) => {\n        let {language} = this.props;\n        if(dataTime && !_.isEmpty(dataTime)){\n            let name = language === LANGUAGES.VI ?\n                `${dataTime.doctorData.lastName} ${DataTime.doctorData.firstName}`\n                :\n                `${dataTime.doctorData.firstName} ${dataTime.doctorData.lastName}`\n            return name;\n\n        }\n        return ''\n    }\n\n    async componentDidUpdate(prevProps, prevState, snapshot){\n        if (this.props.language !== prevProps.language){\n            this.setState({\n                genders:this.buildDataGender(this.props.genders)\n            })\n        }\n        if (this.props.genders !== prevProps.genders){\n            this.setState({\n                genders: this.buildDataGender(this.props.genders)\n            })\n        }\n        if(this.props.dataTime !== prevProps.dataTime){\n            if(this.props.dataTime && !_.isEmpty(this.props.dataTime)){\n                let doctorId = this.props.dataTime.doctorId;\n                let timeType = this.props.dataTime.timeType;\n                this.setState({\n                    doctorId: doctorId,\n                    timeType: timeType\n                })\n            }\n        }\n    }\n\n    handleOnchangeInput = (event, id) =>  {\n        let valueInput = event.target.value;\n        let stateCopy = {...this.state};\n        stateCopy[id] = valueInput;\n        this.setState({\n            ...stateCopy\n        })\n    }\n\n    handleOnchangeDatePicker = (date) => {\n        this.setState({\n            birthday: date[0]\n        })\n    }\n    handleChangeSelect = (selectedOption) => {\n        this.setState({selectedGender: selectedOption});\n    }\n    handleConfirmBooking = async () => {\n        let date = new Date(this.state.birthday).getTime();\n        let timeString = this.buildTimeBooking(this.props.dataTime);\n        let doctorName = this.buildDoctorName(this.props.dataTime);\n        let res = await postPatientBookAppointment({\n            fullName: this.state.fullName,\n            phoneNumber: this.state.phoneNumber,\n            email: this.state.email,\n            address: this.state.address,\n            reason: this.state.reason,\n            date: date,\n            selectedGender: this.state.selectedGender.value,\n            doctorId: this.state.doctorId,\n            timeType: this.state.timeType,\n            language: this.props.language,\n            timeString: timeString,\n            doctorName: doctorName\n        })\n        if(res && res.errCode === 0){\n            toast.success('Booking a new appointment succeed!')\n            this.props.closeBookingClose();\n        }else {\n            toast.error('Booking a new appointment error!')\n            console.log(res)\n        }\n    }\n    render(){\n        //toggle={}\n        let {isOpenModal, closeBookingClose, dataTime} = this.props;\n        let doctorId = '';\n        if (dataTime && !_.isEmpty(dataTime)){\n            doctorId = dataTime.doctorId\n        }\n        console.log('check datatime:', this.state);\n        return (\n            <Modal\n                isOpen={isOpenModal}\n                className={'booking-modal-container'}\n                size=\"lg\"\n                centered\n                //backdrop={true}\n            >\n                <div className=\"booking-modal-content\">\n                    <div className=\"booking-modal-header\">\n                        <span className=\"left\"><FormattedMessage id=\"patient.booking-modal.title\"/></span>\n                        <span \n                            className=\"right\"\n                            onClick={closeBookingClose}\n                        ><i className=\"fas fa-times\"></i></span>    \n                    </div>\n                    <div className=\"booking-modal-body\">\n                        <div className=\"doctor-infor\">\n                            <ProfileDoctor\n                                doctorId = {doctorId}\n                                isShowDescriptionDoctor={false}\n                                dataTime={dataTime}\n                            />    \n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-6 form-group\">\n                                <label><FormattedMessage id=\"patient.booking-modal.fullName\"/></label>\n                                <input className=\"form-control\"\n                                value={this.state.fullName}\n                                onChange={(event) => this.handleOnchangeInput(event, 'fullName')}/>\n                            </div>\n                            <div className=\"col-6 form-group\">\n                                <label><FormattedMessage id=\"patient.booking-modal.phoneNumber\"/></label>\n                                <input className=\"form-control\"\n                                value={this.state.phoneNumber}\n                                onChange={(event) => this.handleOnchangeInput(event, 'phoneNumber')}/>\n                            </div>\n                            <div className=\"col-6 form-group\">\n                                <label><FormattedMessage id=\"patient.booking-modal.email\"/></label>\n                                <input className=\"form-control\"\n                                value={this.state.email}\n                                onChange={(event) => this.handleOnchangeInput(event, 'email')}/>\n                            </div>\n                            <div className=\"col-6 form-group\">\n                                <label><FormattedMessage id=\"patient.booking-modal.address\"/></label>\n                                <input className=\"form-control\"\n                                value={this.state.address}\n                                onChange={(event) => this.handleOnchangeInput(event, 'address')}/>\n                            </div>\n                            <div className=\"col-12 form-group\">\n                                <label><FormattedMessage id=\"patient.booking-modal.reason\"/></label>\n                                <input className=\"form-control\"\n                                value={this.state.reason}\n                                onChange={(event) => this.handleOnchangeInput(event, 'reason')}/>\n                            </div>\n                            <div className=\"col-6 form-group\">\n                                <label><FormattedMessage id=\"patient.booking-modal.birthday\"/></label>\n                                <DatePicker\n                                    onChange={this.handleOnchangeDatePicker}\n                                    className=\"form-control\"\n                                    value={this.state.birthday}\n                                />    \n                            </div>\n                            <div className=\"col-6 form-group\">\n                                <label><FormattedMessage id=\"patient.booking-modal.gender\"/></label>\n                                <Select\n                                    value={this.state.selectedGender}\n                                    onChange={this.handleChangeSelect}\n                                    options={this.state.genders}\n                                />    \n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"booking-modal-footer\">\n                        <button className=\"btn-booking-confirm\"\n                            onClick={() => this.handleConfirmBooking()}>\n                                <FormattedMessage id=\"patient.booking-modal.btnConfirm\"/>\n                            </button>\n                        <button className=\"btn-booking-cancel\"\n                            onClick={closeBookingClose}\n                        ><FormattedMessage id=\"patient.booking-modal.btnCancel\"/></button>    \n                    </div>\n                </div>\n            </Modal>    \n        )\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        getGenders: () => dispatch(actions.fetchGenderStart()),\n    };\n};\nconst mapStateToProps = state => {\n    return {\n        language: state.app.language,\n        genders: state.admin.genders,\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(BookingModal);"]},"metadata":{},"sourceType":"module"}