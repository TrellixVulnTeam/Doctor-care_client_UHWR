{"ast":null,"code":"import axios from 'axios';\nimport _ from 'lodash';\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL // withCredentials: true\n\n});\n\nconst createError = (httpStatusCode, statusCode, errorMessage, problems, errorCode = '') => {\n  const error = new Error();\n  error.httpStatusCode = httpStatusCode;\n  error.statusCode = statusCode;\n  error.errorMessage = errorMessage;\n  error.problems = problems;\n  error.errorCode = errorCode + \"\";\n  return error;\n};\n\ninstance.interceptors.response.use(response => {\n  // Thrown error for request with OK status code\n  const {\n    data\n  } = response;\n  return response.data;\n});\nexport default instance;","map":{"version":3,"sources":["/home/asus2/Frontend-React.JS-QuickStart/src/axios.js"],"names":["axios","_","instance","create","baseURL","process","env","REACT_APP_BACKEND_URL","createError","httpStatusCode","statusCode","errorMessage","problems","errorCode","error","Error","interceptors","response","use","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,qBADK,CAE1B;;AAF0B,CAAb,CAAjB;;AAKA,MAAMC,WAAW,GAAG,CAACC,cAAD,EAAiBC,UAAjB,EAA6BC,YAA7B,EAA2CC,QAA3C,EAAqDC,SAAS,GAAG,EAAjE,KAAwE;AACxF,QAAMC,KAAK,GAAG,IAAIC,KAAJ,EAAd;AACAD,EAAAA,KAAK,CAACL,cAAN,GAAuBA,cAAvB;AACAK,EAAAA,KAAK,CAACJ,UAAN,GAAmBA,UAAnB;AACAI,EAAAA,KAAK,CAACH,YAAN,GAAqBA,YAArB;AACAG,EAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACAE,EAAAA,KAAK,CAACD,SAAN,GAAkBA,SAAS,GAAG,EAA9B;AACA,SAAOC,KAAP;AACH,CARD;;AAWAZ,QAAQ,CAACc,YAAT,CAAsBC,QAAtB,CAA+BC,GAA/B,CACKD,QAAD,IAAc;AACV;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAWF,QAAjB;AAEA,SAAOA,QAAQ,CAACE,IAAhB;AACH,CANL;AASA,eAAejB,QAAf","sourcesContent":["import axios from 'axios';\r\nimport _ from 'lodash';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n    // withCredentials: true\r\n});\r\n\r\nconst createError = (httpStatusCode, statusCode, errorMessage, problems, errorCode = '') => {\r\n    const error = new Error();\r\n    error.httpStatusCode = httpStatusCode;\r\n    error.statusCode = statusCode;\r\n    error.errorMessage = errorMessage;\r\n    error.problems = problems;\r\n    error.errorCode = errorCode + \"\";\r\n    return error;\r\n};\r\n\r\n\r\ninstance.interceptors.response.use(\r\n    (response) => {\r\n        // Thrown error for request with OK status code\r\n        const { data } = response;\r\n        \r\n        return response.data;\r\n    }\r\n);\r\n\r\nexport default instance;\r\n"]},"metadata":{},"sourceType":"module"}