{"ast":null,"code":"var _jsxFileName = \"/home/asus2/Frontend-React.JS-QuickStart/src/containers/Patient/Doctor/DoctorSchedule.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport './DoctorSchedule.scss';\nimport moment from 'moment';\nimport localization from 'moment/locale/vi';\nimport { LANGUAGES } from '../../../utils';\nimport { getScheduleDoctorByDate } from '../../../services/userService';\nimport { FormattedMessage } from 'react-intl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass DoctorSchedule extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getArrDays = language => {\n      let allDays = [];\n\n      for (let i = 0; i < 7; i++) {\n        let object = {};\n\n        if (language === LANGUAGES.VI) {\n          if (i === 0) {\n            let ddMM = moment(new Date()).format('DD/MM');\n            let today = `Hom nay -${ddMM}`;\n            object.label = today;\n          } else {\n            let lableVi = moment(new Date()).add(i, 'days').format('ddd - DD/MM');\n            object.label = this.capitalizeFirstLetter(lableVi);\n          }\n        } else {\n          if (i === 0) {\n            let ddMM = moment(new Date()).format('DD/MM');\n            let today = `Today - ${ddMM}`;\n            object.label = today;\n          } else {\n            object.label = moment(new Date()).add(i, 'days').locale('en').format(\"ddd - DD/MM\");\n          }\n        }\n\n        object.value = moment(new Date()).add(i, 'days').startOf('day').valueOf();\n        allDays.push(object);\n      }\n\n      return allDays;\n    };\n\n    this.handleOnChangeSelect = async event => {\n      if (this.props.doctorIdFromParent && this.props.doctorIdFromParent !== -1) {\n        let doctorId = this.props.doctorIdFromParent;\n        let date = event.target.value;\n        let res = await getScheduleDoctorByDate(doctorId, date);\n\n        if (res && res.errCode === 0) {\n          this.setState({\n            allAvalableTime: res.data ? res.data : []\n          });\n        }\n\n        console.log('check res schedule from react: ', this.state.allAvalableTime);\n      }\n    };\n\n    this.state = {\n      allDays: [],\n      allAvalableTime: []\n    };\n  }\n\n  async componentDidMount() {\n    let {\n      language\n    } = this.props;\n    let allDays = this.getArrDays(language);\n    this.setState({\n      allDays: allDays\n    });\n  }\n\n  capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  async componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.language !== prevProps.language) {\n      let allDays = this.getArrDays(this.props.language);\n      this.setState({\n        allDays: allDays\n      });\n    }\n\n    if (this.props.doctorIdFromParent !== prevProps.doctorIdFromParent) {\n      let allDays = this.getArrDays(this.props.language);\n      let res = await getScheduleDoctorByDate(this.props.doctorIdFromParent, allDays[0].value);\n      this.setState({\n        allAvalableTime: res.data ? res.data : []\n      });\n    }\n  }\n\n  render() {\n    let {\n      allDays,\n      allAvalableTime\n    } = this.state;\n    let {\n      language\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"doctor-schedule-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all-schedule\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: event => this.handleOnChangeSelect(event),\n          children: allDays && allDays.length > 0 && allDays.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item.value,\n              children: item.label\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all-available-time\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-calendar\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-calendar-alt\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"patient.detail-doctor.schedule\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 66\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 60\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-content\",\n          children: allAvalableTime && allAvalableTime.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time-content-btns\",\n              children: allAvalableTime.map((item, index) => {\n                let timeDisplay = language === LANGUAGES.VI ? item.timeTypeData.valueVi : item.timeTypeData.valueEn;\n                return /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: language === LANGUAGES.VI ? 'btn-vie' : 'btn-en',\n                  children: timeDisplay\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"book-free\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(FormattedMessage, {\n                  id: \"patient.detail-doctor.choose\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fas fa-hand-point-up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                  id: \"patient.detail-doctor.book-free\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-schedule\",\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"patient.detail-doctor.no-schedule\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorSchedule);","map":{"version":3,"sources":["/home/asus2/Frontend-React.JS-QuickStart/src/containers/Patient/Doctor/DoctorSchedule.js"],"names":["React","Component","connect","moment","localization","LANGUAGES","getScheduleDoctorByDate","FormattedMessage","DoctorSchedule","constructor","props","getArrDays","language","allDays","i","object","VI","ddMM","Date","format","today","label","lableVi","add","capitalizeFirstLetter","locale","value","startOf","valueOf","push","handleOnChangeSelect","event","doctorIdFromParent","doctorId","date","target","res","errCode","setState","allAvalableTime","data","console","log","state","componentDidMount","string","charAt","toUpperCase","slice","componentDidUpdate","prevProps","prevState","snapshot","render","length","map","item","index","timeDisplay","timeTypeData","valueVi","valueEn","mapStateToProps","app","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,uBAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,SAAQC,SAAR,QAAwB,gBAAxB;AACA,SAAQC,uBAAR,QAAsC,+BAAtC;AACA,SAAQC,gBAAR,QAA+B,YAA/B;;;;AACA,MAAMC,cAAN,SAA6BP,SAA7B,CAAuC;AACnCQ,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAkBlBC,UAlBkB,GAkBJC,QAAD,IAAc;AACvB,UAAIC,OAAO,GAAG,EAAd;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAC,CAAlB,EAAqBA,CAAC,EAAtB,EAA0B;AACtB,YAAIC,MAAM,GAAG,EAAb;;AACA,YAAIH,QAAQ,KAAKP,SAAS,CAACW,EAA3B,EAA8B;AAE1B,cAAGF,CAAC,KAAG,CAAP,EAAS;AACL,gBAAIG,IAAI,GAAGd,MAAM,CAAC,IAAIe,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,OAA1B,CAAX;AACA,gBAAIC,KAAK,GAAI,YAAWH,IAAK,EAA7B;AACAF,YAAAA,MAAM,CAACM,KAAP,GAAeD,KAAf;AACH,WAJD,MAIM;AACF,gBAAIE,OAAO,GAAGnB,MAAM,CAAC,IAAIe,IAAJ,EAAD,CAAN,CAAmBK,GAAnB,CAAuBT,CAAvB,EAA0B,MAA1B,EAAkCK,MAAlC,CAAyC,aAAzC,CAAd;AACAJ,YAAAA,MAAM,CAACM,KAAP,GAAe,KAAKG,qBAAL,CAA2BF,OAA3B,CAAf;AACH;AAEJ,SAXD,MAWK;AACD,cAAIR,CAAC,KAAK,CAAV,EAAY;AACR,gBAAIG,IAAI,GAAGd,MAAM,CAAC,IAAIe,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,OAA1B,CAAX;AACA,gBAAIC,KAAK,GAAI,WAAUH,IAAK,EAA5B;AACAF,YAAAA,MAAM,CAACM,KAAP,GAAeD,KAAf;AACH,WAJD,MAIM;AACFL,YAAAA,MAAM,CAACM,KAAP,GAAelB,MAAM,CAAC,IAAIe,IAAJ,EAAD,CAAN,CAAmBK,GAAnB,CAAuBT,CAAvB,EAA0B,MAA1B,EAAkCW,MAAlC,CAAyC,IAAzC,EAA+CN,MAA/C,CAAsD,aAAtD,CAAf;AACH;AAEJ;;AACDJ,QAAAA,MAAM,CAACW,KAAP,GAAevB,MAAM,CAAC,IAAIe,IAAJ,EAAD,CAAN,CAAmBK,GAAnB,CAAuBT,CAAvB,EAA0B,MAA1B,EAAkCa,OAAlC,CAA0C,KAA1C,EAAiDC,OAAjD,EAAf;AACAf,QAAAA,OAAO,CAACgB,IAAR,CAAad,MAAb;AACH;;AACD,aAAOF,OAAP;AAEH,KAhDiB;;AAAA,SAgElBiB,oBAhEkB,GAgEK,MAAOC,KAAP,IAAiB;AACpC,UAAI,KAAKrB,KAAL,CAAWsB,kBAAX,IAAiC,KAAKtB,KAAL,CAAWsB,kBAAX,KAAkC,CAAC,CAAxE,EAA0E;AACtE,YAAIC,QAAQ,GAAG,KAAKvB,KAAL,CAAWsB,kBAA1B;AACA,YAAIE,IAAI,GAAGH,KAAK,CAACI,MAAN,CAAaT,KAAxB;AACA,YAAIU,GAAG,GAAG,MAAM9B,uBAAuB,CAAC2B,QAAD,EAAWC,IAAX,CAAvC;;AAGA,YAAIE,GAAG,IAAIA,GAAG,CAACC,OAAJ,KAAgB,CAA3B,EAA6B;AACzB,eAAKC,QAAL,CAAc;AACVC,YAAAA,eAAe,EAAEH,GAAG,CAACI,IAAJ,GAAWJ,GAAG,CAACI,IAAf,GAAsB;AAD7B,WAAd;AAGH;;AACDC,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+C,KAAKC,KAAL,CAAWJ,eAA1D;AACH;AACJ,KA9EiB;;AAEV,SAAKI,KAAL,GAAa;AACT9B,MAAAA,OAAO,EAAE,EADA;AAET0B,MAAAA,eAAe,EAAE;AAFR,KAAb;AAIP;;AACsB,QAAjBK,iBAAiB,GAAG;AACtB,QAAI;AAAChC,MAAAA;AAAD,QAAa,KAAKF,KAAtB;AACA,QAAIG,OAAO,GAAG,KAAKF,UAAL,CAAgBC,QAAhB,CAAd;AACA,SAAK0B,QAAL,CAAc;AACVzB,MAAAA,OAAO,EAACA;AADE,KAAd;AAIH;;AACDW,EAAAA,qBAAqB,CAACqB,MAAD,EAAQ;AACzB,WAAOA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAgCF,MAAM,CAACG,KAAP,CAAa,CAAb,CAAvC;AACH;;AAgCuB,QAAlBC,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAgC;AACpD,QAAG,KAAK1C,KAAL,CAAWE,QAAX,KAAwBsC,SAAS,CAACtC,QAArC,EAA+C;AAC3C,UAAIC,OAAO,GAAG,KAAKF,UAAL,CAAgB,KAAKD,KAAL,CAAWE,QAA3B,CAAd;AACA,WAAK0B,QAAL,CAAc;AACVzB,QAAAA,OAAO,EAAEA;AADC,OAAd;AAGH;;AACD,QAAG,KAAKH,KAAL,CAAWsB,kBAAX,KAAkCkB,SAAS,CAAClB,kBAA/C,EAAkE;AAC9D,UAAInB,OAAO,GAAG,KAAKF,UAAL,CAAgB,KAAKD,KAAL,CAAWE,QAA3B,CAAd;AACA,UAAIwB,GAAG,GAAG,MAAM9B,uBAAuB,CAAC,KAAKI,KAAL,CAAWsB,kBAAZ,EAAgCnB,OAAO,CAAC,CAAD,CAAP,CAAWa,KAA3C,CAAvC;AACA,WAAKY,QAAL,CAAc;AACVC,QAAAA,eAAe,EAAEH,GAAG,CAACI,IAAJ,GAAWJ,GAAG,CAACI,IAAf,GAAsB;AAD7B,OAAd;AAGH;AACJ;;AAgBDa,EAAAA,MAAM,GAAG;AACL,QAAI;AAACxC,MAAAA,OAAD;AAAU0B,MAAAA;AAAV,QAA6B,KAAKI,KAAtC;AACA,QAAI;AAAC/B,MAAAA;AAAD,QAAa,KAAKF,KAAtB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACI;AAAQ,UAAA,QAAQ,EAAGqB,KAAD,IAAW,KAAKD,oBAAL,CAA0BC,KAA1B,CAA7B;AAAA,oBACKlB,OAAO,IAAIA,OAAO,CAACyC,MAAR,GAAiB,CAA5B,IACGzC,OAAO,CAAC0C,GAAR,CAAY,CAACC,IAAD,EAAOC,KAAP,KAAgB;AACxB,gCACI;AACI,cAAA,KAAK,EAAED,IAAI,CAAC9B,KADhB;AAAA,wBAIK8B,IAAI,CAACnC;AAJV,eAESoC,KAFT;AAAA;AAAA;AAAA;AAAA,oBADJ;AAQH,WATD;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAgBI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACI;AAAG,YAAA,SAAS,EAAC,qBAAb;AAAA,mCAAmC;AAAA,qCAAM,QAAC,gBAAD;AAAkB,gBAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AAAN;AAAA;AAAA;AAAA;AAAA;AAAnC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,oBACKlB,eAAe,IAAIA,eAAe,CAACe,MAAhB,GAAyB,CAA5C,gBACG;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,mBAAf;AAAA,wBACKf,eAAe,CAACgB,GAAhB,CAAoB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAClC,oBAAIC,WAAW,GAAG9C,QAAQ,KAAKP,SAAS,CAACW,EAAvB,GACdwC,IAAI,CAACG,YAAL,CAAkBC,OADJ,GACcJ,IAAI,CAACG,YAAL,CAAkBE,OADlD;AAEA,oCACI;AACI,kBAAA,SAAS,EAAEjD,QAAQ,KAAKP,SAAS,CAACW,EAAvB,GAA4B,SAA5B,GAAwC,QADvD;AAAA,4BAEK0C;AAFL,mBAAaD,KAAb;AAAA;AAAA;AAAA;AAAA,wBADJ;AAMH,eATA;AADL;AAAA;AAAA;AAAA;AAAA,oBADJ,eAaI;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,qCACI;AAAA,wCACI,QAAC,gBAAD;AAAkB,kBAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAG,kBAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI,QAAC,gBAAD;AAAkB,kBAAA,EAAE,EAAE;AAAtB;AAAA;AAAA;AAAA;AAAA,wBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAbJ;AAAA,0BADH,gBAuBG;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,mCACI,QAAC,gBAAD;AAAkB,cAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAxBR;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAuDH;;AA1IkC;;AA6IvC,MAAMK,eAAe,GAAGnB,KAAK,IAAI;AAC7B,SAAM;AACF/B,IAAAA,QAAQ,EAAE+B,KAAK,CAACoB,GAAN,CAAUnD;AADlB,GAAN;AAGH,CAJD;;AAKA,MAAMoD,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAM,EAAN;AACH,CAFD;;AAGA,eAAe/D,OAAO,CAAC4D,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CxD,cAA7C,CAAf","sourcesContent":["import React, {Component} from \"react\";\nimport { connect } from \"react-redux\";\nimport './DoctorSchedule.scss';\nimport moment from 'moment';\nimport localization from 'moment/locale/vi';\nimport {LANGUAGES} from '../../../utils';\nimport {getScheduleDoctorByDate} from '../../../services/userService';\nimport {FormattedMessage} from 'react-intl';\nclass DoctorSchedule extends Component {\n    constructor(props){\n        super(props);\n            this.state = {\n                allDays: [],\n                allAvalableTime: []\n            }\n    }\n    async componentDidMount() {\n        let {language} = this.props;  \n        let allDays = this.getArrDays(language);\n        this.setState({\n            allDays:allDays,\n            \n        })      \n    }\n    capitalizeFirstLetter(string){\n        return string.charAt(0).toUpperCase()+ string.slice(1);\n    }\n    getArrDays = (language) => {\n        let allDays = []\n        for (let i = 0; i<7; i++) {\n            let object = {};\n            if (language === LANGUAGES.VI){\n            \n                if(i===0){\n                    let ddMM = moment(new Date()).format('DD/MM');\n                    let today = `Hom nay -${ddMM}`;\n                    object.label = today;\n                }else {\n                    let lableVi = moment(new Date()).add(i, 'days').format('ddd - DD/MM')\n                    object.label = this.capitalizeFirstLetter(lableVi)\n                }\n\n            }else{\n                if (i === 0){\n                    let ddMM = moment(new Date()).format('DD/MM');\n                    let today = `Today - ${ddMM}`;\n                    object.label = today;\n                } else{\n                    object.label = moment(new Date()).add(i, 'days').locale('en').format(\"ddd - DD/MM\");\n                }\n                \n            }\n            object.value = moment(new Date()).add(i, 'days').startOf('day').valueOf();\n            allDays.push(object);\n        }\n        return allDays;\n        \n    }\n    async componentDidUpdate(prevProps, prevState, snapshot){\n        if(this.props.language !== prevProps.language) {\n            let allDays = this.getArrDays(this.props.language);\n            this.setState({\n                allDays: allDays\n            })\n        }\n        if(this.props.doctorIdFromParent !== prevProps.doctorIdFromParent){\n            let allDays = this.getArrDays(this.props.language);\n            let res = await getScheduleDoctorByDate(this.props.doctorIdFromParent, allDays[0].value);\n            this.setState({\n                allAvalableTime: res.data ? res.data : []\n            })\n        }\n    }\n    handleOnChangeSelect = async (event) => {\n        if (this.props.doctorIdFromParent && this.props.doctorIdFromParent !== -1){\n            let doctorId = this.props.doctorIdFromParent;\n            let date = event.target.value;\n            let res = await getScheduleDoctorByDate(doctorId, date);\n            \n\n            if (res && res.errCode === 0){\n                this.setState({\n                    allAvalableTime: res.data ? res.data : []\n                })\n            }\n            console.log('check res schedule from react: ', this.state.allAvalableTime)\n        }\n    }\n    render() {\n        let {allDays, allAvalableTime} = this.state;\n        let {language} = this.props;\n        return(\n            <div className=\"doctor-schedule-container\">\n                <div className=\"all-schedule\">\n                    <select onChange={(event) => this.handleOnChangeSelect(event)}>\n                        {allDays && allDays.length > 0 &&\n                            allDays.map((item, index) =>{\n                                return(\n                                    <option\n                                        value={item.value}\n                                        key={index}\n                                    >\n                                        {item.label}\n                                    </option>\n                                )\n                            })}\n                    </select>\n                </div>\n                <div className=\"all-available-time\">\n                    <div className=\"text-calendar\">\n                        <i className=\"fas fa-calendar-alt\"><span><FormattedMessage id=\"patient.detail-doctor.schedule\"/></span></i>\n                    </div>\n                    <div className=\"time-content\">\n                        {allAvalableTime && allAvalableTime.length > 0 ?\n                            <>\n                                <div className=\"time-content-btns\">\n                                    {allAvalableTime.map((item, index) => {\n                                        let timeDisplay = language === LANGUAGES.VI ?\n                                            item.timeTypeData.valueVi : item.timeTypeData.valueEn;\n                                        return(\n                                            <button key={index}\n                                                className={language === LANGUAGES.VI ? 'btn-vie' : 'btn-en'}>\n                                                {timeDisplay}\n                                            </button>\n                                        )\n                                    })}\n                                </div>\n                                <div className=\"book-free\">\n                                    <span>\n                                        <FormattedMessage id=\"patient.detail-doctor.choose\"/>\n                                        <i class=\"fas fa-hand-point-up\"></i>\n                                        <FormattedMessage id =\"patient.detail-doctor.book-free\"/>\n                                    </span>\n                                </div>\n                            </>\n                            :\n                            <div className=\"no-schedule\">\n                                <FormattedMessage id=\"patient.detail-doctor.no-schedule\"/>\n                            </div>\n\n                            \n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    \n}\nconst mapStateToProps = state => {\n    return{\n        language: state.app.language,\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return{};\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorSchedule);"]},"metadata":{},"sourceType":"module"}