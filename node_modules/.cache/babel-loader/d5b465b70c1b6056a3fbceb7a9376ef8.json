{"ast":null,"code":"var _jsxFileName = \"/home/asus2/Frontend-React.JS-QuickStart/src/containers/Patient/Specialty/DetailSpecialty.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\nimport './DetailSpecialty.scss';\nimport HomeHeader from '../../HomePage/HeaderHome';\nimport DoctorSchedule from '../Doctor/DoctorSchedule';\nimport DoctorExtraInfor from \"../Doctor/DoctorExtraInfor\";\nimport ProfileDoctor from \"../Doctor/ProfileDoctor\";\nimport { getAllDetailSpecialtyById, getAllCodeService } from '../../../services/userService';\nimport _ from 'lodash';\nimport { LANGUAGES } from '../../../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DetailSpecialty extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnchangeSelect = async event => {\n      console.log('check onchange:', event.target.value);\n\n      if (this.props.match && this.props.match.params && this.props.match.params.id) {\n        let id = this.props.match.params.id;\n        let location = event.target.value;\n        let res = await getAllDetailSpecialtyById({\n          id: id,\n          location: location\n        });\n\n        if (res && res.errCode === 0) {\n          let data = res.data;\n          let arrDoctorId = [];\n\n          if (data && !_.isEmpty(res.data)) {\n            let arr = data.doctorSpecialty;\n\n            if (arr && arr.length > 0) {\n              arr.map(item => {\n                arrDoctorId.push(item.doctorId);\n              });\n            }\n          }\n\n          this.setState({\n            dataDetailSpecialty: res.data,\n            arrDoctorId: arrDoctorId\n          });\n        }\n      }\n    };\n\n    this.state = {\n      arrDoctorId: [],\n      dataDetailSpecialty: {},\n      listProvince: []\n    };\n  }\n\n  async componentDidMount() {\n    if (this.props.match && this.props.match.params && this.props.match.params.id) {\n      let id = this.props.match.params.id;\n      let res = await getAllDetailSpecialtyById({\n        id: id,\n        location: 'ALL'\n      });\n      console.log('hihi', res);\n      let resProvince = await getAllCodeService('PROVINCE');\n\n      if (res && res.errCode === 0 && resProvince && resProvince.errCode === 0) {\n        let data = res.data;\n        let arrDoctorId = [];\n\n        if (data && !_.isEmpty(res.data)) {\n          let arr = data.doctorSpecialty;\n\n          if (arr && arr.length > 0) {\n            arr.map(item => {\n              arrDoctorId.push(item.doctorId);\n            });\n          }\n        }\n\n        let dataProvince = resProvince.data;\n\n        if (dataProvince && dataProvince.length > 0) {\n          dataProvince.unshift({\n            createAt: null,\n            keyMap: \"ALL\",\n            type: \"PROVINCE\",\n            valueEN: \"ALL\",\n            valueVI: \"Toan quoc\"\n          });\n        }\n\n        this.setState({\n          dataDetailSpecialty: res.data,\n          arrDoctorId: arrDoctorId,\n          listProvince: resProvince ? dataProvince : []\n        });\n      }\n    }\n  }\n\n  async componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.language !== prevProps.language) {}\n  }\n\n  render() {\n    let {\n      arrDoctorId,\n      dataDetailSpecialty,\n      listProvince\n    } = this.state;\n    console.log('check state', this.state);\n    let {\n      language\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detail-specialty-container\",\n      children: [/*#__PURE__*/_jsxDEV(HomeHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detail-specialty-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description-spcialty\",\n          children: dataDetailSpecialty && !_.isEmpty(dataDetailSpecialty) && /*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: dataDetailSpecialty.descriptionHTML\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-sp-doctor\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: event => this.handleOnchangeSelect(event),\n            children: listProvince && listProvince.length > 0 && listProvince.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.keyMap,\n                children: language === LANGUAGES.VI ? item.valueVI : item.valueEN\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), arrDoctorId && arrDoctorId.length > 0 && arrDoctorId.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"each-doctor\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dt-content-left\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"profile-doctor\",\n                children: /*#__PURE__*/_jsxDEV(ProfileDoctor, {\n                  doctorId: item,\n                  isShowDescriptionDoctor: true,\n                  isShowLinkDetail: true,\n                  isShowPrice: false\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dt-content-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"doctor-schdule\",\n                children: /*#__PURE__*/_jsxDEV(DoctorSchedule, {\n                  doctorIdFromParent: item\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"doctor-extra-infor\",\n                children: /*#__PURE__*/_jsxDEV(DoctorExtraInfor, {\n                  doctorIdFromParent: item\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 33\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language\n  };\n};\n\nconst mapDispatchToProps = dispath => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailSpecialty);","map":{"version":3,"sources":["/home/asus2/Frontend-React.JS-QuickStart/src/containers/Patient/Specialty/DetailSpecialty.js"],"names":["React","Component","connect","FormattedMessage","HomeHeader","DoctorSchedule","DoctorExtraInfor","ProfileDoctor","getAllDetailSpecialtyById","getAllCodeService","_","LANGUAGES","DetailSpecialty","constructor","props","handleOnchangeSelect","event","console","log","target","value","match","params","id","location","res","errCode","data","arrDoctorId","isEmpty","arr","doctorSpecialty","length","map","item","push","doctorId","setState","dataDetailSpecialty","state","listProvince","componentDidMount","resProvince","dataProvince","unshift","createAt","keyMap","type","valueEN","valueVI","componentDidUpdate","prevProps","prevState","snapshot","language","render","__html","descriptionHTML","index","VI","mapStateToProps","app","mapDispatchToProps","dispath"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAO,wBAAP;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,SAAQC,yBAAR,EAAmCC,iBAAnC,QAA2D,+BAA3D;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAAQC,SAAR,QAAwB,gBAAxB;;;AAEA,MAAMC,eAAN,SAA8BX,SAA9B,CAAwC;AACpCY,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAwDlBC,oBAxDkB,GAwDM,MAAMC,KAAN,IAAgB;AACpCC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,KAAK,CAACG,MAAN,CAAaC,KAA5C;;AACA,UAAI,KAAKN,KAAL,CAAWO,KAAX,IAAoB,KAAKP,KAAL,CAAWO,KAAX,CAAiBC,MAArC,IAA+C,KAAKR,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBC,EAA3E,EAA8E;AAC1E,YAAIA,EAAE,GAAG,KAAKT,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBC,EAAjC;AACA,YAAIC,QAAQ,GAAGR,KAAK,CAACG,MAAN,CAAaC,KAA5B;AAEA,YAAIK,GAAG,GAAG,MAAMjB,yBAAyB,CAAC;AACtCe,UAAAA,EAAE,EAAEA,EADkC;AAEtCC,UAAAA,QAAQ,EAAEA;AAF4B,SAAD,CAAzC;;AAKA,YAAIC,GAAG,IAAIA,GAAG,CAACC,OAAJ,KAAgB,CAA3B,EAA8B;AAC1B,cAAIC,IAAI,GAAGF,GAAG,CAACE,IAAf;AACA,cAAIC,WAAW,GAAG,EAAlB;;AACA,cAAID,IAAI,IAAI,CAACjB,CAAC,CAACmB,OAAF,CAAUJ,GAAG,CAACE,IAAd,CAAb,EAAkC;AAC9B,gBAAIG,GAAG,GAAGH,IAAI,CAACI,eAAf;;AACA,gBAAID,GAAG,IAAIA,GAAG,CAACE,MAAJ,GAAa,CAAxB,EAA0B;AACtBF,cAAAA,GAAG,CAACG,GAAJ,CAAQC,IAAI,IAAI;AACZN,gBAAAA,WAAW,CAACO,IAAZ,CAAiBD,IAAI,CAACE,QAAtB;AACH,eAFD;AAGH;AACJ;;AACD,eAAKC,QAAL,CAAc;AACVC,YAAAA,mBAAmB,EAAEb,GAAG,CAACE,IADf;AAEVC,YAAAA,WAAW,EAAEA;AAFH,WAAd;AAIH;AACJ;AACJ,KApFiB;;AAEd,SAAKW,KAAL,GAAY;AACRX,MAAAA,WAAW,EAAE,EADL;AAERU,MAAAA,mBAAmB,EAAE,EAFb;AAGRE,MAAAA,YAAY,EAAE;AAHN,KAAZ;AAKH;;AAEsB,QAAjBC,iBAAiB,GAAE;AACrB,QAAI,KAAK3B,KAAL,CAAWO,KAAX,IAAoB,KAAKP,KAAL,CAAWO,KAAX,CAAiBC,MAArC,IAA+C,KAAKR,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBC,EAA3E,EAA+E;AAC3E,UAAIA,EAAE,GAAG,KAAKT,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBC,EAAjC;AAEA,UAAIE,GAAG,GAAG,MAAMjB,yBAAyB,CAAC;AACtCe,QAAAA,EAAE,EAAEA,EADkC;AAEtCC,QAAAA,QAAQ,EAAE;AAF4B,OAAD,CAAzC;AAIAP,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBO,GAApB;AACA,UAAIiB,WAAW,GAAG,MAAOjC,iBAAiB,CAAC,UAAD,CAA1C;;AACA,UAAIgB,GAAG,IAAIA,GAAG,CAACC,OAAJ,KAAgB,CAAvB,IAA4BgB,WAA5B,IAA2CA,WAAW,CAAChB,OAAZ,KAAwB,CAAvE,EAAyE;AACrE,YAAIC,IAAI,GAAGF,GAAG,CAACE,IAAf;AACA,YAAIC,WAAW,GAAE,EAAjB;;AACA,YAAID,IAAI,IAAI,CAACjB,CAAC,CAACmB,OAAF,CAAUJ,GAAG,CAACE,IAAd,CAAb,EAAiC;AAC7B,cAAIG,GAAG,GAAGH,IAAI,CAACI,eAAf;;AACA,cAAID,GAAG,IAAIA,GAAG,CAACE,MAAJ,GAAa,CAAxB,EAA0B;AACtBF,YAAAA,GAAG,CAACG,GAAJ,CAAQC,IAAI,IAAI;AACZN,cAAAA,WAAW,CAACO,IAAZ,CAAiBD,IAAI,CAACE,QAAtB;AACH,aAFD;AAGH;AACJ;;AACD,YAAIO,YAAY,GAAGD,WAAW,CAACf,IAA/B;;AACA,YAAIgB,YAAY,IAAIA,YAAY,CAACX,MAAb,GAAsB,CAA1C,EAA6C;AACzCW,UAAAA,YAAY,CAACC,OAAb,CAAqB;AACjBC,YAAAA,QAAQ,EAAE,IADO;AAEjBC,YAAAA,MAAM,EAAE,KAFS;AAGjBC,YAAAA,IAAI,EAAE,UAHW;AAIjBC,YAAAA,OAAO,EAAE,KAJQ;AAKjBC,YAAAA,OAAO,EAAE;AALQ,WAArB;AAOH;;AAED,aAAKZ,QAAL,CAAc;AACVC,UAAAA,mBAAmB,EAAEb,GAAG,CAACE,IADf;AAEVC,UAAAA,WAAW,EAAGA,WAFJ;AAGVY,UAAAA,YAAY,EAAEE,WAAW,GAAGC,YAAH,GAAkB;AAHjC,SAAd;AAKH;AACJ;AACJ;;AAEuB,QAAlBO,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAgC;AACpD,QAAI,KAAKvC,KAAL,CAAWwC,QAAX,KAAwBH,SAAS,CAACG,QAAtC,EAA+C,CAE9C;AACJ;;AAgCDC,EAAAA,MAAM,GAAE;AACJ,QAAI;AAAC3B,MAAAA,WAAD;AAAcU,MAAAA,mBAAd;AAAmCE,MAAAA;AAAnC,QAAmD,KAAKD,KAA5D;AACAtB,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,KAAKqB,KAAhC;AACA,QAAI;AAACe,MAAAA;AAAD,QAAa,KAAKxC,KAAtB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,8BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,oBACKwB,mBAAmB,IAAI,CAAC5B,CAAC,CAACmB,OAAF,CAAUS,mBAAV,CAAxB,iBAED;AAAK,YAAA,uBAAuB,EAAE;AAACkB,cAAAA,MAAM,EAAElB,mBAAmB,CAACmB;AAA7B;AAA9B;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACI;AAAQ,YAAA,QAAQ,EAAKzC,KAAD,IAAW,KAAKD,oBAAL,CAA0BC,KAA1B,CAA/B;AAAA,sBACKwB,YAAY,IAAIA,YAAY,CAACR,MAAb,GAAsB,CAAtC,IACDQ,YAAY,CAACP,GAAb,CAAiB,CAACC,IAAD,EAAOwB,KAAP,KAAiB;AAC9B,kCACI;AAAoB,gBAAA,KAAK,EAAGxB,IAAI,CAACY,MAAjC;AAAA,0BACKQ,QAAQ,KAAK3C,SAAS,CAACgD,EAAvB,GAA4BzB,IAAI,CAACe,OAAjC,GAA2Cf,IAAI,CAACc;AADrD,iBAAaU,KAAb;AAAA;AAAA;AAAA;AAAA,sBADJ;AAKH,aAND;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBATJ,EAqBK9B,WAAW,IAAIA,WAAW,CAACI,MAAZ,GAAqB,CAApC,IACGJ,WAAW,CAACK,GAAZ,CAAgB,CAACC,IAAD,EAAOwB,KAAP,KAAiB;AAC7B,8BACI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,iBAAf;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,gBAAf;AAAA,uCACI,QAAC,aAAD;AACI,kBAAA,QAAQ,EAAExB,IADd;AAEI,kBAAA,uBAAuB,EAAE,IAF7B;AAGI,kBAAA,gBAAgB,EAAI,IAHxB;AAII,kBAAA,WAAW,EAAI;AAJnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAWI;AAAK,cAAA,SAAS,EAAC,kBAAf;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAC,gBAAf;AAAA,uCACI,QAAC,cAAD;AACI,kBAAA,kBAAkB,EAAEA;AADxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAOI;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA,uCACI,QAAC,gBAAD;AACI,kBAAA,kBAAkB,EAAEA;AADxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXJ;AAAA,aAAmCwB,KAAnC;AAAA;AAAA;AAAA;AAAA,kBADJ;AA4BH,SA7BD,CAtBR;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA2DH;;AAtJmC;;AAyJxC,MAAME,eAAe,GAAGrB,KAAK,IAAI;AAC7B,SAAM;AACFe,IAAAA,QAAQ,EAAEf,KAAK,CAACsB,GAAN,CAAUP;AADlB,GAAN;AAIH,CALD;;AAMA,MAAMQ,kBAAkB,GAAGC,OAAO,IAAI;AAClC,SAAO,EAAP;AACH,CAFD;;AAGA,eAAe7D,OAAO,CAAC0D,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ClD,eAA7C,CAAf","sourcesContent":["import React, {Component} from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\nimport './DetailSpecialty.scss';\nimport HomeHeader from '../../HomePage/HeaderHome';\nimport DoctorSchedule from '../Doctor/DoctorSchedule';\nimport DoctorExtraInfor from \"../Doctor/DoctorExtraInfor\";\nimport ProfileDoctor from \"../Doctor/ProfileDoctor\";\nimport {getAllDetailSpecialtyById, getAllCodeService} from '../../../services/userService';\nimport _ from 'lodash';\nimport {LANGUAGES} from '../../../utils';\n\nclass DetailSpecialty extends Component {\n    constructor(props){\n        super(props);\n        this.state ={\n            arrDoctorId: [],\n            dataDetailSpecialty: {},\n            listProvince: []\n        }\n    }\n\n    async componentDidMount(){\n        if (this.props.match && this.props.match.params && this.props.match.params.id) {\n            let id = this.props.match.params.id;\n\n            let res = await getAllDetailSpecialtyById({\n                id: id,\n                location: 'ALL'\n            });\n            console.log('hihi', res)\n            let resProvince = await  getAllCodeService('PROVINCE');\n            if (res && res.errCode === 0 && resProvince && resProvince.errCode === 0){\n                let data = res.data;\n                let arrDoctorId= [];\n                if (data && !_.isEmpty(res.data)){\n                    let arr = data.doctorSpecialty;\n                    if (arr && arr.length > 0){\n                        arr.map(item => {\n                            arrDoctorId.push(item.doctorId)\n                        })\n                    }\n                }\n                let dataProvince = resProvince.data;\n                if (dataProvince && dataProvince.length > 0) {\n                    dataProvince.unshift({\n                        createAt: null,\n                        keyMap: \"ALL\",\n                        type: \"PROVINCE\",\n                        valueEN: \"ALL\",\n                        valueVI: \"Toan quoc\",\n                    })\n                }\n\n                this.setState({\n                    dataDetailSpecialty: res.data,\n                    arrDoctorId : arrDoctorId,\n                    listProvince: resProvince ? dataProvince : []\n                })\n            }\n        }\n    }\n\n    async componentDidUpdate(prevProps, prevState, snapshot){\n        if (this.props.language !== prevProps.language){\n\n        }\n    }\n\n    handleOnchangeSelect =  async(event) => {\n        console.log('check onchange:', event.target.value)\n        if (this.props.match && this.props.match.params && this.props.match.params.id){\n            let id = this.props.match.params.id;\n            let location = event.target.value;\n\n            let res = await getAllDetailSpecialtyById({\n                id: id,\n                location: location\n            });\n\n            if (res && res.errCode === 0) {\n                let data = res.data;\n                let arrDoctorId = [];\n                if (data && !_.isEmpty(res.data)) {\n                    let arr = data.doctorSpecialty;\n                    if (arr && arr.length > 0){\n                        arr.map(item => {\n                            arrDoctorId.push(item.doctorId)\n                        })\n                    }\n                }\n                this.setState({\n                    dataDetailSpecialty: res.data,\n                    arrDoctorId: arrDoctorId,\n                })\n            }\n        }\n    }\n\n    render(){\n        let {arrDoctorId, dataDetailSpecialty, listProvince} = this.state;\n        console.log('check state', this.state)\n        let {language} = this.props;\n        return(\n            <div className=\"detail-specialty-container\">\n                <HomeHeader />\n                <div className=\"detail-specialty-body\">\n                    <div className=\"description-spcialty\">\n                        {dataDetailSpecialty && !_.isEmpty(dataDetailSpecialty)\n                        &&\n                        <div dangerouslySetInnerHTML={{__html: dataDetailSpecialty.descriptionHTML}}>\n\n                        </div>\n                        }\n                    </div>\n                    <div className=\"search-sp-doctor\">\n                        <select onChange = {(event) => this.handleOnchangeSelect(event)}>\n                            {listProvince && listProvince.length > 0 &&\n                            listProvince.map((item, index) => {\n                                return(\n                                    <option key={index} value= {item.keyMap}>\n                                        {language === LANGUAGES.VI ? item.valueVI : item.valueEN}\n                                    </option>\n                                )\n                            })}\n                        </select>\n                    </div>\n                    {arrDoctorId && arrDoctorId.length > 0 &&\n                        arrDoctorId.map((item, index) => {\n                            return (\n                                <div className=\"each-doctor\" key= {index}>\n                                    <div className=\"dt-content-left\">\n                                        <div className=\"profile-doctor\">\n                                            <ProfileDoctor\n                                                doctorId={item}\n                                                isShowDescriptionDoctor={true}\n                                                isShowLinkDetail = {true}\n                                                isShowPrice = {false}\n                                            />    \n                                        </div>\n                                    </div>\n                                    <div className=\"dt-content-right\">\n                                        <div className=\"doctor-schdule\">\n                                            <DoctorSchedule\n                                                doctorIdFromParent={item}\n                                            />\n\n                                        </div>\n                                        <div className=\"doctor-extra-infor\">\n                                            <DoctorExtraInfor\n                                                doctorIdFromParent={item}\n                                            />\n                                            \n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        })}\n                </div>\n            </div>\n            \n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return{\n        language: state.app.language,\n\n    };\n};\nconst mapDispatchToProps = dispath => {\n    return {};\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailSpecialty);"]},"metadata":{},"sourceType":"module"}