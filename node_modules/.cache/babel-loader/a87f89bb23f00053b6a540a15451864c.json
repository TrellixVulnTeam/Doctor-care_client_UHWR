{"ast":null,"code":"var _jsxFileName = \"/home/asus2/Frontend-React.JS-QuickStart/src/containers/System/ModalUser.js\";\nimport React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Button, Modal, ModalFooter, ModalHeader, ModalBody } from 'reactstrap';\nimport { emitter } from '../../utils/emitter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ModalManage extends Component {\n  //props <-> properties ; nested\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.props.toggleFromParent();\n    };\n\n    this.handleOnChageInput = (event, id) => {\n      //bad code( modify state truc tiep )\n      // this.state[id] = event.target.value;\n      // this.setState({\n      //     ...this.state,\n      // }, () => {\n      //     console.log('check bab state:', this.state)\n      // })\n      //good code\n      let copyState = { ...this.state\n      };\n      copyState[id] = event.target.value;\n      this.setState({ ...copyState\n      });\n    };\n\n    this.checkValideInput = () => {\n      let isValid = true;\n      let arrInput = ['email', 'password', 'firstName', 'lastName', 'address'];\n\n      for (let i = 0; i < arrInput.length; i++) {\n        console.log('check loop', this.state[arrInput[i]], arrInput[i]);\n\n        if (!this.state[arrInput[i]]) {\n          isValid = false;\n          alert('Missing parameter:' + arrInput[i]);\n          break;\n        }\n      }\n\n      return isValid;\n    };\n\n    this.handleAddNewUser = () => {\n      let isValid = this.checkValideInput();\n\n      if (isValid === true) {\n        // call api create modal\n        this.props.createNewUser(this.state);\n        console.log('data modal', this.state);\n      }\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n      address: ''\n    };\n    this.listenToEmitter();\n  }\n\n  listenToEmitter() {\n    //há»©ng event\n    emitter.on('EVENT_CLEAR_MODAL_DATA', () => {\n      //reset state\n      this.setState({\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: '',\n        address: ''\n      });\n    });\n  }\n\n  componentDidMount() {}\n\n  render() {\n    // console.log('check child props', this.props)\n    // console.log('check ', this.props.isOpenModalUser)\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: this.props.isOpenModalUser,\n      toggle: () => {\n        this.toggle();\n      },\n      className: 'modal-user-container',\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => {\n          this.toggle();\n        },\n        children: \"Create a new user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-user-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              onChange: event => {\n                this.handleOnChageInput(event, \"email\");\n              },\n              value: this.state.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"Password\",\n              onChange: event => {\n                this.handleOnChageInput(event, \"password\");\n              },\n              value: this.state.passwordw\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: event => {\n                this.handleOnChageInput(event, \"firstName\");\n              },\n              value: this.state.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: event => {\n                this.handleOnChageInput(event, \"lastName\");\n              },\n              value: this.state.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container max-width-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: event => {\n                this.handleOnChageInput(event, \"address\");\n              },\n              value: this.state.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          className: \"px-3\",\n          onClick: () => {\n            this.handleAddNewUser();\n          },\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          className: \"px-3\",\n          onClick: () => {\n            this.toggle();\n          },\n          children: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalManage);","map":{"version":3,"sources":["/home/asus2/Frontend-React.JS-QuickStart/src/containers/System/ModalUser.js"],"names":["React","Component","FormattedMessage","connect","Button","Modal","ModalFooter","ModalHeader","ModalBody","emitter","ModalManage","constructor","props","toggle","toggleFromParent","handleOnChageInput","event","id","copyState","state","target","value","setState","checkValideInput","isValid","arrInput","i","length","console","log","alert","handleAddNewUser","createNewUser","email","password","firstName","lastName","address","listenToEmitter","on","componentDidMount","render","isOpenModalUser","passwordw","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { Button,Modal,ModalFooter, ModalHeader, ModalBody } from 'reactstrap';\r\nimport {emitter} from '../../utils/emitter';\r\nclass ModalManage extends Component {\r\n\r\n//props <-> properties ; nested\r\n   constructor(props) {\r\n       super(props);\r\n       this.state = {\r\n            email: '',\r\n            password: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            address: ''\r\n       }\r\n       this.listenToEmitter();\r\n   }\r\n   listenToEmitter() {\r\n       //há»©ng event\r\n       emitter.on('EVENT_CLEAR_MODAL_DATA', () => {\r\n           //reset state\r\n           this.setState({\r\n                email: '',\r\n                password: '',\r\n                firstName: '',\r\n                lastName: '',\r\n                address: ''\r\n           })\r\n       })\r\n   }\r\n    componentDidMount() {\r\n        \r\n    }\r\n    toggle = () => {\r\n        this.props.toggleFromParent();\r\n    }\r\n\r\n    handleOnChageInput = (event, id) => {\r\n        //bad code( modify state truc tiep )\r\n        // this.state[id] = event.target.value;\r\n        // this.setState({\r\n        //     ...this.state,\r\n        // }, () => {\r\n        //     console.log('check bab state:', this.state)\r\n        // })\r\n        //good code\r\n        let copyState = {...this.state};\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            ...copyState      \r\n        });\r\n    }\r\n// typo : viet sai\r\n    checkValideInput = () => {\r\n        let isValid = true;\r\n        let arrInput = ['email', 'password', 'firstName','lastName','address'];\r\n        for(let i = 0; i < arrInput.length; i++) {\r\n            console.log('check loop',this.state[arrInput[i]], arrInput[i]);\r\n            if(!this.state[arrInput[i]]){\r\n                isValid = false;\r\n                alert('Missing parameter:' +arrInput[i]);\r\n                break;\r\n            }           \r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    handleAddNewUser = () => {\r\n        let isValid = this.checkValideInput();\r\n        if(isValid === true) {\r\n            // call api create modal\r\n            this.props.createNewUser(this.state);\r\n            console.log('data modal', this.state);\r\n        }\r\n    }\r\n    render() {\r\n        // console.log('check child props', this.props)\r\n        // console.log('check ', this.props.isOpenModalUser)\r\n        return (\r\n            <Modal \r\n            isOpen={this.props.isOpenModalUser}\r\n            toggle={()=>{this.toggle()}} \r\n            className={'modal-user-container'}\r\n            size=\"lg\"\r\n            >\r\n                <ModalHeader toggle={()=>{this.toggle()}}>Create a new user</ModalHeader>\r\n                <ModalBody>\r\n                    <div className=\"modal-user-body\">\r\n                    <div className=\"input-container\">\r\n                        <label>Email</label>\r\n                        <input type=\"email\" onChange={(event) => {this.handleOnChageInput(event,\"email\")}}\r\n                        value={this.state.email}/>\r\n                    </div>\r\n                    <div className=\"input-container\">\r\n                        <label>Password</label>\r\n                        <input type=\"Password\" onChange={(event) => {this.handleOnChageInput(event,\"password\")}}\r\n                        value={this.state.passwordw}/>\r\n                    </div>\r\n                    <div className=\"input-container\">\r\n                        <label>First Name</label>\r\n                        <input type=\"text\" onChange={(event) => {this.handleOnChageInput(event,\"firstName\")}}\r\n                        value={this.state.firstName}/>\r\n                    </div>\r\n                    <div className=\"input-container\">\r\n                        <label>Last Name</label>\r\n                        <input type=\"text\" onChange={(event) => {this.handleOnChageInput(event,\"lastName\")}}\r\n                        value={this.state.lastName}/>\r\n                    </div>\r\n                    <div className=\"input-container max-width-input\">\r\n                        <label>Address</label>\r\n                        <input type=\"text\" onChange={(event) => {this.handleOnChageInput(event,\"address\")}}\r\n                        value={this.state.address}/>\r\n                    </div>\r\n                    </div>\r\n                    \r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" className=\"px-3\" onClick={()=>{this.handleAddNewUser()}}>Save Changes</Button>\r\n                    <Button color=\"secondary\" className=\"px-3\"onClick={()=>{this.toggle()}}>cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalManage);\r\n"]},"metadata":{},"sourceType":"module"}