{"ast":null,"code":"var _jsxFileName = \"/home/asus2/Frontend-React.JS-QuickStart/src/containers/System/Admin/ManageDoctor.js\";\nimport React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport * as actions from \"../../../store/actions\";\nimport MarkdownIt from 'markdown-it';\nimport MdEditor from 'react-markdown-editor-lite'; //import style manually\n\nimport 'react-markdown-editor-lite/lib/index.css';\nimport './ManageDoctor.scss';\nimport Select from 'react-select';\nimport { LANGUAGES, CRUD_Actions } from '../../../utils';\nimport { getDetailInforDoctor } from \"../../../services/userService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  value: 'chocolate',\n  label: 'Chocolate'\n}, {\n  value: 'strawberry',\n  label: 'Strawberry'\n}, {\n  value: 'vanilla',\n  label: 'Vanilla'\n}];\nconst mdParser = new MarkdownIt();\n\nclass ManageDoctor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.buildDataInputSelect = (inputData, type) => {\n      let result = [];\n      let {\n        language\n      } = this.props;\n\n      if (inputData && inputData.length > 0) {\n        inputData.map((item, index) => {\n          let object = {};\n          let labelVi = type === 'USERS' ? `${item.lastName} ${item.firstName}` : item.valueVi;\n          let labelEn = type === 'USERS' ? `${item.firstName} ${item.lastName}` : item.valueEn;\n          object.label = language === LANGUAGES.VI ? labelVi : labelEn;\n          object.value = item.id;\n          result.push(object);\n        });\n      }\n\n      return result;\n    };\n\n    this.handleEditorChange = ({\n      html,\n      text\n    }) => {\n      this.setState({\n        contentMarkdown: text,\n        contentHTML: html\n      });\n    };\n\n    this.handleSaveContentMarkdown = () => {\n      let {\n        hasOldData\n      } = this.state;\n      this.props.saveDetailDoctors({\n        doctorId: this.state.selectedOption.value,\n        contentHTML: this.state.contentHTML,\n        contentMarkdown: this.state.contentMarkdown,\n        description: this.state.description,\n        doctorId: this.state.selectedOption.value,\n        action: hasOldData === true ? CRUD_Actions.EDIT : CRUD_Actions.CREATE\n      });\n    };\n\n    this.handleChangeSelect = async selectedOption => {\n      this.setState({\n        selectedOption\n      });\n      let res = await getDetailInforDoctor(selectedOption.value);\n\n      if (res && res.errCode === 0 && res.data && res.data.Markdown) {\n        let markdown = res.data.Markdown;\n        this.setState({\n          contentHTML: markdown.contentHTML,\n          contentMarkdown: markdown.contentMarkdown,\n          description: markdown.description,\n          hasOldData: true\n        });\n      } else {\n        this.setState({\n          contentHTML: '',\n          contentMarkdown: '',\n          description: '',\n          hasOldData: ''\n        });\n      }\n    };\n\n    this.handleOnChangeDesc = event => {\n      this.setState({\n        description: event.target.value\n      });\n    };\n\n    this.state = {\n      doctorId: '',\n      contentMarkdown: '',\n      contentHTML: '',\n      selectedOption: '',\n      description: '',\n      listDoctors: [],\n      hasOldData: false,\n      listPrice: [],\n      listPayment: [],\n      listProvince: [],\n      selectedPrice: '',\n      selectedPayment: '',\n      selectedProvince: '',\n      nameClinic: '',\n      addressClinic: '',\n      note: ''\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchAllDoctors();\n    this.props.getAllRequiredDoctorInfor();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.allDoctors !== this.props.allDoctors) {\n      let dataSelect = this.buildDataInputSelect(this.props.allDoctors, 'USERS');\n      this.setState({\n        listDoctors: dataSelect\n      });\n    }\n\n    if (prevProps.language !== this.props.language) {\n      let dataSelect = this.buildDataInputSelect(this.props.allDoctors);\n      this.setState({\n        listDoctors: dataSelect\n      });\n    }\n\n    if (prevProps.allRequiredDoctorInfor !== this.props.allRequiredDoctorInfor) {\n      let {\n        resPayment,\n        resPrice,\n        resProvince\n      } = this.props.allRequiredDoctorInfor;\n      let dataSelectPrice = this.buildDataInputSelect(resPrice);\n      let dataSelectPayment = this.buildDataInputSelect(resPayment);\n      let dataSelectProvince = this.buildDataInputSelect(resProvince);\n      console.log('data new: ', dataSelectPrice, dataSelectPayment, dataSelectProvince);\n      this.setState({\n        listPrice: dataSelectPrice,\n        listPayment: dataSelectPayment,\n        listProvince: dataSelectProvince\n      });\n    }\n  }\n\n  render() {\n    let {\n      hasOldData\n    } = this.state;\n    console.log('check price: ', this.state.listPrice);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manage-doctor-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manage-doctor-title\",\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"admin.manage-doctor.title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"more-infor\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-left form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.select-doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: this.state.selectedOption,\n            onChange: this.handleChangeSelect,\n            options: this.state.listDoctors,\n            placeholder: 'chon bac si'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.intro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            rows: \"4\",\n            onChange: event => this.handleOnChangeDesc(event),\n            value: this.state.description,\n            children: \"acira\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"more-infor-extra row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4 form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Chon gia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            options: this.state.listPrice,\n            placeholder: 'chon gia'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4 form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Chon phuong thuc thanh toan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            options: this.state.listPayment,\n            placeholder: 'chon phuong thuc thanh toan'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4 form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Chon tinh thanh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            options: this.state.listProvince,\n            placeholder: 'chon tinh thanh'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4 form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Ten phong kham\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4 form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Dia chi phong kham\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4 form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Ghi chu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manage-doctor-editor\",\n        children: /*#__PURE__*/_jsxDEV(MdEditor, {\n          style: {\n            height: '500px'\n          },\n          renderHTML: text => mdParser.render(text),\n          onChange: this.handleEditorChange,\n          value: this.state.contentMarkdown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.handleSaveContentMarkdown(),\n        className: hasOldData === true ? \"save-content-doctor\" : \"create-content-doctor\",\n        children: hasOldData === true ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"admin.manage-doctor.save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"admin.manage-add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language,\n    allDoctors: state.admin.allDoctors,\n    allRequiredDoctorInfor: state.admin.allRequiredDoctorInfor\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAllDoctors: () => dispatch(actions.fetchAllDoctors()),\n    saveDetailDoctors: data => dispatch(actions.saveDetailDoctors(data)),\n    getAllRequiredDoctorInfor: () => dispatch(actions.getRequiredDoctorInfor())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageDoctor);","map":{"version":3,"sources":["/home/asus2/Frontend-React.JS-QuickStart/src/containers/System/Admin/ManageDoctor.js"],"names":["React","Component","FormattedMessage","connect","actions","MarkdownIt","MdEditor","Select","LANGUAGES","CRUD_Actions","getDetailInforDoctor","options","value","label","mdParser","ManageDoctor","constructor","props","buildDataInputSelect","inputData","type","result","language","length","map","item","index","object","labelVi","lastName","firstName","valueVi","labelEn","valueEn","VI","id","push","handleEditorChange","html","text","setState","contentMarkdown","contentHTML","handleSaveContentMarkdown","hasOldData","state","saveDetailDoctors","doctorId","selectedOption","description","action","EDIT","CREATE","handleChangeSelect","res","errCode","data","Markdown","markdown","handleOnChangeDesc","event","target","listDoctors","listPrice","listPayment","listProvince","selectedPrice","selectedPayment","selectedProvince","nameClinic","addressClinic","note","componentDidMount","fetchAllDoctors","getAllRequiredDoctorInfor","componentDidUpdate","prevProps","prevState","snapshot","allDoctors","dataSelect","allRequiredDoctorInfor","resPayment","resPrice","resProvince","dataSelectPrice","dataSelectPayment","dataSelectProvince","console","log","render","height","mapStateToProps","app","admin","mapDispatchToProps","dispatch","getRequiredDoctorInfor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from \"../../../store/actions\";\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\n//import style manually\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\nimport './ManageDoctor.scss';\r\nimport Select from 'react-select';\r\nimport {LANGUAGES, CRUD_Actions} from '../../../utils';\r\nimport {getDetailInforDoctor} from \"../../../services/userService\"\r\n\r\nconst options = [\r\n    {value: 'chocolate', label: 'Chocolate'},\r\n    {value: 'strawberry', label:'Strawberry'},\r\n    {value:'vanilla', label:'Vanilla'},\r\n];\r\nconst mdParser = new MarkdownIt();\r\n\r\nclass ManageDoctor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            doctorId:'',\r\n            contentMarkdown:'',\r\n            contentHTML:'',\r\n            selectedOption:'',\r\n            description:'',\r\n            listDoctors:[],\r\n            hasOldData: false,\r\n\r\n            listPrice:[],\r\n            listPayment: [],\r\n            listProvince: [],\r\n            selectedPrice: '',\r\n            selectedPayment: '',\r\n            selectedProvince: '',\r\n            nameClinic: '',\r\n            addressClinic: '',\r\n            note: ''\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchAllDoctors();\r\n        this.props.getAllRequiredDoctorInfor();\r\n    }\r\n\r\n    buildDataInputSelect = (inputData, type) => {\r\n        let result = [];\r\n        let {language} = this.props;\r\n        if(inputData && inputData.length > 0){\r\n            inputData.map((item, index)=>{\r\n                let object = {};\r\n                let labelVi = type === 'USERS' ? `${item.lastName} ${item.firstName}` : item.valueVi;\r\n                let labelEn = type === 'USERS' ? `${item.firstName} ${item.lastName}` : item.valueEn;\r\n                object.label = language === LANGUAGES.VI ? labelVi : labelEn;\r\n                object.value = item.id;\r\n                result.push(object);\r\n            })\r\n            \r\n        }\r\n        return result;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.allDoctors !== this.props.allDoctors){\r\n            let dataSelect = this.buildDataInputSelect(this.props.allDoctors, 'USERS')\r\n            this.setState({\r\n                listDoctors:dataSelect\r\n            })\r\n        }\r\n        if(prevProps.language !== this.props.language){\r\n            let dataSelect = this.buildDataInputSelect(this.props.allDoctors)\r\n            this.setState({\r\n                listDoctors:dataSelect\r\n            })\r\n        }\r\n        if(prevProps.allRequiredDoctorInfor !== this.props.allRequiredDoctorInfor){\r\n            let {resPayment, resPrice, resProvince} = this.props.allRequiredDoctorInfor;\r\n            let dataSelectPrice = this.buildDataInputSelect(resPrice);\r\n            let dataSelectPayment= this.buildDataInputSelect(resPayment);\r\n            let dataSelectProvince = this.buildDataInputSelect(resProvince);\r\n            console.log('data new: ', dataSelectPrice, dataSelectPayment, dataSelectProvince);\r\n\r\n            this.setState({\r\n                listPrice: dataSelectPrice,\r\n                listPayment: dataSelectPayment,\r\n                listProvince: dataSelectProvince,\r\n            })\r\n        }\r\n    }\r\n    handleEditorChange = ({html, text}) => {\r\n        this.setState({\r\n            contentMarkdown: text,\r\n            contentHTML: html,\r\n        })\r\n    }\r\n    handleSaveContentMarkdown = () => {\r\n        let {hasOldData} = this.state;\r\n        this.props.saveDetailDoctors({\r\n            doctorId: this.state.selectedOption.value,\r\n            contentHTML: this.state.contentHTML,\r\n            contentMarkdown: this.state.contentMarkdown,\r\n            description:this.state.description,\r\n            doctorId: this.state.selectedOption.value,\r\n            action: hasOldData === true ? CRUD_Actions.EDIT : CRUD_Actions.CREATE\r\n            \r\n        });\r\n    }\r\n    handleChangeSelect = async (selectedOption) => {\r\n        this.setState({selectedOption});\r\n        let res = await getDetailInforDoctor(selectedOption.value);\r\n        if (res && res.errCode === 0 && res.data && res.data.Markdown) {\r\n            let markdown = res.data.Markdown;\r\n            this.setState({\r\n                contentHTML: markdown.contentHTML,\r\n                contentMarkdown: markdown.contentMarkdown,\r\n                description: markdown.description,\r\n                hasOldData: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                contentHTML: '',\r\n                contentMarkdown:'',\r\n                description: '',\r\n                hasOldData:'',\r\n\r\n            })\r\n        }\r\n    };\r\n    handleOnChangeDesc = (event) => {\r\n        this.setState({description: event.target.value})\r\n    }\r\n    \r\n    render(){\r\n        let {hasOldData} = this.state;\r\n        console.log('check price: ', this.state.listPrice)\r\n        return(\r\n            \r\n                <div className=\"manage-doctor-container\">\r\n                    <div className=\"manage-doctor-title\">\r\n                        <FormattedMessage id=\"admin.manage-doctor.title\"/>\r\n                    </div>\r\n                    <div className=\"more-infor\">\r\n                        <div className=\"content-left form-group\">\r\n                            <label>< FormattedMessage id=\"admin.manage-doctor.select-doctor\"/></label>\r\n                            <Select\r\n                                value={this.state.selectedOption}\r\n                                onChange = {this.handleChangeSelect}\r\n                                options ={this.state.listDoctors}\r\n                                placeholder={'chon bac si'}\r\n                            />\r\n                        </div>\r\n                        <div className=\"content-right\">\r\n                            <label><FormattedMessage id=\"admin.manage-doctor.intro\"/></label>\r\n                            <textarea className=\"form-control\" rows=\"4\"\r\n                                onChange = {(event) =>this.handleOnChangeDesc(event)}\r\n                                value = {this.state.description}\r\n                                >acira</textarea>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"more-infor-extra row\">\r\n                        <div className=\"col-4 form-group\">\r\n                            <label>Chon gia</label>\r\n                            <Select\r\n                                options={this.state.listPrice}\r\n                                placeholder={'chon gia'}\r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"col-4 form-group\">\r\n                            <label>Chon phuong thuc thanh toan</label>\r\n                            <Select\r\n                                options={this.state.listPayment}\r\n                                placeholder={'chon phuong thuc thanh toan'}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-4 form-group\">\r\n                            <label>Chon tinh thanh</label>\r\n                            <Select\r\n                                options={this.state.listProvince}\r\n                                placeholder={'chon tinh thanh'}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-4 form-group\">\r\n                            <label>Ten phong kham</label>\r\n                            <input className=\"form-control\"></input>\r\n                        </div>\r\n                        <div className=\"col-4 form-group\">\r\n                            <label>Dia chi phong kham</label>\r\n                            <input className=\"form-control\"></input>\r\n                        </div>\r\n                        <div className=\"col-4 form-group\">\r\n                            <label>Ghi chu</label>\r\n                            <input className=\"form-control\"></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"manage-doctor-editor\">\r\n                        <MdEditor\r\n                            style={{height: '500px'}}\r\n                            renderHTML = {text => mdParser.render(text)}\r\n                            onChange = {this.handleEditorChange}\r\n                            value = {this.state.contentMarkdown}\r\n                        />\r\n                    </div>\r\n                    <button\r\n                    onClick = {() => this.handleSaveContentMarkdown()}\r\n                    className= {hasOldData === true ? \"save-content-doctor\": \"create-content-doctor\"}\r\n                    >{hasOldData === true ? \r\n                    <span><FormattedMessage id=\"admin.manage-doctor.save\"/></span> \r\n                    : \r\n                    <span><FormattedMessage id=\"admin.manage-add\"/></span>\r\n                    }\r\n                    </button>\r\n                </div>\r\n\r\n            \r\n        )\r\n    }\r\n}const mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n        allDoctors: state.admin.allDoctors,\r\n        allRequiredDoctorInfor: state.admin.allRequiredDoctorInfor,\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchAllDoctors: () => dispatch(actions.fetchAllDoctors()),\r\n        saveDetailDoctors: (data) => dispatch(actions.saveDetailDoctors(data)),\r\n        getAllRequiredDoctorInfor: () => dispatch(actions.getRequiredDoctorInfor()),\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageDoctor);"]},"metadata":{},"sourceType":"module"}