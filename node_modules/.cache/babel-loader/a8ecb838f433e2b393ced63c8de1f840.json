{"ast":null,"code":"var _jsxFileName = \"/home/asus2/Frontend-React.JS-QuickStart/src/containers/Patient/VerifyEmail.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\nimport { postPatientBookAppointment, postVerifyBookingAppointment } from \"../../services/userService\";\nimport HeaderHome from \"../HomePage/HeaderHome\";\nimport './VerifyEmail.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass VerifyEmail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      statusVerify: false,\n      errCode: 0\n    };\n  }\n\n  async componentDidMount() {\n    if (this.props.location && this.props.location.search) {\n      let urlParams = new URLSearchParams(this.props.location.search);\n      let token = urlParams.get('token');\n      let doctorId = urlParams.get('doctorId');\n      let res = await postVerifyBookingAppointment({\n        token: token,\n        doctorId: doctorId\n      });\n\n      if (res && res.errCode === 0) {\n        this.setState({\n          statusVerify: true,\n          errCode: res.errCode\n        });\n      } else {\n        this.setState({\n          statusVerify: true,\n          errCode: res && res.errCode ? res.errCode : -1\n        });\n      }\n    }\n  }\n\n  async componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.language !== prevProps.language) {}\n  }\n\n  render() {\n    let {\n      statusVerify,\n      errCode\n    } = this.state;\n    console.log('check state email', this.state);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HeaderHome, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"verify-email-container\",\n        children: statusVerify === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading data ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: +errCode === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"infor-booking\",\n            children: \"Xac nhan lich hen thanh cong\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"infor-booking\",\n            children: \"Lich hen khong ton tai\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VerifyEmail);","map":{"version":3,"sources":["/home/asus2/Frontend-React.JS-QuickStart/src/containers/Patient/VerifyEmail.js"],"names":["React","Component","connect","FormattedMessage","postPatientBookAppointment","postVerifyBookingAppointment","HeaderHome","VerifyEmail","constructor","props","state","statusVerify","errCode","componentDidMount","location","search","urlParams","URLSearchParams","token","get","doctorId","res","setState","componentDidUpdate","prevProps","prevState","snapshot","language","render","console","log","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,SAASC,0BAAT,EAAqCC,4BAArC,QAAyE,4BAAzE;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAO,oBAAP;;;;AAEA,MAAMC,WAAN,SAA0BN,SAA1B,CAAmC;AAC/BO,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,KADL;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIH;;AAEsB,QAAjBC,iBAAiB,GAAE;AACrB,QAAG,KAAKJ,KAAL,CAAWK,QAAX,IAAuB,KAAKL,KAAL,CAAWK,QAAX,CAAoBC,MAA9C,EAAqD;AACjD,UAAIC,SAAS,GAAG,IAAIC,eAAJ,CAAoB,KAAKR,KAAL,CAAWK,QAAX,CAAoBC,MAAxC,CAAhB;AACA,UAAIG,KAAK,GAAGF,SAAS,CAACG,GAAV,CAAc,OAAd,CAAZ;AACA,UAAIC,QAAQ,GAAGJ,SAAS,CAACG,GAAV,CAAc,UAAd,CAAf;AACA,UAAIE,GAAG,GAAG,MAAMhB,4BAA4B,CAAC;AACzCa,QAAAA,KAAK,EAAEA,KADkC;AAEzCE,QAAAA,QAAQ,EAAEA;AAF+B,OAAD,CAA5C;;AAKA,UAAGC,GAAG,IAAIA,GAAG,CAACT,OAAJ,KAAe,CAAzB,EAA2B;AACvB,aAAKU,QAAL,CAAc;AACVX,UAAAA,YAAY,EAAE,IADJ;AAEVC,UAAAA,OAAO,EAAES,GAAG,CAACT;AAFH,SAAd;AAIH,OALD,MAKM;AACF,aAAKU,QAAL,CAAc;AACVX,UAAAA,YAAY,EAAE,IADJ;AAEVC,UAAAA,OAAO,EAAES,GAAG,IAAIA,GAAG,CAACT,OAAX,GAAqBS,GAAG,CAACT,OAAzB,GAAmC,CAAC;AAFnC,SAAd;AAIH;AACJ;AACJ;;AACuB,QAAlBW,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAgC;AACpD,QAAG,KAAKjB,KAAL,CAAWkB,QAAX,KAAwBH,SAAS,CAACG,QAArC,EAA8C,CAE7C;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAI;AAACjB,MAAAA,YAAD;AAAeC,MAAAA;AAAf,QAA0B,KAAKF,KAAnC;AACAmB,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,KAAKpB,KAAtC;AACA,wBACI;AAAA,8BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA,kBACKC,YAAY,KAAK,KAAjB,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,gBAGG;AAAA,oBACK,CAACC,OAAD,KAAa,CAAb,gBACG;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH,gBAEG;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,oBADJ;AAiBH;;AA1D8B;;AA4DnC,MAAMmB,eAAe,GAAGrB,KAAK,IAAI;AAC7B,SAAO,EAAP;AAEH,CAHD;;AAKA,MAAMsB,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO,EAAP;AAEH,CAHD;;AAKA,eAAe/B,OAAO,CAAC6B,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CzB,WAA7C,CAAf","sourcesContent":["import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\nimport { postPatientBookAppointment, postVerifyBookingAppointment } from \"../../services/userService\";\nimport HeaderHome from \"../HomePage/HeaderHome\";\nimport './VerifyEmail.scss';\n\nclass VerifyEmail extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            statusVerify: false,\n            errCode: 0\n        }\n    }\n\n    async componentDidMount(){\n        if(this.props.location && this.props.location.search){\n            let urlParams = new URLSearchParams(this.props.location.search);\n            let token = urlParams.get('token');\n            let doctorId = urlParams.get('doctorId');\n            let res = await postVerifyBookingAppointment({\n                token: token,\n                doctorId: doctorId\n            })\n\n            if(res && res.errCode=== 0){\n                this.setState({\n                    statusVerify: true,\n                    errCode: res.errCode\n                })\n            }else {\n                this.setState({\n                    statusVerify: true,\n                    errCode: res && res.errCode ? res.errCode : -1\n                })\n            }\n        }\n    }\n    async componentDidUpdate(prevProps, prevState, snapshot){\n        if(this.props.language !== prevProps.language){\n\n        }\n    }\n    \n    render() {\n        let {statusVerify, errCode} = this.state;\n        console.log('check state email', this.state)\n        return(\n            <>\n                <HeaderHome/>\n                <div className=\"verify-email-container\">\n                    {statusVerify === false ?\n                        <div>Loading data ...</div>\n                        :\n                        <div>\n                            {+errCode === 0 ?\n                                <div className=\"infor-booking\">Xac nhan lich hen thanh cong</div>  :  \n                                <div className=\"infor-booking\">Lich hen khong ton tai</div>    \n                            }\n                        </div>\n                    }\n                </div>\n            </>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VerifyEmail);"]},"metadata":{},"sourceType":"module"}