{"ast":null,"code":"var _jsxFileName = \"/home/asus2/Frontend-React.JS-QuickStart/src/containers/HomePage/section/Specialty.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\nimport Slider from 'react-slick';\nimport { getAllSpecialty } from '../../../services/userService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Specialty extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataSpecialty: []\n    };\n  }\n\n  async componentDidMount() {\n    let res = await getAllSpecialty();\n\n    if (res && res.errCode === 0) {\n      this.setState({\n        dataSpecialty: res.data ? res.data : []\n      });\n    }\n  }\n\n  render() {\n    let {\n      dataSpecialty\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-share section-specialty\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"title-section\",\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"homepage.specialty-poplular\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-section\",\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"homepage.more-infor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-body\",\n          children: /*#__PURE__*/_jsxDEV(Slider, { ...this.props.settings,\n            children: dataSpecialty && dataSpecialty.length > 0 && dataSpecialty.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"section-customize specialty-child\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-image section-specialty\",\n                  style: {\n                    backgroundImage: `url(${item.image})`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"specialty-name\",\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.user.isLogged\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Specialty);","map":{"version":3,"sources":["/home/asus2/Frontend-React.JS-QuickStart/src/containers/HomePage/section/Specialty.js"],"names":["React","Component","connect","FormattedMessage","Slider","getAllSpecialty","Specialty","constructor","props","state","dataSpecialty","componentDidMount","res","errCode","setState","data","render","settings","length","map","item","index","backgroundImage","image","name","mapStateToProps","isLoggedIn","user","isLogged","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,gBAAR,QAA+B,YAA/B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAAQC,eAAR,QAA8B,+BAA9B;;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAE9BM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAG;AADP,KAAb;AAGH;;AAEsB,QAAjBC,iBAAiB,GAAG;AACtB,QAAIC,GAAG,GAAG,MAAMP,eAAe,EAA/B;;AACA,QAAIO,GAAG,IAAIA,GAAG,CAACC,OAAJ,KAAgB,CAA3B,EAA6B;AACzB,WAAKC,QAAL,CAAc;AACVJ,QAAAA,aAAa,EAAEE,GAAG,CAACG,IAAJ,GAAWH,GAAG,CAACG,IAAf,GAAqB;AAD1B,OAAd;AAGH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AAEL,QAAI;AAACN,MAAAA;AAAD,QAAkB,KAAKD,KAA3B;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACI;AAAM,YAAA,SAAS,EAAC,eAAhB;AAAA,mCACI,QAAC,gBAAD;AAAkB,cAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAQ,YAAA,SAAS,EAAC,aAAlB;AAAA,mCACI,QAAC,gBAAD;AAAkB,cAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,iCACI,QAAC,MAAD,OAAY,KAAKD,KAAL,CAAWS,QAAvB;AAAA,sBACKP,aAAa,IAAIA,aAAa,CAACQ,MAAd,GAAuB,CAAxC,IACGR,aAAa,CAACS,GAAd,CAAkB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC/B,kCACI;AAAK,gBAAA,SAAS,EAAC,mCAAf;AAAA,wCACI;AAAK,kBAAA,SAAS,EAAC,4BAAf;AACI,kBAAA,KAAK,EAAE;AAACC,oBAAAA,eAAe,EAAG,OAAMF,IAAI,CAACG,KAAM;AAApC;AADX;AAAA;AAAA;AAAA;AAAA,wBADJ,eAII;AAAK,kBAAA,SAAS,EAAC,gBAAf;AAAA,4BAAiCH,IAAI,CAACI;AAAtC;AAAA;AAAA;AAAA;AAAA,wBAJJ;AAAA,iBAAwDH,KAAxD;AAAA;AAAA;AAAA;AAAA,sBADJ;AAQH,aATD;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAgCH;;AAtD6B;;AAyDlC,MAAMI,eAAe,GAAGhB,KAAK,IAAI;AAC7B,SAAO;AACHiB,IAAAA,UAAU,EAAEjB,KAAK,CAACkB,IAAN,CAAWC;AADpB,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO,EAAP;AACH,CAFD;;AAIA,eAAe5B,OAAO,CAACuB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CvB,SAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport Slider from 'react-slick';\r\nimport {getAllSpecialty} from '../../../services/userService';\r\n\r\nclass Specialty extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            dataSpecialty : []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let res = await getAllSpecialty();\r\n        if (res && res.errCode === 0){\r\n            this.setState({\r\n                dataSpecialty: res.data ? res.data: []\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let {dataSpecialty} = this.state;\r\n        \r\n        return (\r\n            <div className=\"section-share section-specialty\">\r\n                <div className=\"section-container\">\r\n                    <div className=\"section-header\">\r\n                        <span className=\"title-section\">\r\n                            <FormattedMessage id=\"homepage.specialty-poplular\"/>\r\n                        </span>\r\n                        <button className=\"btn-section\">\r\n                            <FormattedMessage id=\"homepage.more-infor\"/>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"section-body\">\r\n                        <Slider {...this.props.settings}>\r\n                            {dataSpecialty && dataSpecialty.length > 0 &&\r\n                                dataSpecialty.map((item, index) => {\r\n                                    return (\r\n                                        <div className=\"section-customize specialty-child\" key={index}>\r\n                                            <div className=\"bg-image section-specialty\"\r\n                                                style={{backgroundImage: `url(${item.image})`}}>   \r\n                                            </div>\r\n                                            <div className=\"specialty-name\">{item.name}</div>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                                )\r\n                            }\r\n                        </Slider>\r\n                    </div>\r\n                    \r\n                </div> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLogged,\r\n        \r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Specialty)"]},"metadata":{},"sourceType":"module"}