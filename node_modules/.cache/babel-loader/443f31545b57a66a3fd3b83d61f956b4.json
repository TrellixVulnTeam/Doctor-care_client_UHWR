{"ast":null,"code":"var _jsxFileName = \"/home/asus2/Frontend-React.JS-QuickStart/src/containers/System/ModalUserEdit.js\";\nimport React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Button, Modal, ModalFooter, ModalHeader, ModalBody } from 'reactstrap';\nimport { emitter } from '../../utils/emitter';\nimport _ from 'lodash'; //ham su li mang, object\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ModalManage extends Component {\n  //props <-> properties ; nested\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.props.toggleFromParentEdit();\n    };\n\n    this.handleOnChageInput = (event, id) => {\n      let copyState = { ...this.state\n      };\n      copyState[id] = event.target.value;\n      this.setState({ ...copyState\n      });\n    };\n\n    this.checkValideInput = () => {\n      let isValid = true;\n      let arrInput = ['firstName', 'lastName', 'address'];\n\n      for (let i = 0; i < arrInput.length; i++) {\n        console.log('check loop', this.state[arrInput[i]], arrInput[i]);\n\n        if (!this.state[arrInput[i]]) {\n          isValid = false;\n          alert('Missing parameter:' + arrInput[i]);\n          break;\n        }\n      }\n\n      return isValid;\n    };\n\n    this.handleUpdateUser = () => {\n      let isValid = this.checkValideInput();\n\n      if (isValid === true) {\n        this.props.EditUser(this.state);\n      }\n    };\n\n    this.state = {\n      id: this.props.lastData.id,\n      email: this.props.lastData.email,\n      password: '',\n      firstName: this.props.lastData.firstName,\n      lastName: this.props.lastData.lastName,\n      address: this.props.lastData.address\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: this.props.isOpenModalUserEdit,\n      toggle: () => {\n        this.toggle();\n      },\n      className: 'modal-user-container',\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => {\n          this.toggle();\n        },\n        children: \"Edit User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-user-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              value: this.state.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"Password\",\n              value: this.state.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: event => {\n                this.handleOnChageInput(event, \"firstName\");\n              },\n              value: this.state.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: event => {\n                this.handleOnChageInput(event, \"lastName\");\n              },\n              value: this.state.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container max-width-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: event => {\n                this.handleOnChageInput(event, \"address\");\n              },\n              value: this.state.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          className: \"px-3\",\n          onClick: () => {\n            this.handleUpdateUser();\n          },\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          className: \"px-3\",\n          onClick: () => {\n            this.toggle();\n          },\n          children: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalManage);","map":{"version":3,"sources":["/home/asus2/Frontend-React.JS-QuickStart/src/containers/System/ModalUserEdit.js"],"names":["React","Component","FormattedMessage","connect","Button","Modal","ModalFooter","ModalHeader","ModalBody","emitter","_","ModalManage","constructor","props","toggle","toggleFromParentEdit","handleOnChageInput","event","id","copyState","state","target","value","setState","checkValideInput","isValid","arrInput","i","length","console","log","alert","handleUpdateUser","EditUser","lastData","email","password","firstName","lastName","address","componentDidMount","render","isOpenModalUserEdit","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { Button,Modal,ModalFooter, ModalHeader, ModalBody } from 'reactstrap';\r\nimport {emitter} from '../../utils/emitter';\r\nimport _ from 'lodash'; //ham su li mang, object\r\nclass ModalManage extends Component {\r\n\r\n//props <-> properties ; nested\r\n   constructor(props) {\r\n       super(props);\r\n       this.state = {\r\n            id: this.props.lastData.id,\r\n            email: this.props.lastData.email,\r\n            password:'',\r\n            firstName: this.props.lastData.firstName,\r\n            lastName: this.props.lastData.lastName,\r\n            address: this.props.lastData.address,\r\n       }\r\n   }\r\n\r\n    componentDidMount() {\r\n    }\r\n    toggle = () => {\r\n        this.props.toggleFromParentEdit();\r\n    }\r\n\r\n    handleOnChageInput = (event, id) => {\r\n        let copyState = {...this.state};\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            ...copyState      \r\n        });\r\n    }\r\n\r\n    checkValideInput = () => {\r\n        let isValid = true;\r\n        let arrInput = [ 'firstName','lastName','address'];\r\n        for(let i = 0; i < arrInput.length; i++) {\r\n            console.log('check loop',this.state[arrInput[i]], arrInput[i]);\r\n            if(!this.state[arrInput[i]]){\r\n                isValid = false;\r\n                alert('Missing parameter:' +arrInput[i]);\r\n                break;\r\n            }           \r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    handleUpdateUser = () => {\r\n        let isValid = this.checkValideInput();\r\n        if(isValid === true) {\r\n            this.props.EditUser(this.state);\r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <Modal \r\n            isOpen={this.props.isOpenModalUserEdit}\r\n            toggle={()=>{this.toggle()}} \r\n            className={'modal-user-container'}\r\n            size=\"lg\"\r\n            >\r\n                <ModalHeader toggle={()=>{this.toggle()}}>Edit User</ModalHeader>\r\n                <ModalBody>\r\n                    <div className=\"modal-user-body\">\r\n                    <div className=\"input-container\">\r\n                        <label>Email</label>\r\n                        <input type=\"email\" \r\n                        value={this.state.email}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-container\">\r\n                        <label>Password</label>\r\n                        <input type=\"Password\"\r\n                        value={this.state.password} \r\n                        />\r\n                    </div>\r\n                    <div className=\"input-container\">\r\n                        <label>First Name</label>\r\n                        <input type=\"text\" onChange={(event) => {this.handleOnChageInput(event,\"firstName\")}}\r\n                        value={this.state.firstName}/>\r\n                    </div>\r\n                    <div className=\"input-container\">\r\n                        <label>Last Name</label>\r\n                        <input type=\"text\" onChange={(event) => {this.handleOnChageInput(event,\"lastName\")}}\r\n                        value={this.state.lastName}/>\r\n                    </div>\r\n                    <div className=\"input-container max-width-input\">\r\n                        <label>Address</label>\r\n                        <input type=\"text\" onChange={(event) => {this.handleOnChageInput(event,\"address\")}}\r\n                        value={this.state.address}/>\r\n                    </div>\r\n                    </div>\r\n                    \r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" className=\"px-3\" onClick={()=>{this.handleUpdateUser()}}>Save Changes</Button>\r\n                    <Button color=\"secondary\" className=\"px-3\"onClick={()=>{this.toggle()}}>cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalManage);\r\n"]},"metadata":{},"sourceType":"module"}