{"ast":null,"code":"var _jsxFileName = \"/home/asus2/Frontend-React.JS-QuickStart/src/containers/System/Doctor/RemedyModal.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\nimport './RemedyModal.scss';\nimport { Modal, Button, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { toast } from \"react-toastify\";\nimport moment from \"moment\";\nimport { CommonUtils } from \"../../../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RemedyModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnchangeInput = (event, id) => {\n      let valueInput = event.target.value;\n      let stateCopy = { ...this.state\n      };\n      stateCopy[id] = valueInput;\n      this.setState({ ...stateCopy\n      });\n    };\n\n    this.handleOnchangeEmail = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.handleOnchangeImage = async event => {\n      let data = event.target.files;\n      let file = data[0];\n\n      if (file) {\n        let base64 = await CommonUtils.getBase64(file);\n        this.setState({\n          imgBase64: base64\n        });\n      }\n    };\n\n    this.handleSendRemedy = () => {\n      this.props.sendRemedy(this.state);\n    };\n\n    this.state = {\n      email: '',\n      imgBase64: ''\n    };\n  }\n\n  async componentDidMount() {\n    if (this.props.dataModal) {\n      this.setState({\n        email: this.props.dataModal.email\n      });\n    }\n  }\n\n  async componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.dataModal !== this.props) {\n      this.setState({\n        email: this.props.dataModal.email\n      });\n    }\n  }\n\n  render() {\n    //toggle={}\n    let {\n      isOpenModal,\n      closeRemedyModal,\n      dataModal,\n      sendRemedy\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpenModal,\n      className: 'booking-modal-container',\n      size: \"md\",\n      centered: true //backdrop={true}\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"modal-title\",\n          children: \"Gui hoa don kham benh thanh cong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"close\",\n          \"aria-lable\": \"close\",\n          onClick: closeRemedyModal,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-hidden\": \"true\",\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6 form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email benh nhan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"email\",\n              value: this.state.enail,\n              onChange: event => this.handleOnchangeEmail(event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6 form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Chon file don thuoc\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control-file\",\n              type: \"file\",\n              onChange: event => this.handleOnchangeImage(event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: sendRemedy,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), '', /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          onClick: closeRemedyModal,\n          children: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language,\n    genders: state.admin.genders\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RemedyModal);","map":{"version":3,"sources":["/home/asus2/Frontend-React.JS-QuickStart/src/containers/System/Doctor/RemedyModal.js"],"names":["React","Component","connect","FormattedMessage","Modal","Button","ModalHeader","ModalBody","ModalFooter","toast","moment","CommonUtils","RemedyModal","constructor","props","handleOnchangeInput","event","id","valueInput","target","value","stateCopy","state","setState","handleOnchangeEmail","email","handleOnchangeImage","data","files","file","base64","getBase64","imgBase64","handleSendRemedy","sendRemedy","componentDidMount","dataModal","componentDidUpdate","prevProps","prevState","snapshot","render","isOpenModal","closeRemedyModal","enail","mapDispatchToProps","dispatch","mapStateToProps","language","app","genders","admin"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\nimport './RemedyModal.scss';\nimport {Modal, Button, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\nimport {toast} from \"react-toastify\";\nimport moment from \"moment\";\nimport {CommonUtils} from \"../../../utils\";\n\nclass RemedyModal extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            email: '',\n            imgBase64: '',\n        \n        }\n    }\n    async componentDidMount(){\n        if (this.props.dataModal){\n            this.setState({\n                email: this.props.dataModal.email\n            })\n        }\n    }\n\n    async componentDidUpdate(prevProps, prevState, snapshot){\n        if (prevProps.dataModal !== this.props){\n            this.setState({\n                email: this.props.dataModal.email\n            })\n        }\n        \n    }\n\n    handleOnchangeInput = (event, id) =>  {\n        let valueInput = event.target.value;\n        let stateCopy = {...this.state};\n        stateCopy[id] = valueInput;\n        this.setState({\n            ...stateCopy\n        })\n    }\n\n    handleOnchangeEmail = (event) => {\n        this.setState({\n            email: event.target.value\n        })\n    }\n    \n    handleOnchangeImage = async (event) => {\n        let data = event.target.files;\n        let file = data[0];\n        if(file) {\n            let base64 = await CommonUtils.getBase64(file);\n            this.setState({\n                imgBase64: base64\n            })\n        }\n    }\n    handleSendRemedy = () => {\n        this.props.sendRemedy(this.state)\n    }\n    render(){\n        //toggle={}\n        let {isOpenModal, closeRemedyModal, dataModal, sendRemedy} = this.props;\n        return (\n            <Modal\n                isOpen={isOpenModal}\n                className={'booking-modal-container'}\n                size=\"md\"\n                centered\n                //backdrop={true}\n            >\n                <div className=\"modal-header\">\n                    <h5 className=\"modal-title\">Gui hoa don kham benh thanh cong</h5>\n                    <button  type=\"button\" className=\"close\" aria-lable=\"close\" onClick={closeRemedyModal}>\n                        <span aria-hidden=\"true\">X</span>\n                    </button>\n                </div>\n                <ModalBody>\n                    <div className=\"row\">\n                        <div className=\"col-6 form-group\">\n                            <label>Email benh nhan</label>\n                            <input className=\"form-control\" type =\"email\" value={this.state.enail}\n                                onChange = {(event) => this.handleOnchangeEmail(event)} />\n                        </div>\n                        <div className=\"col-6 form-group\">\n                            <label>Chon file don thuoc</label>\n                            <input className=\"form-control-file\" type=\"file\"\n                                onChange={(event) => this.handleOnchangeImage(event)}\n                                />\n                        </div>\n                    </div>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"primary\" onClick={sendRemedy}>Send</Button>{''}\n                    <Button color=\"secondary\" onClick={closeRemedyModal}>cancel</Button>\n                </ModalFooter>\n            </Modal>    \n        );\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        \n    };\n};\nconst mapStateToProps = state => {\n    return {\n        language: state.app.language,\n        genders: state.admin.genders,\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(RemedyModal);"]},"metadata":{},"sourceType":"module"}