{"ast":null,"code":"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\nimport './ProfileDoctor.scss';\nimport { getProfileDoctorById } from \"../../../services/userService\";\nimport { LANGUAGES } from '../../../utils';\nimport NumberFormat from \"react-number-format\";\n\nclass ProfileDoctor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getInforDoctor = async id => {\n      let result = {};\n\n      if (id) {\n        let res = await getProfileDoctorById(id);\n\n        if (res && res.errCode === 0) {\n          result = res.data;\n        }\n      }\n\n      return result;\n    };\n\n    this.state = {\n      dataProfile: {}\n    };\n  }\n\n  async componentDidMount() {\n    let data = await this.getInforDoctor(this.props.doctorId);\n    this.setState({\n      dataProfile: data\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.language !== prevProps.language) {}\n\n    if (this.props.doctorId !== prevProps.doctorId) {}\n  }\n\n  render() {\n    let {\n      dataProfile\n    } = this.state;\n    let {\n      language\n    } = this.props;\n    console.log('check state profile:', this.state);\n    let nameVi = '',\n        nameEn = '';\n\n    if (dataProfile && dataProfile.positionData) {\n      nameVi = `${dataProfile.positionData.valueVi}, ${dataProfile.lastName} ${dataProfile.firstName}`;\n      nameVi = `${dataProfile.positionData.valueEn}, ${dataProfile.firstName} ${dataProfile.lastName}`;\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/asus2/Frontend-React.JS-QuickStart/src/containers/Patient/Doctor/ProfileDoctor.js"],"names":["React","Component","connect","FormattedMessage","getProfileDoctorById","LANGUAGES","NumberFormat","ProfileDoctor","constructor","props","getInforDoctor","id","result","res","errCode","data","state","dataProfile","componentDidMount","doctorId","setState","componentDidUpdate","prevProps","prevState","snapshot","language","render","console","log","nameVi","nameEn","positionData","valueVi","lastName","firstName","valueEn"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAO,sBAAP;AACA,SAASC,oBAAT,QAAqC,+BAArC;AACA,SAAQC,SAAR,QAAwB,gBAAxB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;;AAEA,MAAMC,aAAN,SAA4BN,SAA5B,CAAsC;AAClCO,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAclBC,cAdkB,GAcD,MAAOC,EAAP,IAAc;AAC3B,UAAIC,MAAM,GAAG,EAAb;;AACA,UAAID,EAAJ,EAAQ;AACJ,YAAIE,GAAG,GAAG,MAAMT,oBAAoB,CAACO,EAAD,CAApC;;AACA,YAAIE,GAAG,IAAIA,GAAG,CAACC,OAAJ,KAAgB,CAA3B,EAA6B;AACzBF,UAAAA,MAAM,GAAGC,GAAG,CAACE,IAAb;AACH;AACJ;;AAED,aAAOH,MAAP;AACH,KAxBiB;;AAEd,SAAKI,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE;AADJ,KAAb;AAGH;;AAEsB,QAAjBC,iBAAiB,GAAG;AACtB,QAAIH,IAAI,GAAG,MAAM,KAAKL,cAAL,CAAoB,KAAKD,KAAL,CAAWU,QAA/B,CAAjB;AACA,SAAKC,QAAL,CAAc;AACVH,MAAAA,WAAW,EAAEF;AADH,KAAd;AAGH;;AAcuB,QAAlBM,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAgC;AACpD,QAAI,KAAKf,KAAL,CAAWgB,QAAX,KAAwBH,SAAS,CAACG,QAAtC,EAA+C,CAE9C;;AACD,QAAI,KAAKhB,KAAL,CAAWU,QAAX,KAAwBG,SAAS,CAACH,QAAtC,EAA+C,CAE9C;AACJ;;AAEDO,EAAAA,MAAM,GAAE;AACJ,QAAI;AAACT,MAAAA;AAAD,QAAgB,KAAKD,KAAzB;AACA,QAAI;AAACS,MAAAA;AAAD,QAAa,KAAKhB,KAAtB;AACAkB,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC,KAAKZ,KAAzC;AAEA,QAAIa,MAAM,GAAG,EAAb;AAAA,QAAiBC,MAAM,GAAG,EAA1B;;AACA,QAAKb,WAAW,IAAIA,WAAW,CAACc,YAAhC,EAA6C;AACzCF,MAAAA,MAAM,GAAI,GAAEZ,WAAW,CAACc,YAAZ,CAAyBC,OAAQ,KAAIf,WAAW,CAACgB,QAAS,IAAGhB,WAAW,CAACiB,SAAU,EAA/F;AACAL,MAAAA,MAAM,GAAI,GAAEZ,WAAW,CAACc,YAAZ,CAAyBI,OAAQ,KAAIlB,WAAW,CAACiB,SAAU,IAAGjB,WAAW,CAACgB,QAAS,EAA/F;AACH;AACJ;;AA9CiC","sourcesContent":["import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\nimport './ProfileDoctor.scss';\nimport { getProfileDoctorById } from \"../../../services/userService\";\nimport {LANGUAGES} from '../../../utils';\nimport NumberFormat from \"react-number-format\";\n\nclass ProfileDoctor extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            dataProfile: {}\n        }\n    }\n\n    async componentDidMount() {\n        let data = await this.getInforDoctor(this.props.doctorId);\n        this.setState({\n            dataProfile: data\n        })\n    }\n\n    getInforDoctor = async (id) => {\n        let result = {};\n        if (id) {\n            let res = await getProfileDoctorById(id);\n            if (res && res.errCode === 0){\n                result = res.data;\n            }\n        }\n\n        return result;\n    }\n\n    async componentDidUpdate(prevProps, prevState, snapshot){\n        if (this.props.language !== prevProps.language){\n\n        }\n        if (this.props.doctorId !== prevProps.doctorId){\n            \n        }\n    }\n\n    render(){\n        let {dataProfile} = this.state;\n        let {language} = this.props;\n        console.log('check state profile:', this.state)\n\n        let nameVi = '', nameEn = '';\n        if  (dataProfile && dataProfile.positionData){\n            nameVi = `${dataProfile.positionData.valueVi}, ${dataProfile.lastName} ${dataProfile.firstName}`\n            nameVi = `${dataProfile.positionData.valueEn}, ${dataProfile.firstName} ${dataProfile.lastName}`\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}