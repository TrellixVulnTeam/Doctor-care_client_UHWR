{"ast":null,"code":"var _jsxFileName = \"/home/asus2/Frontend-React.JS-QuickStart/src/containers/System/Doctor/ManagePatient.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\nimport './ManagePatient.scss';\nimport DatePicker from \"../../../components/Input/DatePicker\";\nimport { getAllPatientForDoctor } from '../../../services/userService';\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ManagePatient extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getDataPatient = async (user, formatedDate) => {\n      let res = await getAllPatientForDoctor({\n        doctorId: user.id,\n        date: formatedDate\n      });\n\n      if (res && res.errCode === 0) {\n        this.setState({\n          dataPatient: res.data\n        });\n      }\n    };\n\n    this.handleOnchangeDatePicker = date => {\n      this.setState({\n        currentDate: date[0]\n      }, () => {\n        let {\n          user\n        } = this.props;\n        let {\n          currentDate\n        } = this.state;\n        let formatedDate = new Date(currentDate).getTime();\n        this.getDataPatient(user, formatedDate);\n      });\n    };\n\n    this.handleBtnConfirm = () => {};\n\n    this.handleBtnRemedy = () => {};\n\n    this.state = {\n      currentDate: moment(new Date()).startOf('day').valueOf(),\n      dataPatient: []\n    };\n  }\n\n  async componentDidMount() {\n    let {\n      user\n    } = this.props;\n    let {\n      currentDate\n    } = this.state;\n    let formatedDate = new Date(currentDate).getTime();\n    this.getDataPatient(user, formatedDate);\n  }\n\n  async componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.language !== prevProps.language) {}\n  }\n\n  render() {\n    console.log('patient', this.state);\n    let {\n      dataPatient\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manage-patient-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-p-title\",\n        children: \"Quan ly benh nhan kham benh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manage-patient-body row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4 form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Chon kham ngay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            onChange: this.handleOnchangeDatePicker,\n            className: \"form-control\",\n            value: this.state.currentDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 table-manage-patient\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            style: {\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                colSpan: \"2\",\n                children: \"Telephone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Bill Gates\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"03092000\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"03092000\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManagePatient);","map":{"version":3,"sources":["/home/asus2/Frontend-React.JS-QuickStart/src/containers/System/Doctor/ManagePatient.js"],"names":["React","Component","connect","FormattedMessage","DatePicker","getAllPatientForDoctor","moment","ManagePatient","constructor","props","getDataPatient","user","formatedDate","res","doctorId","id","date","errCode","setState","dataPatient","data","handleOnchangeDatePicker","currentDate","state","Date","getTime","handleBtnConfirm","handleBtnRemedy","startOf","valueOf","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","language","render","console","log","width","mapStateToProps","app","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\nimport './ManagePatient.scss';\nimport DatePicker from \"../../../components/Input/DatePicker\";\nimport {getAllPatientForDoctor} from '../../../services/userService';\nimport moment from \"moment\";\n\nclass ManagePatient extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            currentDate: moment(new Date()).startOf('day').valueOf(),\n            dataPatient: []\n        } \n    }\n\n    async componentDidMount(){\n        let {user} = this.props;\n        let {currentDate} = this.state;\n        let formatedDate = new Date(currentDate).getTime();\n        this.getDataPatient(user, formatedDate)\n    }\n\n    getDataPatient = async (user, formatedDate) => {\n        let res = await getAllPatientForDoctor({\n            doctorId: user.id,\n            date: formatedDate\n        })\n\n        if(res && res.errCode === 0){\n            this.setState({\n                dataPatient: res.data\n            })\n        }\n    }\n\n    async componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.language !== prevProps.language){\n\n        }\n    }\n    \n    handleOnchangeDatePicker = (date) => {\n        this.setState({\n            currentDate: date[0]\n        }, ()=> {\n            let {user} = this.props;\n            let {currentDate} = this.state;\n            let formatedDate = new Date(currentDate).getTime();\n            this.getDataPatient(user, formatedDate)\n        })\n    }\n\n    handleBtnConfirm = () => {\n\n    }\n\n    handleBtnRemedy = () => {\n\n    }\n\n    render() {\n        console.log('patient', this.state)\n        let {dataPatient} = this.state;\n        return(\n            <div className=\"manage-patient-container\">\n                <div className=\"m-p-title\">\n                    Quan ly benh nhan kham benh\n                </div>\n                <div className=\"manage-patient-body row\">\n                    <div className=\"col-4 form-group\">\n                        <label>Chon kham ngay</label>\n                        <DatePicker\n                            onChange = {this.handleOnchangeDatePicker}\n                            className = \"form-control\"\n                            value = {this.state.currentDate}\n                        />\n                    </div>\n                    <div className=\"col-12 table-manage-patient\">\n                        <table style={{width: '100%'}}>\n                            <tr>\n                                <th>Name</th>\n                                <th colSpan=\"2\">Telephone</th>\n                            </tr>\n                            <tr>\n                                <td>Bill Gates</td>\n                                <td>03092000</td>\n                                <td>03092000</td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    \n}\n\nconst mapStateToProps = state => {\n    return {\n        language: state.app.language,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManagePatient)"]},"metadata":{},"sourceType":"module"}