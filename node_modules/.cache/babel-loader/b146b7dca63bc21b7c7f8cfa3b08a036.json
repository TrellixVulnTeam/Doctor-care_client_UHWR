{"ast":null,"code":"var _jsxFileName = \"/home/asus2/Frontend-React.JS-QuickStart/src/containers/System/Admin/ManageDoctor.js\";\nimport React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport * as actions from \"../../../store/actions\";\nimport MarkdownIt from 'markdown-it';\nimport MdEditor from 'react-markdown-editor-lite'; //import style manually\n\nimport 'react-markdown-editor-lite/lib/index.css';\nimport './ManageDoctor.scss';\nimport Select from 'react-select';\nimport { LANGUAGES, CRUD_Actions } from '../../../utils';\nimport { getDetailInforDoctor } from \"../../../services/userService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  value: 'chocolate',\n  label: 'Chocolate'\n}, {\n  value: 'strawberry',\n  label: 'Strawberry'\n}, {\n  value: 'vanilla',\n  label: 'Vanilla'\n}];\nconst mdParser = new MarkdownIt();\n\nclass ManageDoctor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.buildDataInputSelect = (inputData, type) => {\n      let result = [];\n      let {\n        language\n      } = this.props;\n\n      if (inputData && inputData.length > 0) {\n        if (type === \"USERS\") {\n          inputData.map((item, index) => {\n            let object = {};\n            let labelVi = type === 'USERS' ? `${item.lastName} ${item.firstName}` : item.valueVI;\n            let labelEn = type === 'USERS' ? `${item.firstName} ${item.lastName}` : item.valueEN;\n            object.label = language === LANGUAGES.VI ? labelVi : labelEn;\n            object.value = item.id;\n            result.push(object);\n          });\n        }\n\n        if (type === 'PRICE') {\n          inputData.map((item, index) => {\n            let object = {};\n            let labelVi = `${item.valueVI}`;\n            let labelEn = `${item.valueEN} USD`;\n            object.label = language === LANGUAGES.VI ? labelVi : labelEn;\n            object.value = item.keyMap;\n            result.push(object);\n          });\n        }\n\n        if (type === 'PAYMENT' || type === 'PROVINCE') {\n          inputData.map((item, index) => {\n            let object = {};\n            let labelVi = `${item.valueVI}`;\n            let labelEn = `${item.valueEN}`;\n            object.label = language === LANGUAGES.VI ? labelVi : labelEn;\n            object.value = item.keyMap;\n            result.push(object);\n          });\n        }\n\n        if (type === \"SPECIALTY\") {\n          inputData.map((item, index) => {\n            let object = {};\n            object.label = item.name;\n            object.value = item.id;\n            result.push(object);\n          });\n        }\n\n        if (type === 'CLINIC') {\n          inputData.map((item, index) => {\n            let object = {};\n            object.label = item.name;\n            object.value = item.id;\n            result.push(object);\n          });\n        }\n      }\n\n      return result;\n    };\n\n    this.handleEditorChange = ({\n      html,\n      text\n    }) => {\n      this.setState({\n        contentMarkdown: text,\n        contentHTML: html\n      });\n    };\n\n    this.handleSaveContentMarkdown = () => {\n      let {\n        hasOldData\n      } = this.state;\n      this.props.saveDetailDoctors({\n        doctorId: this.state.selectedOption.value,\n        contentHTML: this.state.contentHTML,\n        contentMarkdown: this.state.contentMarkdown,\n        description: this.state.description,\n        doctorId: this.state.selectedOption.value,\n        action: hasOldData === true ? CRUD_Actions.EDIT : CRUD_Actions.CREATE,\n        selectedPrice: this.state.selectedPrice.value,\n        selectedPayment: this.state.selectedPayment.value,\n        selectedProvince: this.state.selectedProvince.value,\n        nameClinic: this.state.nameClinic,\n        addressClinic: this.state.addressClinic,\n        note: this.state.note,\n        clinicId: this.state.selectedClinic && this.state.selectedClinic.value ? this.state.selectedClinic.value : '',\n        specialtyId: this.state.selectedSpecialty.value\n      });\n    };\n\n    this.handleChangeSelect = async selectedOption => {\n      this.setState({\n        selectedOption\n      });\n      let {\n        listPayment,\n        listPrice,\n        listProvince,\n        listSpecialty,\n        listClinic\n      } = this.state;\n      let res = await getDetailInforDoctor(selectedOption.value);\n\n      if (res && res.errCode === 0 && res.data && res.data.Markdown) {\n        let markdown = res.data.Markdown;\n        let addressClinic = '',\n            nameClinic = '',\n            note = '',\n            paymentId = '',\n            priceId = '',\n            provinceId = '',\n            specialtyId = '',\n            selectedPayment = '',\n            selectedPrice = '',\n            selectedProvince = '',\n            selectedSpecialty = '',\n            clinicId = '',\n            selectedClinic = '';\n\n        if (res.data.Doctor_Infor) {\n          addressClinic = res.data.Doctor_Infor.addressClinic;\n          nameClinic = res.data.Doctor_Infor.nameClinic;\n          note = res.data.Doctor_Infor.note;\n          paymentId = res.data.Doctor_Infor.paymentId;\n          priceId = res.data.Doctor_Infor.priceId;\n          provinceId = res.data.Doctor_Infor.provinceId;\n          specialtyId = res.data.Doctor_Infor.spe;\n          selectedPayment = listPayment.find(item => {\n            return item && item.value === paymentId;\n          });\n          selectedPrice = listPrice.find(item => {\n            return item && item.value === priceId;\n          });\n          selectedProvince = listProvince.find(item => {\n            return item && item.value === provinceId;\n          });\n          selectedSpecialty = listSpecialty.find(item => {\n            return item && item.value === specialtyId;\n          });\n        }\n\n        this.setState({\n          contentHTML: markdown.contentHTML,\n          contentMarkdown: markdown.contentMarkdown,\n          description: markdown.description,\n          hasOldData: true,\n          addressClinic: addressClinic,\n          nameClinic: nameClinic,\n          note: note,\n          selectedPayment: selectedPayment,\n          selectedPrice: selectedPrice,\n          selectedProvince: selectedProvince,\n          selectedSpecialty: selectedSpecialty\n        });\n      } else {\n        this.setState({\n          contentHTML: '',\n          contentMarkdown: '',\n          description: '',\n          hasOldData: false,\n          addressClinic: '',\n          nameClinic: '',\n          note: '',\n          selectedPayment: '',\n          selectedPrice: '',\n          selectedProvince: '',\n          selectedSpecialty: ''\n        });\n      }\n    };\n\n    this.handleChangeSelectDoctorInfor = async (selectedOption, name) => {\n      let stateName = name.name;\n      let stateCopy = { ...this.state\n      };\n      stateCopy[stateName] = selectedOption;\n      this.setState({ ...stateCopy\n      });\n    };\n\n    this.handleOnChangeText = (event, id) => {\n      let stateCopy = { ...this.state\n      };\n      stateCopy[id] = event.target.value;\n      this.setState({ ...stateCopy\n      });\n    };\n\n    this.handleOnChangeDesc = event => {\n      this.setState({\n        description: event.target.value\n      });\n    };\n\n    this.state = {\n      doctorId: '',\n      contentMarkdown: '',\n      contentHTML: '',\n      selectedOption: '',\n      description: '',\n      listDoctors: [],\n      hasOldData: false,\n      listPrice: [],\n      listPayment: [],\n      listProvince: [],\n      listClinic: [],\n      listSpecialty: [],\n      selectedPrice: '',\n      selectedPayment: '',\n      selectedProvince: '',\n      selectedClinic: '',\n      selectedSpecialty: '',\n      nameClinic: '',\n      addressClinic: '',\n      note: '',\n      clinicId: '',\n      specialtyId: ''\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchAllDoctors();\n    this.props.getAllRequiredDoctorInfor();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.allDoctors !== this.props.allDoctors) {\n      let dataSelect = this.buildDataInputSelect(this.props.allDoctors, 'USERS');\n      this.setState({\n        listDoctors: dataSelect\n      });\n    }\n\n    if (prevProps.allRequiredDoctorInfor !== this.props.allRequiredDoctorInfor) {\n      let {\n        resPayment,\n        resPrice,\n        resProvince,\n        resSpecialty,\n        resClinic\n      } = this.props.allRequiredDoctorInfor;\n      let dataSelectPrice = this.buildDataInputSelect(resPrice, 'PRICE');\n      let dataSelectPayment = this.buildDataInputSelect(resPayment, 'PAYMENT');\n      let dataSelectProvince = this.buildDataInputSelect(resProvince, 'PROVINCE');\n      let dataSelectSpecialty = this.buildDataInputSelect(resSpecialty, 'SPECIALTY');\n      let dataSelectClinic = this.buildDataInputSelect(resClinic, 'CLINIC');\n      console.log('data new: ', dataSelectPrice, dataSelectPayment, dataSelectProvince);\n      this.setState({\n        listPrice: dataSelectPrice,\n        listPayment: dataSelectPayment,\n        listProvince: dataSelectProvince,\n        listSpecialty: dataSelectSpecialty,\n        listClinic: dataSelectClinic\n      });\n    }\n\n    if (prevProps.language !== this.props.language) {\n      let dataSelect = this.buildDataInputSelect(this.props.allDoctors, 'USERS');\n      let {\n        resPayment,\n        resPrice,\n        resProvince\n      } = this.props.allRequiredDoctorInfor;\n      let dataSelectPrice = this.buildDataInputSelect(resPrice, 'PRICE');\n      let dataSelectPayment = this.buildDataInputSelect(resPayment, 'PAYMENT');\n      let dataSelectProvince = this.buildDataInputSelect(resProvince, 'PROVINCE');\n      this.setState({\n        listDoctors: dataSelect,\n        listPrice: dataSelectPrice,\n        listPayment: dataSelectPayment,\n        listProvince: dataSelectProvince\n      });\n    }\n  }\n\n  render() {\n    let {\n      hasOldData,\n      listSpecialty\n    } = this.state;\n    console.log('check state: ', this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manage-doctor-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manage-doctor-title\",\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"admin.manage-doctor.title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"more-infor\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-left form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.select-doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: this.state.selectedOption,\n            onChange: this.handleChangeSelect,\n            options: this.state.listDoctors,\n            placeholder: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.select-doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.intro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            rows: \"4\",\n            onChange: event => this.handleOnChangeText(event, 'description'),\n            value: this.state.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"more-infor-extra row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4 form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            options: this.state.listPrice,\n            placeholder: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 46\n            }, this),\n            name: \"selectedPrice\",\n            value: this.state.selectedPrice,\n            onChange: this.handleChangeSelectDoctorInfor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4 form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.payment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            options: this.state.listPayment,\n            placeholder: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.payment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 46\n            }, this),\n            name: \"selectedPayment\",\n            value: this.state.selectedPayment,\n            onChange: this.handleChangeSelectDoctorInfor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4 form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.province\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            options: this.state.listProvince,\n            placeholder: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.province\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 46\n            }, this),\n            value: this.state.selectedProvince,\n            onChange: this.handleChangeSelectDoctorInfor,\n            name: \"selectedProvince\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4 form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.nameClinic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            onChange: event => this.handleOnChangeText(event, 'nameClinic'),\n            value: this.state.nameClinic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4 form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.addressClinic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            onChange: event => this.handleOnChangeText(event, 'addressClinic'),\n            value: this.state.addressClinic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4 form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.note\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            onChange: event => this.handleOnChangeText(event, 'note'),\n            value: this.state.note\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4 form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.specialty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: this.state.selectedSpecialty,\n            options: this.state.listSpecialty,\n            placeholder: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.specialty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 48\n            }, this),\n            onChange: this.handleChangeSelectDoctorInfor,\n            name: \"selectedSpecialty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4 form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.clinic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: this.state.selectedClinic,\n            options: this.state.listClinic,\n            placeholder: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"admin.manage-doctor.clinic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 48\n            }, this),\n            onChange: this.handleChangeSelectDoctorInfor,\n            name: \"selectedClinic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manage-doctor-editor\",\n        children: /*#__PURE__*/_jsxDEV(MdEditor, {\n          style: {\n            height: '300px'\n          },\n          renderHTML: text => mdParser.render(text),\n          onChange: this.handleEditorChange,\n          value: this.state.contentMarkdown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.handleSaveContentMarkdown(),\n        className: hasOldData === true ? \"save-content-doctor\" : \"create-content-doctor\",\n        children: hasOldData === true ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"admin.manage-doctor.save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"admin.manage-doctor.add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language,\n    allDoctors: state.admin.allDoctors,\n    allRequiredDoctorInfor: state.admin.allRequiredDoctorInfor\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAllDoctors: () => dispatch(actions.fetchAllDoctors()),\n    saveDetailDoctors: data => dispatch(actions.saveDetailDoctors(data)),\n    getAllRequiredDoctorInfor: () => dispatch(actions.getRequiredDoctorInfor())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageDoctor);","map":{"version":3,"sources":["/home/asus2/Frontend-React.JS-QuickStart/src/containers/System/Admin/ManageDoctor.js"],"names":["React","Component","FormattedMessage","connect","actions","MarkdownIt","MdEditor","Select","LANGUAGES","CRUD_Actions","getDetailInforDoctor","options","value","label","mdParser","ManageDoctor","constructor","props","buildDataInputSelect","inputData","type","result","language","length","map","item","index","object","labelVi","lastName","firstName","valueVI","labelEn","valueEN","VI","id","push","keyMap","name","handleEditorChange","html","text","setState","contentMarkdown","contentHTML","handleSaveContentMarkdown","hasOldData","state","saveDetailDoctors","doctorId","selectedOption","description","action","EDIT","CREATE","selectedPrice","selectedPayment","selectedProvince","nameClinic","addressClinic","note","clinicId","selectedClinic","specialtyId","selectedSpecialty","handleChangeSelect","listPayment","listPrice","listProvince","listSpecialty","listClinic","res","errCode","data","Markdown","markdown","paymentId","priceId","provinceId","Doctor_Infor","spe","find","handleChangeSelectDoctorInfor","stateName","stateCopy","handleOnChangeText","event","target","handleOnChangeDesc","listDoctors","componentDidMount","fetchAllDoctors","getAllRequiredDoctorInfor","componentDidUpdate","prevProps","prevState","snapshot","allDoctors","dataSelect","allRequiredDoctorInfor","resPayment","resPrice","resProvince","resSpecialty","resClinic","dataSelectPrice","dataSelectPayment","dataSelectProvince","dataSelectSpecialty","dataSelectClinic","console","log","render","height","mapStateToProps","app","admin","mapDispatchToProps","dispatch","getRequiredDoctorInfor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from \"../../../store/actions\";\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\n//import style manually\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\nimport './ManageDoctor.scss';\r\nimport Select from 'react-select';\r\nimport {LANGUAGES, CRUD_Actions} from '../../../utils';\r\nimport {getDetailInforDoctor} from \"../../../services/userService\"\r\n\r\nconst options = [\r\n    {value: 'chocolate', label: 'Chocolate'},\r\n    {value: 'strawberry', label:'Strawberry'},\r\n    {value:'vanilla', label:'Vanilla'},\r\n];\r\nconst mdParser = new MarkdownIt();\r\n\r\nclass ManageDoctor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            doctorId:'',\r\n            contentMarkdown:'',\r\n            contentHTML:'',\r\n            selectedOption:'',\r\n            description:'',\r\n            listDoctors:[],\r\n            hasOldData: false,\r\n\r\n            listPrice:[],\r\n            listPayment: [],\r\n            listProvince: [],\r\n            listClinic: [],\r\n            listSpecialty: [],\r\n\r\n            selectedPrice: '',\r\n            selectedPayment: '',\r\n            selectedProvince: '',\r\n            selectedClinic: '',\r\n            selectedSpecialty: '',\r\n\r\n            nameClinic: '',\r\n            addressClinic: '',\r\n            note: '',\r\n            clinicId: '',\r\n            specialtyId: ''\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchAllDoctors();\r\n        this.props.getAllRequiredDoctorInfor();\r\n    }\r\n\r\n    buildDataInputSelect = (inputData, type) => {\r\n        let result = [];\r\n        let {language} = this.props;\r\n        if(inputData && inputData.length > 0){\r\n            if(type ===\"USERS\"){\r\n                inputData.map((item, index)=>{\r\n                    let object = {};\r\n                    let labelVi = type === 'USERS' ? `${item.lastName} ${item.firstName}` : item.valueVI;\r\n                    let labelEn = type === 'USERS' ? `${item.firstName} ${item.lastName}` : item.valueEN;\r\n                    object.label = language === LANGUAGES.VI ? labelVi : labelEn;\r\n                    object.value = item.id;\r\n                    result.push(object);\r\n                })\r\n            }\r\n            \r\n            if (type === 'PRICE'){\r\n                inputData.map((item, index)=>{\r\n                    let object = {};\r\n                    let labelVi = `${item.valueVI}`;\r\n                    let labelEn = `${item.valueEN} USD`;\r\n                    object.label= language===LANGUAGES.VI ? labelVi: labelEn;\r\n                    object.value= item.keyMap;\r\n                    result.push(object)\r\n                })\r\n            }    \r\n            if(type === 'PAYMENT' || type === 'PROVINCE'){\r\n                inputData.map((item, index)=>{\r\n                    let object = {};\r\n                    let labelVi = `${item.valueVI}`;\r\n                    let labelEn = `${item.valueEN}`;\r\n                    object.label = language === LANGUAGES.VI ? labelVi :  labelEn;\r\n                    object.value = item.keyMap;\r\n                    result.push(object)\r\n                })\r\n            }\r\n\r\n            if(type === \"SPECIALTY\"){\r\n                inputData.map((item, index)=> {\r\n                    let object = {};\r\n                    object.label = item.name;\r\n                    object.value = item.id;\r\n                    result.push(object)\r\n                })\r\n            }\r\n\r\n            if (type === 'CLINIC') {\r\n                inputData.map((item, index) => {\r\n                    let object = {};\r\n                    object.label = item.name;\r\n                    object.value = item.id;\r\n                    result.push(object)\r\n                })\r\n            }\r\n\r\n        }\r\n        return result;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.allDoctors !== this.props.allDoctors){\r\n            let dataSelect = this.buildDataInputSelect(this.props.allDoctors, 'USERS')\r\n            this.setState({\r\n                listDoctors:dataSelect\r\n            })\r\n        }\r\n\r\n        \r\n        if(prevProps.allRequiredDoctorInfor !== this.props.allRequiredDoctorInfor){\r\n            let {resPayment, resPrice, resProvince, resSpecialty, resClinic} = this.props.allRequiredDoctorInfor;\r\n            let dataSelectPrice = this.buildDataInputSelect(resPrice, 'PRICE');\r\n            let dataSelectPayment= this.buildDataInputSelect(resPayment,'PAYMENT');\r\n            let dataSelectProvince = this.buildDataInputSelect(resProvince, 'PROVINCE');\r\n            let dataSelectSpecialty = this.buildDataInputSelect(resSpecialty, 'SPECIALTY');\r\n            let dataSelectClinic = this.buildDataInputSelect(resClinic, 'CLINIC');\r\n            console.log('data new: ', dataSelectPrice, dataSelectPayment, dataSelectProvince);\r\n\r\n            this.setState({\r\n                listPrice: dataSelectPrice,\r\n                listPayment: dataSelectPayment,\r\n                listProvince: dataSelectProvince,\r\n                listSpecialty: dataSelectSpecialty,\r\n                listClinic: dataSelectClinic\r\n            })\r\n        }\r\n\r\n        if (prevProps.language !== this.props.language){\r\n            let dataSelect = this.buildDataInputSelect(this.props.allDoctors, 'USERS');\r\n            let {resPayment, resPrice, resProvince} = this.props.allRequiredDoctorInfor;\r\n            let dataSelectPrice = this.buildDataInputSelect(resPrice, 'PRICE');\r\n            let dataSelectPayment= this.buildDataInputSelect(resPayment,'PAYMENT');\r\n            let dataSelectProvince = this.buildDataInputSelect(resProvince, 'PROVINCE');\r\n            this.setState({\r\n                listDoctors: dataSelect,\r\n                listPrice: dataSelectPrice,\r\n                listPayment: dataSelectPayment,\r\n                listProvince: dataSelectProvince,\r\n            })\r\n        }\r\n    }\r\n    handleEditorChange = ({html, text}) => {\r\n        this.setState({\r\n            contentMarkdown: text,\r\n            contentHTML: html,\r\n        })\r\n    }\r\n    handleSaveContentMarkdown = () => {\r\n        let {hasOldData} = this.state;\r\n        this.props.saveDetailDoctors({\r\n            doctorId: this.state.selectedOption.value,\r\n            contentHTML: this.state.contentHTML,\r\n            contentMarkdown: this.state.contentMarkdown,\r\n            description:this.state.description,\r\n            doctorId: this.state.selectedOption.value,\r\n            action: hasOldData === true ? CRUD_Actions.EDIT : CRUD_Actions.CREATE,\r\n\r\n            selectedPrice: this.state.selectedPrice.value,\r\n            selectedPayment: this.state.selectedPayment.value,\r\n            selectedProvince: this.state.selectedProvince.value,\r\n            nameClinic: this.state.nameClinic,\r\n            addressClinic: this.state.addressClinic,\r\n            note: this.state.note,\r\n            clinicId: this.state.selectedClinic && this.state.selectedClinic.value ? this.state.selectedClinic.value : '',\r\n            specialtyId: this.state.selectedSpecialty.value ,\r\n            \r\n        });\r\n    }\r\n    handleChangeSelect = async (selectedOption) => {\r\n        this.setState({selectedOption});\r\n        let {listPayment, listPrice, listProvince, listSpecialty, listClinic}= this.state;\r\n        let res = await getDetailInforDoctor(selectedOption.value);\r\n        if (res && res.errCode === 0 && res.data && res.data.Markdown) {\r\n            let markdown = res.data.Markdown;\r\n            let addressClinic = '', nameClinic = '', note = '',\r\n            paymentId = '', priceId ='', provinceId = '', specialtyId ='',\r\n            selectedPayment = '', selectedPrice = '', selectedProvince = '', selectedSpecialty='', clinicId = '', selectedClinic='';\r\n\r\n            if (res.data.Doctor_Infor) {\r\n                addressClinic = res.data.Doctor_Infor.addressClinic;\r\n                nameClinic = res.data.Doctor_Infor.nameClinic;\r\n                note = res.data.Doctor_Infor.note;\r\n                paymentId = res.data.Doctor_Infor.paymentId;\r\n                priceId = res.data.Doctor_Infor.priceId;\r\n                provinceId = res.data.Doctor_Infor.provinceId;\r\n                specialtyId = res.data.Doctor_Infor.spe\r\n                selectedPayment = listPayment.find(item => {\r\n                    return item && item.value === paymentId\r\n                })\r\n                selectedPrice = listPrice.find(item => {\r\n                    return item && item.value === priceId\r\n                })\r\n                selectedProvince = listProvince.find(item => {\r\n                    return item && item.value === provinceId\r\n                })\r\n                selectedSpecialty = listSpecialty.find(item => {\r\n                    return item && item.value === specialtyId\r\n                })\r\n            }\r\n            this.setState({\r\n                contentHTML: markdown.contentHTML,\r\n                contentMarkdown: markdown.contentMarkdown,\r\n                description: markdown.description,\r\n                hasOldData: true,\r\n                addressClinic: addressClinic,\r\n                nameClinic: nameClinic,\r\n                note: note,\r\n                selectedPayment: selectedPayment,\r\n                selectedPrice: selectedPrice,\r\n                selectedProvince: selectedProvince,\r\n                selectedSpecialty: selectedSpecialty\r\n            })\r\n        } else {\r\n            this.setState({\r\n                contentHTML: '',\r\n                contentMarkdown:'',\r\n                description: '',\r\n                hasOldData:false,\r\n                addressClinic: '',\r\n                nameClinic: '',\r\n                note: '',\r\n                selectedPayment: '',\r\n                selectedPrice: '',\r\n                selectedProvince: '',\r\n                selectedSpecialty : ''\r\n            })\r\n        }\r\n    };\r\n    handleChangeSelectDoctorInfor = async(selectedOption, name) => {\r\n        let stateName = name.name;\r\n        let stateCopy = {...this.state};\r\n        stateCopy[stateName] = selectedOption;\r\n        this.setState({\r\n            ...stateCopy\r\n        })\r\n    }\r\n\r\n    handleOnChangeText = (event, id)=> {\r\n        let stateCopy = {...this.state};\r\n        stateCopy[id] = event.target.value;\r\n        this.setState({\r\n            ...stateCopy\r\n        })\r\n    }\r\n\r\n    handleOnChangeDesc = (event) => {\r\n        this.setState({description: event.target.value})\r\n    }\r\n    \r\n    render(){\r\n        let {hasOldData, listSpecialty} = this.state;\r\n        console.log('check state: ', this.state)\r\n        return(\r\n            \r\n                <div className=\"manage-doctor-container\">\r\n                    <div className=\"manage-doctor-title\">\r\n                        <FormattedMessage id=\"admin.manage-doctor.title\"/>\r\n                    </div>\r\n                    <div className=\"more-infor\">\r\n                        <div className=\"content-left form-group\">\r\n                            <label>< FormattedMessage id=\"admin.manage-doctor.select-doctor\"/></label>\r\n                            <Select\r\n                                value={this.state.selectedOption}\r\n                                onChange = {this.handleChangeSelect}\r\n                                options ={this.state.listDoctors}\r\n                                placeholder={<FormattedMessage id=\"admin.manage-doctor.select-doctor\"/>}\r\n                            />\r\n                        </div>\r\n                        <div className=\"content-right\">\r\n                            <label><FormattedMessage id=\"admin.manage-doctor.intro\"/></label>\r\n                            <textarea className=\"form-control\" rows=\"4\"\r\n                                onChange = {(event) =>this.handleOnChangeText(event, 'description')}\r\n                                value = {this.state.description}\r\n                                >\r\n                                </textarea>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"more-infor-extra row\">\r\n                        <div className=\"col-4 form-group\">\r\n                            <label><FormattedMessage id=\"admin.manage-doctor.price\"/></label>\r\n                            <Select\r\n                                options={this.state.listPrice}\r\n                                placeholder={<FormattedMessage id=\"admin.manage-doctor.price\"/>}\r\n                                name = \"selectedPrice\"\r\n                                value={this.state.selectedPrice}\r\n                                onChange={this.handleChangeSelectDoctorInfor}\r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"col-4 form-group\">\r\n                            <label><FormattedMessage id=\"admin.manage-doctor.payment\"/></label>\r\n                            <Select\r\n                                options={this.state.listPayment}\r\n                                placeholder={<FormattedMessage id=\"admin.manage-doctor.payment\"/>}\r\n                                name = \"selectedPayment\"\r\n                                value={this.state.selectedPayment}\r\n                                onChange={this.handleChangeSelectDoctorInfor}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-4 form-group\">\r\n                            <label><FormattedMessage id=\"admin.manage-doctor.province\"/></label>\r\n                            <Select\r\n                                options={this.state.listProvince}\r\n                                placeholder={<FormattedMessage id=\"admin.manage-doctor.province\"/>}\r\n                                value = {this.state.selectedProvince}\r\n                                onChange = {this.handleChangeSelectDoctorInfor}\r\n                                name = \"selectedProvince\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-4 form-group\">\r\n                            <label><FormattedMessage id=\"admin.manage-doctor.nameClinic\"/></label>\r\n                            <input className=\"form-control\"\r\n                                onChange={(event) => this.handleOnChangeText(event, 'nameClinic')}\r\n                                value={this.state.nameClinic}\r\n                            ></input>\r\n                        </div>\r\n                        <div className=\"col-4 form-group\">\r\n                            <label><FormattedMessage id=\"admin.manage-doctor.addressClinic\"/></label>\r\n                            <input className=\"form-control\"\r\n                                onChange={(event) => this.handleOnChangeText(event, 'addressClinic')}\r\n                                value={this.state.addressClinic}\r\n                            ></input>\r\n                        </div>\r\n                        <div className=\"col-4 form-group\">\r\n                            <label><FormattedMessage id=\"admin.manage-doctor.note\"/></label>\r\n                            <input className=\"form-control\"\r\n                                onChange={(event) => this.handleOnChangeText(event, 'note')}\r\n                                value={this.state.note}\r\n                            ></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-4 form-group'>\r\n                            <label><FormattedMessage id=\"admin.manage-doctor.specialty\"/></label>\r\n                            <Select\r\n                                value = {this.state.selectedSpecialty}\r\n                                options = {this.state.listSpecialty}\r\n                                placeholder = {<FormattedMessage  id =\"admin.manage-doctor.specialty\"/>}\r\n                                onChange = {this.handleChangeSelectDoctorInfor}\r\n                                name=\"selectedSpecialty\"\r\n                            />\r\n                        </div>\r\n                        <div className='col-4 form-group'>\r\n                            <label><FormattedMessage id=\"admin.manage-doctor.clinic\"/></label>\r\n                            <Select\r\n                                value = {this.state.selectedClinic}\r\n                                options = {this.state.listClinic}\r\n                                placeholder = {<FormattedMessage  id =\"admin.manage-doctor.clinic\"/>}\r\n                                onChange = {this.handleChangeSelectDoctorInfor}\r\n                                name=\"selectedClinic\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"manage-doctor-editor\">\r\n                        <MdEditor\r\n                            style={{height: '300px'}}\r\n                            renderHTML = {text => mdParser.render(text)}\r\n                            onChange = {this.handleEditorChange}\r\n                            value = {this.state.contentMarkdown}\r\n                        />\r\n                    </div>\r\n                    <button\r\n                    onClick = {() => this.handleSaveContentMarkdown()}\r\n                    className= {hasOldData === true ? \"save-content-doctor\": \"create-content-doctor\"}\r\n                    >{hasOldData === true ? \r\n                    <span><FormattedMessage id=\"admin.manage-doctor.save\"/></span> \r\n                    : \r\n                    <span><FormattedMessage id=\"admin.manage-doctor.add\"/></span>\r\n                    }\r\n                    </button>\r\n                </div>\r\n\r\n            \r\n        )\r\n    }\r\n}const mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n        allDoctors: state.admin.allDoctors,\r\n        allRequiredDoctorInfor: state.admin.allRequiredDoctorInfor,\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchAllDoctors: () => dispatch(actions.fetchAllDoctors()),\r\n        saveDetailDoctors: (data) => dispatch(actions.saveDetailDoctors(data)),\r\n        getAllRequiredDoctorInfor: () => dispatch(actions.getRequiredDoctorInfor()),\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageDoctor);"]},"metadata":{},"sourceType":"module"}