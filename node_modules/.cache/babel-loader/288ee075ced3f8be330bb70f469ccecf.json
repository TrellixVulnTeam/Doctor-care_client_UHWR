{"ast":null,"code":"var _jsxFileName = \"/home/asus2/Frontend-React.JS-QuickStart/src/containers/HomePage/section/OutStandingDoctor.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\nimport Slider from 'react-slick';\nimport * as actions from '../../../store/actions';\nimport { LANGUAGES } from '../../../utils';\nimport { withRouter } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass OutStandingDoctor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleViewDetailDoctor = doctor => {\n      console.log('handleviewdoctor', doctor);\n\n      if (this.props.history) {\n        console.log('handleviewdoctor', this.props.history);\n        this.props.history.push(`/detail-doctor/${doctor.id}`);\n      }\n    };\n\n    this.state = {\n      arrDoctors: []\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.topDoctorsRedux !== this.props.topDoctorsRedux) {\n      this.setState({\n        arrDoctors: this.props.topDoctorsRedux\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.props.loadTopDoctors();\n  }\n\n  render() {\n    let arrDoctors = this.state.arrDoctors;\n    let {\n      language\n    } = this.props; // arrDoctors = arrDoctors.concat(arrDoctors).concat(arrDoctors)\n\n    console.log('acira test:', arrDoctors);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-share section-outstanding-doctor\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"title-section\",\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"homepage.outstanding-doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-section\",\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"homepage.more-info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-body\",\n          children: /*#__PURE__*/_jsxDEV(Slider, { ...this.props.settings,\n            children: arrDoctors && arrDoctors.length > 0 && arrDoctors.map((item, index) => {\n              let imageBase64 = '';\n\n              if (item.image) {\n                imageBase64 = new Buffer(item.image, 'base64').toString('binary');\n              }\n\n              let nameVi = `${item.positionData.valueVi}, ${item.lastName} ${item.firstName}`;\n              let nameEn = `${item.positionData.valueEn}, ${item.firstName} ${item.lastName}`;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"settion-customize\",\n                onClick: () => this.handleViewDetailDoctor(item),\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"section-customize\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"customize-border\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"outer-bg\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"bg-image section-outstanding-doctor\",\n                        style: {\n                          backgroundImage: `url(${imageBase64})`\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 63,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"position text-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        children: language === LANGUAGES.VI ? nameVi : nameEn\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 67,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: \"C\\u01A1 X\\u01B0\\u01A1ng Kh\\u1EDBp1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 68,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 66,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 41\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 37\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.user.isLoggedIn,\n    language: state.app.language,\n    topDoctorsRedux: state.admin.topDoctors\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadTopDoctors: () => dispatch(actions.fetchTopDoctor())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(OutStandingDoctor));","map":{"version":3,"sources":["/home/asus2/Frontend-React.JS-QuickStart/src/containers/HomePage/section/OutStandingDoctor.js"],"names":["React","Component","connect","FormattedMessage","Slider","actions","LANGUAGES","withRouter","OutStandingDoctor","constructor","props","handleViewDetailDoctor","doctor","console","log","history","push","id","state","arrDoctors","componentDidUpdate","prevProps","prevState","snapshot","topDoctorsRedux","setState","componentDidMount","loadTopDoctors","render","language","settings","length","map","item","index","imageBase64","image","Buffer","toString","nameVi","positionData","valueVi","lastName","firstName","nameEn","valueEn","backgroundImage","VI","mapStateToProps","isLoggedIn","user","app","admin","topDoctors","mapDispatchToProps","dispatch","fetchTopDoctor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport Slider from 'react-slick';\r\nimport * as actions from '../../../store/actions';\r\nimport {LANGUAGES} from '../../../utils';\r\nimport {withRouter} from 'react-router';\r\n\r\nclass OutStandingDoctor extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            arrDoctors: []\r\n        }\r\n    }\r\n    \r\n    componentDidUpdate(prevProps, prevState,snapshot){\r\n        if(prevProps.topDoctorsRedux !== this.props.topDoctorsRedux){\r\n            this.setState({\r\n                arrDoctors: this.props.topDoctorsRedux\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadTopDoctors();\r\n    }\r\n\r\n    handleViewDetailDoctor = (doctor) => {\r\n        console.log('handleviewdoctor', doctor);\r\n        if(this.props.history){\r\n            console.log('handleviewdoctor', this.props.history);\r\n            this.props.history.push(`/detail-doctor/${doctor.id}`)\r\n        }\r\n        \r\n    }\r\n    render() {\r\n        let arrDoctors = this.state.arrDoctors;\r\n        let{language} = this.props;\r\n        // arrDoctors = arrDoctors.concat(arrDoctors).concat(arrDoctors)\r\n        console.log('acira test:', arrDoctors)\r\n        return (\r\n            <div className=\"section-share section-outstanding-doctor\">\r\n                <div className=\"section-container\">\r\n                    <div className=\"section-header\">\r\n                        <span className=\"title-section\"><FormattedMessage id =\"homepage.outstanding-doctor\"/></span>\r\n                        <button className=\"btn-section\"><FormattedMessage id =\"homepage.more-info\"/></button>\r\n                    </div>\r\n                    <div className=\"section-body\">\r\n                        <Slider {...this.props.settings}>\r\n                            {arrDoctors && arrDoctors.length >0 && arrDoctors.map((item, index) => {\r\n                                let imageBase64 = '';\r\n                                if(item.image){\r\n                                    imageBase64 = new Buffer(item.image, 'base64').toString('binary');\r\n                                }\r\n                                let nameVi = `${item.positionData.valueVi}, ${item.lastName} ${item.firstName}`;\r\n                                let nameEn = `${item.positionData.valueEn}, ${item.firstName} ${item.lastName}`;\r\n                                return (\r\n                                    <div className=\"settion-customize\" key={index} onClick={() => this.handleViewDetailDoctor(item)}>\r\n                                    <div className=\"section-customize\" key={index}>\r\n                                        <div className=\"customize-border\">\r\n                                            <div className=\"outer-bg\">\r\n                                                <div className=\"bg-image section-outstanding-doctor\"\r\n                                                style={{backgroundImage: `url(${imageBase64})`}}/>\r\n                                            </div>\r\n                                            <div className=\"position text-center\">\r\n                                                <div>{language=== LANGUAGES.VI ? nameVi : nameEn}</div>\r\n                                                <div>Cơ Xương Khớp1</div>\r\n                                            </div>\r\n                                        </div>                                      \r\n                                    </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                            \r\n                        </Slider>\r\n                    </div>\r\n                    \r\n                </div> \r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        language: state.app.language,\r\n        topDoctorsRedux: state.admin.topDoctors\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        loadTopDoctors: () => dispatch(actions.fetchTopDoctor())\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(OutStandingDoctor));"]},"metadata":{},"sourceType":"module"}