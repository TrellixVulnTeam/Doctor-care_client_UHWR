{"ast":null,"code":"var _jsxFileName = \"/home/asus2/Frontend-React.JS-QuickStart/src/containers/Patient/Doctor/DetailDoctor.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport HeaderHome from '../../HomePage/HeaderHome';\nimport './DetailDoctor.scss';\nimport { getDetailInforDoctor } from '../../../services/userService';\nimport { LANGUAGES } from '../../../utils';\nimport DoctorSchedule from './DoctorSchedule';\nimport DoctorExtraInfor from './DoctorExtraInfor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass DetailDoctor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      detailDoctor: {},\n      currentDoctorId: -1\n    };\n  }\n\n  async componentDidMount() {\n    if (this.props.match && this.props.match.params && this.props.match.params.id) {\n      let id = this.props.match.params.id;\n      this.setState({\n        currentDoctorId: id\n      });\n      let res = await getDetailInforDoctor(id);\n\n      if (res && res.errCode === 0) {\n        this.setState({\n          detailDoctor: res.data\n        });\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {}\n\n  render() {\n    console.log('test infordoctor:', this.state);\n    let {\n      language\n    } = this.props;\n    let {\n      detailDoctor\n    } = this.state;\n    let nameVi = '',\n        nameEn = '';\n\n    if (detailDoctor && detailDoctor.positionData) {\n      nameVi = `${detailDoctor.positionData.valueVi}, ${detailDoctor.lastName} ${detailDoctor.firstName}`;\n      nameEn = `${detailDoctor.positionData.valueEn}, ${detailDoctor.firstName} ${detailDoctor.lastName}`;\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HeaderHome, {\n        children: [\"isShowBanner = \", false]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doctor-detail-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"intro-doctor\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-left\",\n            style: {\n              backgroundImage: `url(${detailDoctor && detailDoctor.image ? detailDoctor.image : ''})`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"up\",\n              children: language === LANGUAGES.VI ? nameVi : nameEn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"down\",\n              children: detailDoctor && detailDoctor.Markdown && detailDoctor.Markdown.description && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: detailDoctor.Markdown.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"schedule-doctor\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-left\",\n            children: /*#__PURE__*/_jsxDEV(DoctorSchedule, {\n              doctorIdFromParent: this.state.currentDoctorId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-right\",\n            children: /*#__PURE__*/_jsxDEV(DoctorExtraInfor, {\n              doctorIdFromParent: this.state.currentDoctorId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-infor-doctor\",\n          children: detailDoctor && detailDoctor.Markdown && detailDoctor.Markdown.contentHTML && /*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: detailDoctor.Markdown.contentHTML\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-doctor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailDoctor);","map":{"version":3,"sources":["/home/asus2/Frontend-React.JS-QuickStart/src/containers/Patient/Doctor/DetailDoctor.js"],"names":["React","Component","connect","HeaderHome","getDetailInforDoctor","LANGUAGES","DoctorSchedule","DoctorExtraInfor","DetailDoctor","constructor","props","state","detailDoctor","currentDoctorId","componentDidMount","match","params","id","setState","res","errCode","data","componentDidUpdate","prevProps","prevState","snapshot","render","console","log","language","nameVi","nameEn","positionData","valueVi","lastName","firstName","valueEn","backgroundImage","image","VI","Markdown","description","contentHTML","__html","mapStateToProps","app","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAsB,2BAAtB;AACA,OAAO,qBAAP;AACA,SAAQC,oBAAR,QAAmC,+BAAnC;AACA,SAAQC,SAAR,QAAwB,gBAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;;AAEA,MAAMC,YAAN,SAA2BP,SAA3B,CAAqC;AACjCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,EADL;AAETC,MAAAA,eAAe,EAAE,CAAC;AAFT,KAAb;AAIH;;AAEsB,QAAjBC,iBAAiB,GAAG;AACtB,QAAI,KAAKJ,KAAL,CAAWK,KAAX,IAAoB,KAAKL,KAAL,CAAWK,KAAX,CAAiBC,MAArC,IAA+C,KAAKN,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBC,EAA3E,EAA8E;AAC1E,UAAIA,EAAE,GAAG,KAAKP,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBC,EAAjC;AACA,WAAKC,QAAL,CAAc;AACVL,QAAAA,eAAe,EAAEI;AADP,OAAd;AAGA,UAAIE,GAAG,GAAG,MAAMf,oBAAoB,CAACa,EAAD,CAApC;;AACA,UAAKE,GAAG,IAAIA,GAAG,CAACC,OAAJ,KAAgB,CAA5B,EAA+B;AAC3B,aAAKF,QAAL,CAAc;AACVN,UAAAA,YAAY,EAAEO,GAAG,CAACE;AADR,SAAd;AAGH;AACJ;AACJ;;AACDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC,CAElD;;AAGDC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,KAAKjB,KAAtC;AACA,QAAI;AAACkB,MAAAA;AAAD,QAAa,KAAKnB,KAAtB;AACA,QAAI;AAACE,MAAAA;AAAD,QAAiB,KAAKD,KAA1B;AAEA,QAAImB,MAAM,GAAG,EAAb;AAAA,QAAiBC,MAAM,GAAG,EAA1B;;AACA,QAAInB,YAAY,IAAIA,YAAY,CAACoB,YAAjC,EAA8C;AAC1CF,MAAAA,MAAM,GAAI,GAAElB,YAAY,CAACoB,YAAb,CAA0BC,OAAQ,KAAIrB,YAAY,CAACsB,QAAS,IAAGtB,YAAY,CAACuB,SAAU,EAAlG;AACAJ,MAAAA,MAAM,GAAI,GAAEnB,YAAY,CAACoB,YAAb,CAA0BI,OAAQ,KAAIxB,YAAY,CAACuB,SAAU,IAAGvB,YAAY,CAACsB,QAAS,EAAlG;AACH;;AACD,wBACI;AAAA,8BACI,QAAC,UAAD;AAAA,sCACoB,KADpB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,cAAf;AACA,YAAA,KAAK,EAAE;AAACG,cAAAA,eAAe,EAAG,OAAMzB,YAAY,IAAIA,YAAY,CAAC0B,KAA7B,GAAqC1B,YAAY,CAAC0B,KAAlD,GAA0D,EAAG;AAAtF;AADP;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,IAAf;AAAA,wBACKT,QAAQ,KAAKxB,SAAS,CAACkC,EAAvB,GAA4BT,MAA5B,GAAqCC;AAD1C;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,wBACKnB,YAAY,IAAIA,YAAY,CAAC4B,QAA7B,IAAyC5B,YAAY,CAAC4B,QAAb,CAAsBC,WAA/D,iBAED;AAAA,0BACK7B,YAAY,CAAC4B,QAAb,CAAsBC;AAD3B;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAmBI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,mCACI,QAAC,cAAD;AACI,cAAA,kBAAkB,EAAE,KAAK9B,KAAL,CAAWE;AADnC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,mCACI,QAAC,gBAAD;AAAkB,cAAA,kBAAkB,EAAI,KAAKF,KAAL,CAAWE;AAAnD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBJ,eA6BI;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,oBACKD,YAAY,IAAIA,YAAY,CAAC4B,QAA7B,IAAyC5B,YAAY,CAAC4B,QAAb,CAAsBE,WAA/D,iBAED;AAAK,YAAA,uBAAuB,EAAG;AAACC,cAAAA,MAAM,EAAE/B,YAAY,CAAC4B,QAAb,CAAsBE;AAA/B;AAA/B;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,gBA7BJ,eAqCI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBArCJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA,oBADJ;AAgDH;;AAtFgC;;AAyFrC,MAAME,eAAe,GAAGjC,KAAK,IAAI;AAC7B,SAAO;AACHkB,IAAAA,QAAQ,EAAElB,KAAK,CAACkC,GAAN,CAAUhB;AADjB,GAAP;AAGH,CAJD;;AAMA,MAAMiB,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO,EAAP;AAEH,CAHD;;AAKA,eAAe7C,OAAO,CAAC0C,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CtC,YAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport HeaderHome from'../../HomePage/HeaderHome';\r\nimport './DetailDoctor.scss';\r\nimport {getDetailInforDoctor} from '../../../services/userService';\r\nimport {LANGUAGES} from '../../../utils';\r\nimport DoctorSchedule from './DoctorSchedule';\r\nimport DoctorExtraInfor from './DoctorExtraInfor';\r\n\r\nclass DetailDoctor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            detailDoctor: {},\r\n            currentDoctorId: -1,\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.props.match && this.props.match.params && this.props.match.params.id){\r\n            let id = this.props.match.params.id;\r\n            this.setState({\r\n                currentDoctorId: id\r\n            })\r\n            let res = await getDetailInforDoctor(id);\r\n            if  (res && res.errCode === 0) {\r\n                this.setState({\r\n                    detailDoctor: res.data\r\n                })\r\n            }\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log('test infordoctor:', this.state);\r\n        let {language} = this.props;\r\n        let {detailDoctor} = this.state;\r\n\r\n        let nameVi = '', nameEn = '';\r\n        if (detailDoctor && detailDoctor.positionData){\r\n            nameVi = `${detailDoctor.positionData.valueVi}, ${detailDoctor.lastName} ${detailDoctor.firstName}`;\r\n            nameEn = `${detailDoctor.positionData.valueEn}, ${detailDoctor.firstName} ${detailDoctor.lastName}`;\r\n        }\r\n        return (\r\n            <>\r\n                <HeaderHome>\r\n                    isShowBanner = {false}\r\n                </HeaderHome>\r\n                <div className=\"doctor-detail-container\">\r\n                    <div className=\"intro-doctor\">\r\n                        <div className=\"content-left\"\r\n                        style={{backgroundImage: `url(${detailDoctor && detailDoctor.image ? detailDoctor.image : ''})`}}>\r\n\r\n                        </div>\r\n                        <div className=\"content-right\">\r\n                            <div className=\"up\">\r\n                                {language === LANGUAGES.VI ? nameVi : nameEn}\r\n                            </div>\r\n                            <div className=\"down\">\r\n                                {detailDoctor && detailDoctor.Markdown && detailDoctor.Markdown.description\r\n                                &&\r\n                                <span>\r\n                                    {detailDoctor.Markdown.description}\r\n                                </span>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"schedule-doctor\">\r\n                        <div className=\"content-left\">\r\n                            <DoctorSchedule\r\n                                doctorIdFromParent={this.state.currentDoctorId}\r\n                            />    \r\n                        </div>\r\n                        <div className=\"content-right\">\r\n                            <DoctorExtraInfor doctorIdFromParent = {this.state.currentDoctorId}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"detail-infor-doctor\">\r\n                        {detailDoctor && detailDoctor.Markdown && detailDoctor.Markdown.contentHTML\r\n                        &&\r\n                        <div dangerouslySetInnerHTML= {{__html: detailDoctor.Markdown.contentHTML}}>\r\n\r\n                        </div>\r\n                    }\r\n                    </div>\r\n                    <div className=\"comment-doctor\">\r\n\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailDoctor);\r\n"]},"metadata":{},"sourceType":"module"}