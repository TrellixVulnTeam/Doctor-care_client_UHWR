{"ast":null,"code":"var _jsxFileName = \"/home/asus2/Frontend-React.JS-QuickStart/src/containers/System/Doctor/RemedyModal.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\nimport './RemedyModal.scss';\nimport { Modal, Button, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { toast } from \"react-toastify\";\nimport moment from \"moment\";\nimport { CommonUtils } from \"../../../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BookingModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSemdRemedy = () => {\n      this.props.sendRemedy(this.state);\n    };\n\n    this.buildDataGender = data => {\n      let result = [];\n      let language = this.props.language;\n\n      if (data && data.length > 0) {\n        data.map(item => {\n          let object = {};\n          object.label = language === LANGUAGES.VI ? item.valueVI : item.valueEN;\n          object.value = item.keyMap;\n          result.push(object);\n        });\n      }\n\n      return result;\n    };\n\n    this.buildTimeBooking = dataTime => {\n      let {\n        language\n      } = this.props;\n\n      if (dataTime && !_.isEmpty(dataTime)) {\n        let time = language === LANGUAGES.VI ? dataTime.timeTypeData.valueVi : dataTime.timeTypeData.valueEn;\n        let date = language === LANGUAGES.VI ? moment.unix(+dataTime.date / 1000).format('dddd- DD/MM/YYYY') : moment.unix(+dataTime / 1000).locale('en').format('ddd - MM/DD/YYYY');\n        return `${time} - ${date}`;\n      }\n\n      return '';\n    };\n\n    this.buildDoctorName = dataTime => {\n      let {\n        language\n      } = this.props;\n\n      if (dataTime && !_.isEmpty(dataTime)) {\n        let name = language === LANGUAGES.VI ? `${dataTime.doctorData.lastName} ${dataTime.doctorData.firstName}` : `${dataTime.doctorData.firstName} ${dataTime.doctorData.lastName}`;\n        return name;\n      }\n\n      return '';\n    };\n\n    this.handleOnchangeInput = (event, id) => {\n      let valueInput = event.target.value;\n      let stateCopy = { ...this.state\n      };\n      stateCopy[id] = valueInput;\n      this.setState({ ...stateCopy\n      });\n    };\n\n    this.handleOnchangeEmail = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.handleChangeSelect = selectedOption => {\n      this.setState({\n        selectedGender: selectedOption\n      });\n    };\n\n    this.handleOnchangeImage = async event => {\n      let data = event.target.files;\n      let file = data[0];\n\n      if (file) {\n        let base64 = await CommonUtils.getBase64(file);\n        this.setState({\n          imgBase64: base64\n        });\n      }\n    };\n\n    this.handleSendRemedy = () => {\n      this.props.sendRemedy(this.state);\n    };\n\n    this.state = {\n      ElementInternals: '',\n      imgBase64: ''\n    };\n  }\n\n  async componentDidMount() {\n    if (this.props.dataModal) {\n      this.setState({\n        email: this.props.dataModal.email\n      });\n    }\n  }\n\n  async componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.dataModal !== prevProps.dataModal) {\n      this.setState({\n        email: this.props.dataModal.email\n      });\n    }\n  }\n\n  render() {\n    //toggle={}\n    let {\n      isOpenModal,\n      closeBookingClose,\n      dataModal,\n      sendRemedy\n    } = this.props;\n    let doctorId = '';\n\n    if (dataTime && !_.isEmpty(dataTime)) {\n      doctorId = dataTime.doctorId;\n    }\n\n    console.log('check datatime:', this.state);\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpenModal,\n      className: 'booking-modal-container',\n      size: \"md\",\n      centered: true //backdrop={true}\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"modal-title\",\n          children: \"Gui hoa don kham benh thanh cong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"close\",\n          \"aria-lable\": \"close\",\n          onClick: closeRemedyModal,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-hidden\": \"true\",\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6 form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email benh nhan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"email\",\n              value: this.state.enail,\n              onChange: event => this.handleOnchangeEmail(event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6 form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Chon file don thuoc\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control-file\",\n              type: \"file\",\n              onChange: event => this.handleOnchangeImage(event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: sendRemedy,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), '', /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          onClick: closeRemedyModal,\n          children: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getGenders: () => dispatch(actions.fetchGenderStart())\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language,\n    genders: state.admin.genders\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookingModal);","map":{"version":3,"sources":["/home/asus2/Frontend-React.JS-QuickStart/src/containers/System/Doctor/RemedyModal.js"],"names":["React","Component","connect","FormattedMessage","Modal","Button","ModalHeader","ModalBody","ModalFooter","toast","moment","CommonUtils","BookingModal","constructor","props","handleSemdRemedy","sendRemedy","state","buildDataGender","data","result","language","length","map","item","object","label","LANGUAGES","VI","valueVI","valueEN","value","keyMap","push","buildTimeBooking","dataTime","_","isEmpty","time","timeTypeData","valueVi","valueEn","date","unix","format","locale","buildDoctorName","name","doctorData","lastName","firstName","handleOnchangeInput","event","id","valueInput","target","stateCopy","setState","handleOnchangeEmail","email","handleChangeSelect","selectedOption","selectedGender","handleOnchangeImage","files","file","base64","getBase64","imgBase64","handleSendRemedy","ElementInternals","componentDidMount","dataModal","componentDidUpdate","prevProps","prevState","snapshot","render","isOpenModal","closeBookingClose","doctorId","console","log","closeRemedyModal","enail","mapDispatchToProps","dispatch","getGenders","actions","fetchGenderStart","mapStateToProps","app","genders","admin"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAO,oBAAP;AACA,SAAQC,KAAR,EAAeC,MAAf,EAAuBC,WAAvB,EAAoCC,SAApC,EAA+CC,WAA/C,QAAiE,YAAjE;AACA,SAAQC,KAAR,QAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAAQC,WAAR,QAA0B,gBAA1B;;;AAEA,MAAMC,YAAN,SAA2BX,SAA3B,CAAqC;AACjCY,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAQlBC,gBARkB,GAQC,MAAK;AACpB,WAAKD,KAAL,CAAWE,UAAX,CAAsB,KAAKC,KAA3B;AACH,KAViB;;AAAA,SAmBlBC,eAnBkB,GAmBCC,IAAD,IAAU;AACxB,UAAIC,MAAM,GAAG,EAAb;AACA,UAAIC,QAAQ,GAAG,KAAKP,KAAL,CAAWO,QAA1B;;AACA,UAAGF,IAAI,IAAIA,IAAI,CAACG,MAAL,GAAc,CAAzB,EAA2B;AACvBH,QAAAA,IAAI,CAACI,GAAL,CAASC,IAAI,IAAI;AACb,cAAIC,MAAM,GAAG,EAAb;AACAA,UAAAA,MAAM,CAACC,KAAP,GAAeL,QAAQ,KAAKM,SAAS,CAACC,EAAvB,GAA4BJ,IAAI,CAACK,OAAjC,GAA2CL,IAAI,CAACM,OAA/D;AACAL,UAAAA,MAAM,CAACM,KAAP,GAAeP,IAAI,CAACQ,MAApB;AACAZ,UAAAA,MAAM,CAACa,IAAP,CAAYR,MAAZ;AACH,SALD;AAMH;;AACD,aAAOL,MAAP;AACH,KA/BiB;;AAAA,SAiClBc,gBAjCkB,GAiCEC,QAAD,IAAc;AAC7B,UAAI;AAACd,QAAAA;AAAD,UAAa,KAAKP,KAAtB;;AACA,UAAIqB,QAAQ,IAAI,CAACC,CAAC,CAACC,OAAF,CAAUF,QAAV,CAAjB,EAAqC;AACjC,YAAIG,IAAI,GAAGjB,QAAQ,KAAKM,SAAS,CAACC,EAAvB,GACPO,QAAQ,CAACI,YAAT,CAAsBC,OADf,GACyBL,QAAQ,CAACI,YAAT,CAAsBE,OAD1D;AAEA,YAAIC,IAAI,GAAGrB,QAAQ,KAAKM,SAAS,CAACC,EAAvB,GACPlB,MAAM,CAACiC,IAAP,CAAY,CAACR,QAAQ,CAACO,IAAV,GAAgB,IAA5B,EAAkCE,MAAlC,CAAyC,kBAAzC,CADO,GAGPlC,MAAM,CAACiC,IAAP,CAAY,CAACR,QAAD,GAAU,IAAtB,EAA4BU,MAA5B,CAAmC,IAAnC,EAAyCD,MAAzC,CAAgD,kBAAhD,CAHJ;AAIA,eAAQ,GAAEN,IAAK,MAAKI,IAAK,EAAzB;AAEH;;AACD,aAAO,EAAP;AACH,KA9CiB;;AAAA,SAgDlBI,eAhDkB,GAgDCX,QAAD,IAAc;AAC5B,UAAI;AAACd,QAAAA;AAAD,UAAa,KAAKP,KAAtB;;AACA,UAAGqB,QAAQ,IAAI,CAACC,CAAC,CAACC,OAAF,CAAUF,QAAV,CAAhB,EAAoC;AAChC,YAAIY,IAAI,GAAG1B,QAAQ,KAAKM,SAAS,CAACC,EAAvB,GACN,GAAEO,QAAQ,CAACa,UAAT,CAAoBC,QAAS,IAAGd,QAAQ,CAACa,UAAT,CAAoBE,SAAU,EAD1D,GAGN,GAAEf,QAAQ,CAACa,UAAT,CAAoBE,SAAU,IAAGf,QAAQ,CAACa,UAAT,CAAoBC,QAAS,EAHrE;AAIA,eAAOF,IAAP;AAEH;;AACD,aAAO,EAAP;AACH,KA3DiB;;AAAA,SAsElBI,mBAtEkB,GAsEI,CAACC,KAAD,EAAQC,EAAR,KAAgB;AAClC,UAAIC,UAAU,GAAGF,KAAK,CAACG,MAAN,CAAaxB,KAA9B;AACA,UAAIyB,SAAS,GAAG,EAAC,GAAG,KAAKvC;AAAT,OAAhB;AACAuC,MAAAA,SAAS,CAACH,EAAD,CAAT,GAAgBC,UAAhB;AACA,WAAKG,QAAL,CAAc,EACV,GAAGD;AADO,OAAd;AAGH,KA7EiB;;AAAA,SA+ElBE,mBA/EkB,GA+EKN,KAAD,IAAW;AAC7B,WAAKK,QAAL,CAAc;AACVE,QAAAA,KAAK,EAAEP,KAAK,CAACG,MAAN,CAAaxB;AADV,OAAd;AAGH,KAnFiB;;AAAA,SAoFlB6B,kBApFkB,GAoFIC,cAAD,IAAoB;AACrC,WAAKJ,QAAL,CAAc;AAACK,QAAAA,cAAc,EAAED;AAAjB,OAAd;AACH,KAtFiB;;AAAA,SAuFlBE,mBAvFkB,GAuFI,MAAOX,KAAP,IAAiB;AACnC,UAAIjC,IAAI,GAAGiC,KAAK,CAACG,MAAN,CAAaS,KAAxB;AACA,UAAIC,IAAI,GAAG9C,IAAI,CAAC,CAAD,CAAf;;AACA,UAAG8C,IAAH,EAAS;AACL,YAAIC,MAAM,GAAG,MAAMvD,WAAW,CAACwD,SAAZ,CAAsBF,IAAtB,CAAnB;AACA,aAAKR,QAAL,CAAc;AACVW,UAAAA,SAAS,EAAEF;AADD,SAAd;AAGH;AACJ,KAhGiB;;AAAA,SAiGlBG,gBAjGkB,GAiGC,MAAM;AACrB,WAAKvD,KAAL,CAAWE,UAAX,CAAsB,KAAKC,KAA3B;AACH,KAnGiB;;AAEd,SAAKA,KAAL,GAAa;AACTqD,MAAAA,gBAAgB,EAAE,EADT;AAETF,MAAAA,SAAS,EAAE;AAFF,KAAb;AAKH;;AAIsB,QAAjBG,iBAAiB,GAAE;AACrB,QAAI,KAAKzD,KAAL,CAAW0D,SAAf,EAAyB;AACrB,WAAKf,QAAL,CAAc;AACVE,QAAAA,KAAK,EAAE,KAAK7C,KAAL,CAAW0D,SAAX,CAAqBb;AADlB,OAAd;AAGH;AACJ;;AA4CuB,QAAlBc,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAgC;AACpD,QAAIF,SAAS,CAACF,SAAV,KAAwBE,SAAS,CAACF,SAAtC,EAAgD;AAC5C,WAAKf,QAAL,CAAc;AACVE,QAAAA,KAAK,EAAE,KAAK7C,KAAL,CAAW0D,SAAX,CAAqBb;AADlB,OAAd;AAGH;AAEJ;;AAgCDkB,EAAAA,MAAM,GAAE;AACJ;AACA,QAAI;AAACC,MAAAA,WAAD;AAAcC,MAAAA,iBAAd;AAAiCP,MAAAA,SAAjC;AAA4CxD,MAAAA;AAA5C,QAA0D,KAAKF,KAAnE;AACA,QAAIkE,QAAQ,GAAG,EAAf;;AACA,QAAI7C,QAAQ,IAAI,CAACC,CAAC,CAACC,OAAF,CAAUF,QAAV,CAAjB,EAAqC;AACjC6C,MAAAA,QAAQ,GAAG7C,QAAQ,CAAC6C,QAApB;AACH;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,KAAKjE,KAApC;AACA,wBACI,QAAC,KAAD;AACI,MAAA,MAAM,EAAE6D,WADZ;AAEI,MAAA,SAAS,EAAE,yBAFf;AAGI,MAAA,IAAI,EAAC,IAHT;AAII,MAAA,QAAQ,MAJZ,CAKI;AALJ;AAAA,8BAOI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAS,UAAA,IAAI,EAAC,QAAd;AAAuB,UAAA,SAAS,EAAC,OAAjC;AAAyC,wBAAW,OAApD;AAA4D,UAAA,OAAO,EAAEK,gBAArE;AAAA,iCACI;AAAM,2BAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAaI,QAAC,SAAD;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,SAAS,EAAC,cAAjB;AAAgC,cAAA,IAAI,EAAE,OAAtC;AAA8C,cAAA,KAAK,EAAE,KAAKlE,KAAL,CAAWmE,KAAhE;AACI,cAAA,QAAQ,EAAKhC,KAAD,IAAW,KAAKM,mBAAL,CAAyBN,KAAzB;AAD3B;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,SAAS,EAAC,mBAAjB;AAAqC,cAAA,IAAI,EAAC,MAA1C;AACI,cAAA,QAAQ,EAAGA,KAAD,IAAW,KAAKW,mBAAL,CAAyBX,KAAzB;AADzB;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAbJ,eA4BI,QAAC,WAAD;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,OAAO,EAAEpC,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAC+D,EAD/D,eAEI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,WAAd;AAA0B,UAAA,OAAO,EAAEmE,gBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAmCH;;AAhJgC;;AAkJrC,MAAME,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHC,IAAAA,UAAU,EAAE,MAAMD,QAAQ,CAACE,OAAO,CAACC,gBAAR,EAAD;AADvB,GAAP;AAGH,CAJD;;AAKA,MAAMC,eAAe,GAAGzE,KAAK,IAAI;AAC7B,SAAO;AACHI,IAAAA,QAAQ,EAAEJ,KAAK,CAAC0E,GAAN,CAAUtE,QADjB;AAEHuE,IAAAA,OAAO,EAAE3E,KAAK,CAAC4E,KAAN,CAAYD;AAFlB,GAAP;AAIH,CALD;;AAMA,eAAe1F,OAAO,CAACwF,eAAD,EAAkBL,kBAAlB,CAAP,CAA6CzE,YAA7C,CAAf","sourcesContent":["import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\nimport './RemedyModal.scss';\nimport {Modal, Button, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\nimport {toast} from \"react-toastify\";\nimport moment from \"moment\";\nimport {CommonUtils} from \"../../../utils\";\n\nclass BookingModal extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            ElementInternals: '',\n            imgBase64: '',\n        \n        }\n    }\n    handleSemdRemedy = ()=> {\n        this.props.sendRemedy(this.state)\n    }\n    async componentDidMount(){\n        if (this.props.dataModal){\n            this.setState({\n                email: this.props.dataModal.email\n            })\n        }\n    }\n\n    buildDataGender = (data) => {\n        let result = [];\n        let language = this.props.language;\n        if(data && data.length > 0){\n            data.map(item => {\n                let object = {};\n                object.label = language === LANGUAGES.VI ? item.valueVI : item.valueEN;\n                object.value = item.keyMap;\n                result.push(object)\n            })\n        }\n        return result;\n    }\n\n    buildTimeBooking = (dataTime) => {\n        let {language} = this.props;\n        if (dataTime && !_.isEmpty(dataTime)){\n            let time = language === LANGUAGES.VI ?\n                dataTime.timeTypeData.valueVi : dataTime.timeTypeData.valueEn;\n            let date = language === LANGUAGES.VI ?\n                moment.unix(+dataTime.date /1000).format('dddd- DD/MM/YYYY')\n                :\n                moment.unix(+dataTime/1000).locale('en').format('ddd - MM/DD/YYYY');\n            return `${time} - ${date}`    \n\n        }\n        return ''\n    }\n\n    buildDoctorName = (dataTime) => {\n        let {language} = this.props;\n        if(dataTime && !_.isEmpty(dataTime)){\n            let name = language === LANGUAGES.VI ?\n                `${dataTime.doctorData.lastName} ${dataTime.doctorData.firstName}`\n                :\n                `${dataTime.doctorData.firstName} ${dataTime.doctorData.lastName}`\n            return name;\n\n        }\n        return ''\n    }\n\n    async componentDidUpdate(prevProps, prevState, snapshot){\n        if (prevProps.dataModal !== prevProps.dataModal){\n            this.setState({\n                email: this.props.dataModal.email\n            })\n        }\n        \n    }\n\n    handleOnchangeInput = (event, id) =>  {\n        let valueInput = event.target.value;\n        let stateCopy = {...this.state};\n        stateCopy[id] = valueInput;\n        this.setState({\n            ...stateCopy\n        })\n    }\n\n    handleOnchangeEmail = (event) => {\n        this.setState({\n            email: event.target.value\n        })\n    }\n    handleChangeSelect = (selectedOption) => {\n        this.setState({selectedGender: selectedOption});\n    }\n    handleOnchangeImage = async (event) => {\n        let data = event.target.files;\n        let file = data[0];\n        if(file) {\n            let base64 = await CommonUtils.getBase64(file);\n            this.setState({\n                imgBase64: base64\n            })\n        }\n    }\n    handleSendRemedy = () => {\n        this.props.sendRemedy(this.state)\n    }\n    render(){\n        //toggle={}\n        let {isOpenModal, closeBookingClose, dataModal, sendRemedy} = this.props;\n        let doctorId = '';\n        if (dataTime && !_.isEmpty(dataTime)){\n            doctorId = dataTime.doctorId\n        }\n        console.log('check datatime:', this.state);\n        return (\n            <Modal\n                isOpen={isOpenModal}\n                className={'booking-modal-container'}\n                size=\"md\"\n                centered\n                //backdrop={true}\n            >\n                <div className=\"modal-header\">\n                    <h5 className=\"modal-title\">Gui hoa don kham benh thanh cong</h5>\n                    <button  type=\"button\" className=\"close\" aria-lable=\"close\" onClick={closeRemedyModal}>\n                        <span aria-hidden=\"true\">X</span>\n                    </button>\n                </div>\n                <ModalBody>\n                    <div className=\"row\">\n                        <div className=\"col-6 form-group\">\n                            <label>Email benh nhan</label>\n                            <input className=\"form-control\" type =\"email\" value={this.state.enail}\n                                onChange = {(event) => this.handleOnchangeEmail(event)} />\n                        </div>\n                        <div className=\"col-6 form-group\">\n                            <label>Chon file don thuoc</label>\n                            <input className=\"form-control-file\" type=\"file\"\n                                onChange={(event) => this.handleOnchangeImage(event)}\n                                />\n                        </div>\n                    </div>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"primary\" onClick={sendRemedy}>Send</Button>{''}\n                    <Button color=\"secondary\" onClick={closeRemedyModal}>cancel</Button>\n                </ModalFooter>\n            </Modal>    \n        );\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        getGenders: () => dispatch(actions.fetchGenderStart()),\n    };\n};\nconst mapStateToProps = state => {\n    return {\n        language: state.app.language,\n        genders: state.admin.genders,\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(BookingModal);"]},"metadata":{},"sourceType":"module"}