{"ast":null,"code":"import actionTypes from '../actions/actionTypes';\nconst initialState = {\n  isLoadingGender: false,\n  genders: [],\n  roles: [],\n  positions: [],\n  users: [],\n  topDoctors: [],\n  allDoctors: [],\n  allScheduleTime: [],\n  allRequiredDoctorInfor: []\n};\n\nconst adminReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_GENDER_START:\n      let copyState = { ...state\n      };\n      copyState.isLoadingGender = true;\n      return { ...copyState\n      };\n\n    case actionTypes.FETCH_GENDER_SUCCESS:\n      state.genders = action.data;\n      state.isLoadingGender = false;\n      return { ...state\n      };\n\n    case actionTypes.FETCH_GENDER_FAIDED:\n      state.isLoadingGender = false;\n      state.genders = [];\n      return { ...state\n      };\n\n    case actionTypes.FETCH_POSITION_SUCCESS:\n      state.positions = action.data;\n      return { ...state\n      };\n\n    case actionTypes.FETCH_POSITION_FAIDED:\n      state.positions = [];\n      return { ...state\n      };\n\n    case actionTypes.FETCH_ROLE_SUCCESS:\n      state.roles = action.data;\n      return { ...state\n      };\n\n    case actionTypes.FETCH_ROLE_FAIDED:\n      state.roles = [];\n      return { ...state\n      };\n\n    case actionTypes.FETCH_ALL_USERS_SUCCESS:\n      state.users = action.users;\n      return { ...state\n      };\n\n    case actionTypes.FETCH_ALL_USERS_FAILDED:\n      state.users = [];\n      return { ...state\n      };\n\n    case actionTypes.FETCH_TOP_DOCTORS_SUCCESS:\n      state.topDoctors = action.dataDoctors;\n      return { ...state\n      };\n\n    case actionTypes.FETCH_TOP_DOCTORS_FAILDED:\n      state.topDoctors = [];\n      return { ...state\n      };\n\n    case actionTypes.FETCH_ALL_DOCTORS_SUCCESS:\n      state.allDoctors = action.dataDr;\n      return { ...state\n      };\n\n    case actionTypes.FETCH_ALL_DOCTORS_FAILED:\n      state.allDoctors = [];\n      return { ...state\n      };\n\n    case actionTypes.FETCH_ALLCODE_SCHEDULE_TIME_SUCCESS:\n      state.allScheduleTime = action.dataTime;\n      return { ...state\n      };\n\n    case actionTypes.FETCH_ALLCODE_SCHEDULE_TIME_FAILDED:\n      state.allScheduleTime = [];\n      return { ...state\n      };\n\n    case actionTypes.FETCH_REQUIRED_DOCTOR_INFOR_SUCCESS:\n      state.allRequiredDoctorInfor = action.data;\n      return { ...state\n      };\n\n    case actionTypes.FETCH_REQUIRED_DOCTOR_INFOR_FAIDED:\n      state.allRequiredDoctorInfor = [];\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default adminReducer;","map":{"version":3,"sources":["/home/asus2/Frontend-React.JS-QuickStart/src/store/reducers/adminReducer.js"],"names":["actionTypes","initialState","isLoadingGender","genders","roles","positions","users","topDoctors","allDoctors","allScheduleTime","allRequiredDoctorInfor","adminReducer","state","action","type","FETCH_GENDER_START","copyState","FETCH_GENDER_SUCCESS","data","FETCH_GENDER_FAIDED","FETCH_POSITION_SUCCESS","FETCH_POSITION_FAIDED","FETCH_ROLE_SUCCESS","FETCH_ROLE_FAIDED","FETCH_ALL_USERS_SUCCESS","FETCH_ALL_USERS_FAILDED","FETCH_TOP_DOCTORS_SUCCESS","dataDoctors","FETCH_TOP_DOCTORS_FAILDED","FETCH_ALL_DOCTORS_SUCCESS","dataDr","FETCH_ALL_DOCTORS_FAILED","FETCH_ALLCODE_SCHEDULE_TIME_SUCCESS","dataTime","FETCH_ALLCODE_SCHEDULE_TIME_FAILDED","FETCH_REQUIRED_DOCTOR_INFOR_SUCCESS","FETCH_REQUIRED_DOCTOR_INFOR_FAIDED"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,wBAAxB;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,eAAe,EAAE,KADA;AAEjBC,EAAAA,OAAO,EAAC,EAFS;AAGjBC,EAAAA,KAAK,EAAC,EAHW;AAIjBC,EAAAA,SAAS,EAAC,EAJO;AAKjBC,EAAAA,KAAK,EAAC,EALW;AAMjBC,EAAAA,UAAU,EAAC,EANM;AAOjBC,EAAAA,UAAU,EAAE,EAPK;AAQjBC,EAAAA,eAAe,EAAC,EARC;AASjBC,EAAAA,sBAAsB,EAAE;AATP,CAArB;;AAYA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGX,YAAT,EAAuBY,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKd,WAAW,CAACe,kBAAjB;AACI,UAAIC,SAAS,GAAG,EAAC,GAAGJ;AAAJ,OAAhB;AACAI,MAAAA,SAAS,CAACd,eAAV,GAA4B,IAA5B;AACA,aAAO,EACH,GAAGc;AADA,OAAP;;AAGJ,SAAKhB,WAAW,CAACiB,oBAAjB;AACIL,MAAAA,KAAK,CAACT,OAAN,GAAgBU,MAAM,CAACK,IAAvB;AACAN,MAAAA,KAAK,CAACV,eAAN,GAAwB,KAAxB;AACA,aAAO,EACH,GAAGU;AADA,OAAP;;AAGJ,SAAKZ,WAAW,CAACmB,mBAAjB;AACIP,MAAAA,KAAK,CAACV,eAAN,GAAwB,KAAxB;AACAU,MAAAA,KAAK,CAACT,OAAN,GAAgB,EAAhB;AACA,aAAO,EACH,GAAGS;AADA,OAAP;;AAGJ,SAAKZ,WAAW,CAACoB,sBAAjB;AACIR,MAAAA,KAAK,CAACP,SAAN,GAAkBQ,MAAM,CAACK,IAAzB;AACA,aAAO,EACH,GAAGN;AADA,OAAP;;AAGJ,SAAKZ,WAAW,CAACqB,qBAAjB;AACIT,MAAAA,KAAK,CAACP,SAAN,GAAkB,EAAlB;AACA,aAAO,EACH,GAAGO;AADA,OAAP;;AAGJ,SAAKZ,WAAW,CAACsB,kBAAjB;AACIV,MAAAA,KAAK,CAACR,KAAN,GAAcS,MAAM,CAACK,IAArB;AACA,aAAO,EACH,GAAGN;AADA,OAAP;;AAGJ,SAAKZ,WAAW,CAACuB,iBAAjB;AACIX,MAAAA,KAAK,CAACR,KAAN,GAAc,EAAd;AACA,aAAO,EACH,GAAGQ;AADA,OAAP;;AAGJ,SAAKZ,WAAW,CAACwB,uBAAjB;AACIZ,MAAAA,KAAK,CAACN,KAAN,GAAcO,MAAM,CAACP,KAArB;AACA,aAAO,EACH,GAAGM;AADA,OAAP;;AAGJ,SAAKZ,WAAW,CAACyB,uBAAjB;AACIb,MAAAA,KAAK,CAACN,KAAN,GAAc,EAAd;AACA,aAAO,EACH,GAAGM;AADA,OAAP;;AAGJ,SAAKZ,WAAW,CAAC0B,yBAAjB;AACId,MAAAA,KAAK,CAACL,UAAN,GAAmBM,MAAM,CAACc,WAA1B;AACA,aAAO,EACH,GAAGf;AADA,OAAP;;AAIJ,SAAKZ,WAAW,CAAC4B,yBAAjB;AACIhB,MAAAA,KAAK,CAACL,UAAN,GAAmB,EAAnB;AACA,aAAO,EACH,GAAGK;AADA,OAAP;;AAGJ,SAAKZ,WAAW,CAAC6B,yBAAjB;AACIjB,MAAAA,KAAK,CAACJ,UAAN,GAAmBK,MAAM,CAACiB,MAA1B;AACA,aAAO,EACH,GAAGlB;AADA,OAAP;;AAGJ,SAAKZ,WAAW,CAAC+B,wBAAjB;AACInB,MAAAA,KAAK,CAACJ,UAAN,GAAmB,EAAnB;AACA,aAAO,EACH,GAAGI;AADA,OAAP;;AAGJ,SAAKZ,WAAW,CAACgC,mCAAjB;AACIpB,MAAAA,KAAK,CAACH,eAAN,GAAwBI,MAAM,CAACoB,QAA/B;AACA,aAAM,EACF,GAAGrB;AADD,OAAN;;AAGJ,SAAKZ,WAAW,CAACkC,mCAAjB;AACItB,MAAAA,KAAK,CAACH,eAAN,GAAuB,EAAvB;AACA,aAAO,EACH,GAAGG;AADA,OAAP;;AAGJ,SAAKZ,WAAW,CAACmC,mCAAjB;AACIvB,MAAAA,KAAK,CAACF,sBAAN,GAA8BG,MAAM,CAACK,IAArC;AACA,aAAO,EACH,GAAGN;AADA,OAAP;;AAGJ,SAAKZ,WAAW,CAACoC,kCAAjB;AACIxB,MAAAA,KAAK,CAACF,sBAAN,GAA8B,EAA9B;AACA,aAAO,EACH,GAAGE;AADA,OAAP;;AAGJ;AACI,aAAOA,KAAP;AA3FR;AA6FH,CA9FD;;AA+FA,eAAeD,YAAf","sourcesContent":["import actionTypes from '../actions/actionTypes';\r\nconst initialState = {\r\n    isLoadingGender: false,\r\n    genders:[],\r\n    roles:[],\r\n    positions:[],\r\n    users:[],\r\n    topDoctors:[],\r\n    allDoctors: [],\r\n    allScheduleTime:[],\r\n    allRequiredDoctorInfor: [],\r\n}\r\n\r\nconst adminReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_GENDER_START:\r\n            let copyState = {...state};\r\n            copyState.isLoadingGender = true;\r\n            return {\r\n                ...copyState\r\n            }\r\n        case actionTypes.FETCH_GENDER_SUCCESS:\r\n            state.genders = action.data;\r\n            state.isLoadingGender = false;\r\n            return {\r\n                ...state\r\n            }\r\n        case actionTypes.FETCH_GENDER_FAIDED:\r\n            state.isLoadingGender = false;\r\n            state.genders = [];\r\n            return {\r\n                ...state\r\n            }\r\n        case actionTypes.FETCH_POSITION_SUCCESS:\r\n            state.positions = action.data;\r\n            return {\r\n                ...state\r\n            }\r\n        case actionTypes.FETCH_POSITION_FAIDED:\r\n            state.positions = [];\r\n            return {\r\n                ...state\r\n            }\r\n        case actionTypes.FETCH_ROLE_SUCCESS:\r\n            state.roles = action.data;\r\n            return {\r\n                ...state\r\n            }\r\n        case actionTypes.FETCH_ROLE_FAIDED:\r\n            state.roles = [];\r\n            return {\r\n                ...state\r\n            }\r\n        case actionTypes.FETCH_ALL_USERS_SUCCESS:\r\n            state.users = action.users;\r\n            return {\r\n                ...state\r\n            }\r\n        case actionTypes.FETCH_ALL_USERS_FAILDED:\r\n            state.users = [];\r\n            return {\r\n                ...state\r\n            }\r\n        case actionTypes.FETCH_TOP_DOCTORS_SUCCESS:\r\n            state.topDoctors = action.dataDoctors;\r\n            return {\r\n                ...state\r\n            }\r\n            \r\n        case actionTypes.FETCH_TOP_DOCTORS_FAILDED:\r\n            state.topDoctors = [];\r\n            return {\r\n                ...state\r\n            }\r\n        case actionTypes.FETCH_ALL_DOCTORS_SUCCESS:\r\n            state.allDoctors = action.dataDr;\r\n            return {\r\n                ...state\r\n            }\r\n        case actionTypes.FETCH_ALL_DOCTORS_FAILED:\r\n            state.allDoctors = [];\r\n            return {\r\n                ...state\r\n            }\r\n        case actionTypes.FETCH_ALLCODE_SCHEDULE_TIME_SUCCESS:\r\n            state.allScheduleTime = action.dataTime;\r\n            return{\r\n                ...state\r\n            }\r\n        case actionTypes.FETCH_ALLCODE_SCHEDULE_TIME_FAILDED:\r\n            state.allScheduleTime= [];\r\n            return {\r\n                ...state\r\n            }    \r\n        case actionTypes.FETCH_REQUIRED_DOCTOR_INFOR_SUCCESS:\r\n            state.allRequiredDoctorInfor= action.data;\r\n            return {\r\n                ...state\r\n            }       \r\n        case actionTypes.FETCH_REQUIRED_DOCTOR_INFOR_FAIDED:\r\n            state.allRequiredDoctorInfor= [];\r\n            return {\r\n                ...state\r\n            }    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default adminReducer;"]},"metadata":{},"sourceType":"module"}