{"ast":null,"code":"var _jsxFileName = \"/home/asus2/Frontend-React.JS-QuickStart/src/containers/System/Doctor/ManagePatient.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\nimport './ManagePatient.scss';\nimport DatePicker from \"../../../components/Input/DatePicker\";\nimport { getAllPatientForDoctor, postSendRemedy } from '../../../services/userService';\nimport moment from \"moment\";\nimport { LANGUAGES } from '../../../utils';\nimport RemedyModal from './RemedyModal';\nimport { toast } from 'react-toastify';\nimport LoadingOverlay from 'react-loading-overlay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ManagePatient extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getDataPatient = async () => {\n      let {\n        user\n      } = this.props;\n      let {\n        currentDate\n      } = this.state;\n      let formatedDate = new Date(currentDate).getTime();\n      let res = await getAllPatientForDoctor({\n        doctorId: user.id,\n        date: formatedDate\n      });\n\n      if (res && res.errCode === 0) {\n        this.setState({\n          dataPatient: res.data\n        });\n      }\n    };\n\n    this.handleOnchangeDatePicker = date => {\n      this.setState({\n        currentDate: date[0]\n      }, async () => {\n        await this.getDataPatient();\n      });\n    };\n\n    this.handleBtnConfirm = item => {\n      let data = {\n        doctorId: item.doctorId,\n        patientId: item.patientId,\n        email: item.timeType,\n        patientName: item.patientData.firstName\n      };\n      this.setState({\n        isOpenRemedyModal: true,\n        dataModal: data\n      });\n    };\n\n    this.closeRemedyModal = () => {\n      this.setState({\n        isOpenRemedyModal: false,\n        dataModal: {}\n      });\n    };\n\n    this.sendRemedy = async dataChild => {\n      let {\n        dataModal\n      } = this.state;\n      this.setState({\n        isShowLoading: true\n      });\n      let res = await postSendRemedy({\n        email: dataChild.email,\n        imgBase64: dataChild.imgBase64,\n        doctorId: dataModal.doctorId,\n        patientId: dataModal.patientId,\n        timeType: dataModal.timeType,\n        language: this.props.language,\n        patientName: dataModal.patientName\n      });\n\n      if (res && rerCode === 0) {\n        this.setState({\n          isShowLoading: false\n        });\n        toast.success('Send remady success:');\n        this.closeRemedyModal();\n        await this.getDataPatient();\n      } else {\n        this.setState({\n          isShowLoading: false\n        });\n        toast.error('Something wrongs');\n        console.log('error send remedy:', res);\n      }\n    };\n\n    this.state = {\n      currentDate: moment(new Date()).startOf('day').valueOf(),\n      dataPatient: [],\n      isOpenRemedyModal: false,\n      dataModal: {},\n      isShowLoading: false\n    };\n  }\n\n  async componentDidMount() {\n    this.getDataPatient();\n  }\n\n  async componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.language !== prevProps.language) {}\n  }\n\n  render() {\n    console.log('patient', this.state);\n    let {\n      dataPatient,\n      isOpenRemedyModal,\n      dataModal\n    } = this.state;\n    let {\n      language\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n        active: this.state.isShowLoading,\n        spinner: true,\n        text: \"loading...\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"manage-patient-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"m-p-title\",\n            children: \"Quan ly benh nhan kham benh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"manage-patient-body row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4 form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Chon kham ngay\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                onChange: this.handleOnchangeDatePicker,\n                className: \"form-control\",\n                value: this.state.currentDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 table-manage-patient\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                style: {\n                  width: '100%'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"STT\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"thoi gian\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Ho va ten\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 139,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Dia chi\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Gioi tinh\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Actions\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 45\n                  }, this), dataPatient && dataPatient.length > 0 ? dataPatient.map((item, index) => {\n                    let time = language === LANGUAGES.VI ? item.timeTypeDataPatient.valueVi : item.timeTypeDataPatient.valueEn;\n                    let gender = language === LANGUAGES.VI ? item.patientData.genderData.valueVi : item.patientData.genderData.valueEn;\n                    return /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: index + 1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 152,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: item.timeTypeDataPatient.valueVI\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 153,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: item.patientData.firstName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 154,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: item.patientData.firstName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 155,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: item.patientData.genderData.valueVi\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 156,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"mp-btn-confirm\",\n                          onClick: () => this.handleBtnConfirm(item),\n                          children: \"Xac nhan\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 158,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"mp-btn-remedy\",\n                          onClick: () => this.handleBtnRemedy(),\n                          children: \"Gui hoa don\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 161,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 157,\n                        columnNumber: 61\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 151,\n                      columnNumber: 57\n                    }, this);\n                  }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: /*#__PURE__*/_jsxDEV(\"td\", {\n                      colSpan: \"6\",\n                      style: {\n                        textAlign: \"center\"\n                      },\n                      children: \"no data\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 170,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(RemedyModal, {\n          isOpenModal: isOpenRemedyModal,\n          dataModal: dataModal,\n          closeRemedyModal: this.closeRemedyModal,\n          sendRemedy: this.sendRemedy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language,\n    user: state.user.userInfo\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManagePatient);","map":{"version":3,"sources":["/home/asus2/Frontend-React.JS-QuickStart/src/containers/System/Doctor/ManagePatient.js"],"names":["React","Component","connect","FormattedMessage","DatePicker","getAllPatientForDoctor","postSendRemedy","moment","LANGUAGES","RemedyModal","toast","LoadingOverlay","ManagePatient","constructor","props","getDataPatient","user","currentDate","state","formatedDate","Date","getTime","res","doctorId","id","date","errCode","setState","dataPatient","data","handleOnchangeDatePicker","handleBtnConfirm","item","patientId","email","timeType","patientName","patientData","firstName","isOpenRemedyModal","dataModal","closeRemedyModal","sendRemedy","dataChild","isShowLoading","imgBase64","language","rerCode","success","error","console","log","startOf","valueOf","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","width","length","map","index","time","VI","timeTypeDataPatient","valueVi","valueEn","gender","genderData","valueVI","handleBtnRemedy","textAlign","mapStateToProps","app","userInfo","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\nimport './ManagePatient.scss';\nimport DatePicker from \"../../../components/Input/DatePicker\";\nimport {getAllPatientForDoctor, postSendRemedy} from '../../../services/userService';\nimport moment from \"moment\";\nimport {LANGUAGES} from '../../../utils';\nimport RemedyModal from './RemedyModal';\nimport {toast} from 'react-toastify';\nimport LoadingOverlay from 'react-loading-overlay';\n\nclass ManagePatient extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            currentDate: moment(new Date()).startOf('day').valueOf(),\n            dataPatient: [],\n            isOpenRemedyModal: false,\n            dataModal: {},\n            isShowLoading: false\n        } \n    }\n\n    async componentDidMount(){\n        this.getDataPatient()\n    }\n\n    getDataPatient = async () => {\n        let {user} = this.props;\n        let {currentDate} = this.state;\n        let formatedDate = new Date(currentDate).getTime();\n        let res = await getAllPatientForDoctor({\n            doctorId: user.id,\n            date: formatedDate\n        })\n\n        if(res && res.errCode === 0){\n            this.setState({\n                dataPatient: res.data\n            })\n        }\n    }\n\n    async componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.language !== prevProps.language){\n\n        }\n    }\n    \n    handleOnchangeDatePicker = (date) => {\n        this.setState({\n            currentDate: date[0]\n        }, async()=> {\n            await this.getDataPatient()\n        })\n    }\n\n    handleBtnConfirm = (item) => {\n        let data = {\n            doctorId: item.doctorId,\n            patientId: item.patientId,\n            email: item.timeType,\n            patientName: item.patientData.firstName\n        }\n\n        this.setState({\n            isOpenRemedyModal:  true,\n            dataModal: data\n        })\n    }\n\n    closeRemedyModal = () => {\n        this.setState({\n            isOpenRemedyModal: false,\n            dataModal: {}\n        })\n    }\n\n    sendRemedy = async (dataChild) => {\n        let {dataModal} = this.state;\n        this.setState({\n            isShowLoading: true\n        })\n        let res = await postSendRemedy({\n            email: dataChild.email,\n            imgBase64: dataChild.imgBase64,\n            doctorId: dataModal.doctorId,\n            patientId: dataModal.patientId,\n            timeType: dataModal.timeType,\n            language: this.props.language,\n            patientName: dataModal.patientName\n        });\n        if(res && rerCode === 0){\n            this.setState({\n                isShowLoading: false\n            })\n            toast.success('Send remady success:');\n            this.closeRemedyModal();\n            await this.getDataPatient();\n        }else {\n            this.setState({\n                isShowLoading: false\n            })\n            toast.error('Something wrongs');\n            console.log('error send remedy:', res)\n        }\n    }\n\n    render() {\n        console.log('patient', this.state)\n        let {dataPatient , isOpenRemedyModal, dataModal} = this.state;\n        let {language} = this.props;\n        return(\n            <>\n                <LoadingOverlay\n                    active={this.state.isShowLoading}\n                    spinner\n                    text='loading...'>\n                        <div className=\"manage-patient-container\">\n                            <div className=\"m-p-title\">\n                                Quan ly benh nhan kham benh\n                            </div>\n                            <div className=\"manage-patient-body row\">\n                                <div className=\"col-4 form-group\">\n                                    <label>Chon kham ngay</label>\n                                    <DatePicker\n                                        onChange = {this.handleOnchangeDatePicker}\n                                        className = \"form-control\"\n                                        value = {this.state.currentDate}\n                                    />\n                                </div>\n                                <div className=\"col-12 table-manage-patient\">\n                                    <table style={{width: '100%'}}>\n                                        <tbody>\n                                            <tr>\n                                                <th>STT</th>\n                                                <th>thoi gian</th>\n                                                <th>Ho va ten</th>\n                                                <th>Dia chi</th>\n                                                <th>Gioi tinh</th>\n                                                <th>Actions</th>\n                                            </tr>\n                                            {dataPatient && dataPatient.length > 0 ?\n                                                dataPatient.map((item, index) => {\n                                                    let time = language === LANGUAGES.VI ?\n                                                        item.timeTypeDataPatient.valueVi : item.timeTypeDataPatient.valueEn;\n                                                    let gender = language === LANGUAGES.VI ?\n                                                        item.patientData.genderData.valueVi : item.patientData.genderData.valueEn;\n                                                    return(\n                                                        <tr key = {index}>\n                                                            <td>{index+1}</td>\n                                                            <td>{item.timeTypeDataPatient.valueVI}</td>\n                                                            <td>{item.patientData.firstName}</td>\n                                                            <td>{item.patientData.firstName}</td>\n                                                            <td>{item.patientData.genderData.valueVi}</td>\n                                                            <td>\n                                                                <button className=\"mp-btn-confirm\"\n                                                                    onClick={() => this.handleBtnConfirm(item)}>Xac nhan\n                                                                </button>\n                                                                <button className=\"mp-btn-remedy\"\n                                                                    onClick={() => this.handleBtnRemedy()}>Gui hoa don\n                                                                </button>\n                                                            </td>\n                                                        </tr>\n                                                    )\n                                                })\n                                                :\n                                                <tr>\n                                                    <td colSpan=\"6\" style={{textAlign: \"center\"}}>no data</td>\n                                                </tr>\n                                            }\n                                            \n                                        </tbody>\n                                        \n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                        <RemedyModal\n                            isOpenModal = {isOpenRemedyModal}\n                            dataModal={dataModal}\n                            closeRemedyModal={this.closeRemedyModal}\n                            sendRemedy={this.sendRemedy}/>\n                    </LoadingOverlay>\n            </>\n            \n        )\n    }\n    \n}\n\nconst mapStateToProps = state => {\n    return {\n        language: state.app.language,\n        user: state.user.userInfo,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManagePatient)"]},"metadata":{},"sourceType":"module"}